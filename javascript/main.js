(function(a, b) {
    function c(a) {
        var b = G[a] = {},
            c, d, a = a.split(/\s+/);
        c = 0;
        for (d = a.length; c < d; c++) b[a[c]] = !0;
        return b
    }

    function d(a, c, d) {
        if (d === b && 1 === a.nodeType)
            if (d = "data-" + c.replace(O, "-$1").toLowerCase(), d = a.getAttribute(d), "string" === typeof d) {
                try {
                    d = "true" === d ? !0 : "false" === d ? !1 : "null" === d ? null : h.isNumeric(d) ? +d : M.test(d) ? h.parseJSON(d) : d
                } catch (e) {}
                h.data(a, c, d)
            } else d = b;
        return d
    }

    function e(a) {
        for (var b in a)
            if (!("data" === b && h.isEmptyObject(a[b])) && "toJSON" !== b) return !1;
        return !0
    }

    function f(a, b, c) {
        var d =
            b + "defer",
            e = b + "queue",
            f = b + "mark",
            g = h._data(a, d);
        g && ("queue" === c || !h._data(a, e)) && ("mark" === c || !h._data(a, f)) && setTimeout(function() {
            !h._data(a, e) && !h._data(a, f) && (h.removeData(a, d, !0), g.fire())
        }, 0)
    }

    function j() {
        return !1
    }

    function g() {
        return !0
    }

    function k(a, b, c) {
        b = b || 0;
        if (h.isFunction(b)) return h.grep(a, function(a, d) {
            return !!b.call(a, d, a) === c
        });
        if (b.nodeType) return h.grep(a, function(a) {
            return a === b === c
        });
        if ("string" === typeof b) {
            var d = h.grep(a, function(a) {
                return 1 === a.nodeType
            });
            if (Wa.test(b)) return h.filter(b,
                d, !c);
            b = h.filter(b, d)
        }
        return h.grep(a, function(a) {
            return 0 <= h.inArray(a, b) === c
        })
    }

    function m(a) {
        var b = za.split("|"),
            a = a.createDocumentFragment();
        if (a.createElement)
            for (; b.length;) a.createElement(b.pop());
        return a
    }

    function n(a, b) {
        if (1 === b.nodeType && h.hasData(a)) {
            var c, d, e;
            d = h._data(a);
            var f = h._data(b, d),
                g = d.events;
            if (g)
                for (c in delete f.handle, f.events = {}, g) {
                    d = 0;
                    for (e = g[c].length; d < e; d++) h.event.add(b, c, g[c][d])
                }
            f.data && (f.data = h.extend({}, f.data))
        }
    }

    function l(a, b) {
        var c;
        if (1 === b.nodeType) {
            b.clearAttributes &&
                b.clearAttributes();
            b.mergeAttributes && b.mergeAttributes(a);
            c = b.nodeName.toLowerCase();
            if ("object" === c) b.outerHTML = a.outerHTML;
            else if ("input" === c && ("checkbox" === a.type || "radio" === a.type)) {
                if (a.checked && (b.defaultChecked = b.checked = a.checked), b.value !== a.value) b.value = a.value
            } else "option" === c ? b.selected = a.defaultSelected : "input" === c || "textarea" === c ? b.defaultValue = a.defaultValue : "script" === c && b.text !== a.text && (b.text = a.text);
            b.removeAttribute(h.expando);
            b.removeAttribute("_submit_attached");
            b.removeAttribute("_change_attached")
        }
    }

    function p(a) {
        return "undefined" !== typeof a.getElementsByTagName ? a.getElementsByTagName("*") : "undefined" !== typeof a.querySelectorAll ? a.querySelectorAll("*") : []
    }

    function q(a) {
        if ("checkbox" === a.type || "radio" === a.type) a.defaultChecked = a.checked
    }

    function u(a) {
        var b = (a.nodeName || "").toLowerCase();
        "input" === b ? q(a) : "script" !== b && "undefined" !== typeof a.getElementsByTagName && h.grep(a.getElementsByTagName("input"), q)
    }

    function z(a, b, c) {
        var d = "width" === b ? a.offsetWidth : a.offsetHeight,
            e = "width" === b ? 1 : 0;
        if (0 < d) {
            if ("border" !==
                c)
                for (; 4 > e; e += 2) c || (d -= parseFloat(h.css(a, "padding" + V[e])) || 0), d = "margin" === c ? d + (parseFloat(h.css(a, c + V[e])) || 0) : d - (parseFloat(h.css(a, "border" + V[e] + "Width")) || 0);
            return d + "px"
        }
        d = Z(a, b);
        if (0 > d || null == d) d = a.style[b];
        if (oa.test(d)) return d;
        d = parseFloat(d) || 0;
        if (c)
            for (; 4 > e; e += 2) d += parseFloat(h.css(a, "padding" + V[e])) || 0, "padding" !== c && (d += parseFloat(h.css(a, "border" + V[e] + "Width")) || 0), "margin" === c && (d += parseFloat(h.css(a, c + V[e])) || 0);
        return d + "px"
    }

    function s(a) {
        return function(b, c) {
            "string" !== typeof b &&
                (c = b, b = "*");
            if (h.isFunction(c))
                for (var d = b.toLowerCase().split(Aa), e = 0, f = d.length, g, o; e < f; e++) g = d[e], (o = /^\+/.test(g)) && (g = g.substr(1) || "*"), g = a[g] = a[g] || [], g[o ? "unshift" : "push"](c)
        }
    }

    function A(a, c, d, e, f, h) {
        f = f || c.dataTypes[0];
        h = h || {};
        h[f] = !0;
        for (var f = a[f], g = 0, o = f ? f.length : 0, j = a === pa, k; g < o && (j || !k); g++) k = f[g](c, d, e), "string" === typeof k && (!j || h[k] ? k = b : (c.dataTypes.unshift(k), k = A(a, c, d, e, k, h)));
        if ((j || !k) && !h["*"]) k = A(a, c, d, e, "*", h);
        return k
    }

    function v(a, c) {
        var d, e, f = h.ajaxSettings.flatOptions || {};
        for (d in c) c[d] !== b && ((f[d] ? a : e || (e = {}))[d] = c[d]);
        e && h.extend(!0, a, e)
    }

    function r(a, b, c, d) {
        if (h.isArray(b)) h.each(b, function(b, e) {
            c || Xa.test(a) ? d(a, e) : r(a + "[" + ("object" === typeof e ? b : "") + "]", e, c, d)
        });
        else if (!c && "object" === h.type(b))
            for (var e in b) r(a + "[" + e + "]", b[e], c, d);
        else d(a, b)
    }

    function t() {
        try {
            return new a.XMLHttpRequest
        } catch (b) {}
    }

    function x() {
        setTimeout(J, 0);
        return ja = h.now()
    }

    function J() {
        ja = b
    }

    function B(a, b) {
        var c = {};
        h.each(ka.concat.apply([], ka.slice(0, b)), function() {
            c[this] = a
        });
        return c
    }

    function C(a) {
        if (!qa[a]) {
            var b = w.body,
                c = h("<" + a + ">").appendTo(b),
                d = c.css("display");
            c.remove();
            if ("none" === d || "" === d) {
                R || (R = w.createElement("iframe"), R.frameBorder = R.width = R.height = 0);
                b.appendChild(R);
                if (!aa || !R.createElement) aa = (R.contentWindow || R.contentDocument).document, aa.write((h.support.boxModel ? "<!doctype html>" : "") + "<html><body>"), aa.close();
                c = aa.createElement(a);
                aa.body.appendChild(c);
                d = h.css(c, "display");
                b.removeChild(R)
            }
            qa[a] = d
        }
        return qa[a]
    }

    function K(a) {
        return h.isWindow(a) ? a : 9 === a.nodeType ?
            a.defaultView || a.parentWindow : !1
    }
    var w = a.document,
        H = a.navigator,
        D = a.location,
        h = function() {
            function c() {
                if (!d.isReady) {
                    try {
                        w.documentElement.doScroll("left")
                    } catch (a) {
                        setTimeout(c, 1);
                        return
                    }
                    d.ready()
                }
            }
            var d = function(a, b) {
                    return new d.fn.init(a, b, h)
                },
                e = a.jQuery,
                f = a.$,
                h, g = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,
                o = /\S/,
                j = /^\s+/,
                k = /\s+$/,
                l = /^<(\w+)\s*\/?>(?:<\/\1>)?$/,
                m = /^[\],:{}\s]*$/,
                n = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,
                p = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
                q = /(?:^|:|,)(?:\s*\[)+/g,
                u = /(webkit)[ \/]([\w.]+)/,
                I = /(opera)(?:.*version)?[ \/]([\w.]+)/,
                N = /(msie) ([\w.]+)/,
                r = /(mozilla)(?:.*? rv:([\w.]+))?/,
                v = /-([a-z]|[0-9])/ig,
                t = /^-ms-/,
                s = function(a, b) {
                    return (b + "").toUpperCase()
                },
                x = H.userAgent,
                la, ca, Za = Object.prototype.toString,
                ra = Object.prototype.hasOwnProperty,
                sa = Array.prototype.push,
                ia = Array.prototype.slice,
                Ba = String.prototype.trim,
                Ca = Array.prototype.indexOf,
                z = {};
            d.fn = d.prototype = {
                constructor: d,
                init: function(a, c, e) {
                    var y;
                    if (!a) return this;
                    if (a.nodeType) return this.context = this[0] =
                        a, this.length = 1, this;
                    if ("body" === a && !c && w.body) return this.context = w, this[0] = w.body, this.selector = a, this.length = 1, this;
                    if ("string" === typeof a) {
                        if ((y = "<" === a.charAt(0) && ">" === a.charAt(a.length - 1) && 3 <= a.length ? [null, a, null] : g.exec(a)) && (y[1] || !c)) {
                            if (y[1]) return e = (c = c instanceof d ? c[0] : c) ? c.ownerDocument || c : w, (a = l.exec(a)) ? d.isPlainObject(c) ? (a = [w.createElement(a[1])], d.fn.attr.call(a, c, !0)) : a = [e.createElement(a[1])] : (a = d.buildFragment([y[1]], [e]), a = (a.cacheable ? d.clone(a.fragment) : a.fragment).childNodes),
                                d.merge(this, a);
                            if ((c = w.getElementById(y[2])) && c.parentNode) {
                                if (c.id !== y[2]) return e.find(a);
                                this.length = 1;
                                this[0] = c
                            }
                            this.context = w;
                            this.selector = a;
                            return this
                        }
                        return !c || c.jquery ? (c || e).find(a) : this.constructor(c).find(a)
                    }
                    if (d.isFunction(a)) return e.ready(a);
                    a.selector !== b && (this.selector = a.selector, this.context = a.context);
                    return d.makeArray(a, this)
                },
                selector: "",
                jquery: "1.7.2",
                length: 0,
                size: function() {
                    return this.length
                },
                toArray: function() {
                    return ia.call(this, 0)
                },
                get: function(a) {
                    return null == a ? this.toArray() :
                        0 > a ? this[this.length + a] : this[a]
                },
                pushStack: function(a, b, c) {
                    var e = this.constructor();
                    d.isArray(a) ? sa.apply(e, a) : d.merge(e, a);
                    e.prevObject = this;
                    e.context = this.context;
                    "find" === b ? e.selector = this.selector + (this.selector ? " " : "") + c : b && (e.selector = this.selector + "." + b + "(" + c + ")");
                    return e
                },
                each: function(a, b) {
                    return d.each(this, a, b)
                },
                ready: function(a) {
                    d.bindReady();
                    la.add(a);
                    return this
                },
                eq: function(a) {
                    a = +a;
                    return -1 === a ? this.slice(a) : this.slice(a, a + 1)
                },
                first: function() {
                    return this.eq(0)
                },
                last: function() {
                    return this.eq(-1)
                },
                slice: function() {
                    return this.pushStack(ia.apply(this, arguments), "slice", ia.call(arguments).join(","))
                },
                map: function(a) {
                    return this.pushStack(d.map(this, function(b, c) {
                        return a.call(b, c, b)
                    }))
                },
                end: function() {
                    return this.prevObject || this.constructor(null)
                },
                push: sa,
                sort: [].sort,
                splice: [].splice
            };
            d.fn.init.prototype = d.fn;
            d.extend = d.fn.extend = function() {
                var a, c, e, y, f, h = arguments[0] || {},
                    g = 1,
                    o = arguments.length,
                    j = !1;
                "boolean" === typeof h && (j = h, h = arguments[1] || {}, g = 2);
                "object" !== typeof h && !d.isFunction(h) &&
                    (h = {});
                o === g && (h = this, --g);
                for (; g < o; g++)
                    if (null != (a = arguments[g]))
                        for (c in a) e = h[c], y = a[c], h !== y && (j && y && (d.isPlainObject(y) || (f = d.isArray(y))) ? (f ? (f = !1, e = e && d.isArray(e) ? e : []) : e = e && d.isPlainObject(e) ? e : {}, h[c] = d.extend(j, e, y)) : y !== b && (h[c] = y));
                return h
            };
            d.extend({
                noConflict: function(b) {
                    a.$ === d && (a.$ = f);
                    b && a.jQuery === d && (a.jQuery = e);
                    return d
                },
                isReady: !1,
                readyWait: 1,
                holdReady: function(a) {
                    a ? d.readyWait++ : d.ready(!0)
                },
                ready: function(a) {
                    if (!0 === a && !--d.readyWait || !0 !== a && !d.isReady) {
                        if (!w.body) return setTimeout(d.ready,
                            1);
                        d.isReady = !0;
                        !0 !== a && 0 < --d.readyWait || (la.fireWith(w, [d]), d.fn.trigger && d(w).trigger("ready").off("ready"))
                    }
                },
                bindReady: function() {
                    if (!la) {
                        la = d.Callbacks("once memory");
                        if ("complete" === w.readyState) return setTimeout(d.ready, 1);
                        if (w.addEventListener) w.addEventListener("DOMContentLoaded", ca, !1), a.addEventListener("load", d.ready, !1);
                        else if (w.attachEvent) {
                            w.attachEvent("onreadystatechange", ca);
                            a.attachEvent("onload", d.ready);
                            var b = !1;
                            try {
                                b = null == a.frameElement
                            } catch (e) {}
                            w.documentElement.doScroll &&
                                b && c()
                        }
                    }
                },
                isFunction: function(a) {
                    return "function" === d.type(a)
                },
                isArray: Array.isArray || function(a) {
                    return "array" === d.type(a)
                },
                isWindow: function(a) {
                    return null != a && a == a.window
                },
                isNumeric: function(a) {
                    return !isNaN(parseFloat(a)) && isFinite(a)
                },
                type: function(a) {
                    return null == a ? "" + a : z[Za.call(a)] || "object"
                },
                isPlainObject: function(a) {
                    if (!a || "object" !== d.type(a) || a.nodeType || d.isWindow(a)) return !1;
                    try {
                        if (a.constructor && !ra.call(a, "constructor") && !ra.call(a.constructor.prototype, "isPrototypeOf")) return !1
                    } catch (c) {
                        return !1
                    }
                    for (var e in a);
                    return e === b || ra.call(a, e)
                },
                isEmptyObject: function(a) {
                    for (var b in a) return !1;
                    return !0
                },
                error: function(a) {
                    throw Error(a);
                },
                parseJSON: function(b) {
                    if ("string" !== typeof b || !b) return null;
                    b = d.trim(b);
                    if (a.JSON && a.JSON.parse) return a.JSON.parse(b);
                    if (m.test(b.replace(n, "@").replace(p, "]").replace(q, ""))) return (new Function("return " + b))();
                    d.error("Invalid JSON: " + b)
                },
                parseXML: function(c) {
                    if ("string" !== typeof c || !c) return null;
                    var e, y;
                    try {
                        a.DOMParser ? (y = new DOMParser, e = y.parseFromString(c, "text/xml")) :
                            (e = new ActiveXObject("Microsoft.XMLDOM"), e.async = "false", e.loadXML(c))
                    } catch (f) {
                        e = b
                    }(!e || !e.documentElement || e.getElementsByTagName("parsererror").length) && d.error("Invalid XML: " + c);
                    return e
                },
                noop: function() {},
                globalEval: function(b) {
                    b && o.test(b) && (a.execScript || function(b) {
                        a.eval.call(a, b)
                    })(b)
                },
                camelCase: function(a) {
                    return a.replace(t, "ms-").replace(v, s)
                },
                nodeName: function(a, b) {
                    return a.nodeName && a.nodeName.toUpperCase() === b.toUpperCase()
                },
                each: function(a, c, e) {
                    var y, f = 0,
                        h = a.length,
                        g = h === b || d.isFunction(a);
                    if (e)
                        if (g)
                            for (y in a) {
                                if (!1 === c.apply(a[y], e)) break
                            } else
                                for (; f < h && !1 !== c.apply(a[f++], e););
                        else if (g)
                        for (y in a) {
                            if (!1 === c.call(a[y], y, a[y])) break
                        } else
                            for (; f < h && !1 !== c.call(a[f], f, a[f++]););
                    return a
                },
                trim: Ba ? function(a) {
                    return null == a ? "" : Ba.call(a)
                } : function(a) {
                    return null == a ? "" : a.toString().replace(j, "").replace(k, "")
                },
                makeArray: function(a, b) {
                    var c = b || [];
                    if (null != a) {
                        var e = d.type(a);
                        null == a.length || "string" === e || "function" === e || "regexp" === e || d.isWindow(a) ? sa.call(c, a) : d.merge(c, a)
                    }
                    return c
                },
                inArray: function(a,
                    b, c) {
                    var d;
                    if (b) {
                        if (Ca) return Ca.call(b, a, c);
                        d = b.length;
                        for (c = c ? 0 > c ? Math.max(0, d + c) : c : 0; c < d; c++)
                            if (c in b && b[c] === a) return c
                    }
                    return -1
                },
                merge: function(a, c) {
                    var d = a.length,
                        e = 0;
                    if ("number" === typeof c.length)
                        for (var y = c.length; e < y; e++) a[d++] = c[e];
                    else
                        for (; c[e] !== b;) a[d++] = c[e++];
                    a.length = d;
                    return a
                },
                grep: function(a, b, c) {
                    for (var d = [], e, c = !!c, y = 0, f = a.length; y < f; y++) e = !!b(a[y], y), c !== e && d.push(a[y]);
                    return d
                },
                map: function(a, c, e) {
                    var y, f, h = [],
                        g = 0,
                        o = a.length;
                    if (a instanceof d || o !== b && "number" === typeof o &&
                        (0 < o && a[0] && a[o - 1] || 0 === o || d.isArray(a)))
                        for (; g < o; g++) y = c(a[g], g, e), null != y && (h[h.length] = y);
                    else
                        for (f in a) y = c(a[f], f, e), null != y && (h[h.length] = y);
                    return h.concat.apply([], h)
                },
                guid: 1,
                proxy: function(a, c) {
                    if ("string" === typeof c) var e = a[c],
                        c = a,
                        a = e;
                    if (!d.isFunction(a)) return b;
                    var y = ia.call(arguments, 2),
                        e = function() {
                            return a.apply(c, y.concat(ia.call(arguments)))
                        };
                    e.guid = a.guid = a.guid || e.guid || d.guid++;
                    return e
                },
                access: function(a, c, e, y, f, h, g) {
                    var o, j = null == e,
                        k = 0,
                        U = a.length;
                    if (e && "object" === typeof e) {
                        for (k in e) d.access(a,
                            c, k, e[k], 1, h, y);
                        f = 1
                    } else if (y !== b) {
                        o = g === b && d.isFunction(y);
                        j && (o ? (o = c, c = function(a, b, c) {
                            return o.call(d(a), c)
                        }) : (c.call(a, y), c = null));
                        if (c)
                            for (; k < U; k++) c(a[k], e, o ? y.call(a[k], k, c(a[k], e)) : y, g);
                        f = 1
                    }
                    return f ? a : j ? c.call(a) : U ? c(a[0], e) : h
                },
                now: function() {
                    return (new Date).getTime()
                },
                uaMatch: function(a) {
                    a = a.toLowerCase();
                    a = u.exec(a) || I.exec(a) || N.exec(a) || 0 > a.indexOf("compatible") && r.exec(a) || [];
                    return {
                        browser: a[1] || "",
                        version: a[2] || "0"
                    }
                },
                sub: function() {
                    function a(b, c) {
                        return new a.fn.init(b, c)
                    }
                    d.extend(!0,
                        a, this);
                    a.superclass = this;
                    a.fn = a.prototype = this();
                    a.fn.constructor = a;
                    a.sub = this.sub;
                    a.fn.init = function(c, e) {
                        e && e instanceof d && !(e instanceof a) && (e = a(e));
                        return d.fn.init.call(this, c, e, b)
                    };
                    a.fn.init.prototype = a.fn;
                    var b = a(w);
                    return a
                },
                browser: {}
            });
            d.each("Boolean,Number,String,Function,Array,Date,RegExp,Object".split(","), function(a, b) {
                z["[object " + b + "]"] = b.toLowerCase()
            });
            x = d.uaMatch(x);
            x.browser && (d.browser[x.browser] = !0, d.browser.version = x.version);
            d.browser.webkit && (d.browser.safari = !0);
            o.test("\u00a0") &&
                (j = /^[\s\xA0]+/, k = /[\s\xA0]+$/);
            h = d(w);
            w.addEventListener ? ca = function() {
                w.removeEventListener("DOMContentLoaded", ca, false);
                d.ready()
            } : w.attachEvent && (ca = function() {
                if (w.readyState === "complete") {
                    w.detachEvent("onreadystatechange", ca);
                    d.ready()
                }
            });
            return d
        }(),
        G = {};
    h.Callbacks = function(a) {
        var a = a ? G[a] || c(a) : {},
            d = [],
            e = [],
            f, g, o, j, k, l, m = function(b) {
                var c, e, f, g;
                c = 0;
                for (e = b.length; c < e; c++) f = b[c], g = h.type(f), "array" === g ? m(f) : "function" === g && (!a.unique || !p.has(f)) && d.push(f)
            },
            n = function(b, c) {
                c = c || [];
                f = !a.memory || [b, c];
                o = g = !0;
                l = j || 0;
                j = 0;
                for (k = d.length; d && l < k; l++)
                    if (!1 === d[l].apply(b, c) && a.stopOnFalse) {
                        f = !0;
                        break
                    }
                o = !1;
                d && (a.once ? !0 === f ? p.disable() : d = [] : e && e.length && (f = e.shift(), p.fireWith(f[0], f[1])))
            },
            p = {
                add: function() {
                    if (d) {
                        var a = d.length;
                        m(arguments);
                        o ? k = d.length : f && !0 !== f && (j = a, n(f[0], f[1]))
                    }
                    return this
                },
                remove: function() {
                    if (d)
                        for (var b = arguments, c = 0, e = b.length; c < e; c++)
                            for (var f = 0; f < d.length && !(b[c] === d[f] && (o && f <= k && (k--, f <= l && l--), d.splice(f--, 1), a.unique)); f++);
                    return this
                },
                has: function(a) {
                    if (d)
                        for (var b =
                                0, c = d.length; b < c; b++)
                            if (a === d[b]) return !0;
                    return !1
                },
                empty: function() {
                    d = [];
                    return this
                },
                disable: function() {
                    d = e = f = b;
                    return this
                },
                disabled: function() {
                    return !d
                },
                lock: function() {
                    e = b;
                    (!f || !0 === f) && p.disable();
                    return this
                },
                locked: function() {
                    return !e
                },
                fireWith: function(b, c) {
                    e && (o ? a.once || e.push([b, c]) : (!a.once || !f) && n(b, c));
                    return this
                },
                fire: function() {
                    p.fireWith(this, arguments);
                    return this
                },
                fired: function() {
                    return !!g
                }
            };
        return p
    };
    var L = [].slice;
    h.extend({
        Deferred: function(a) {
            var b = h.Callbacks("once memory"),
                c = h.Callbacks("once memory"),
                d = h.Callbacks("memory"),
                e = "pending",
                f = {
                    resolve: b,
                    reject: c,
                    notify: d
                },
                g = {
                    done: b.add,
                    fail: c.add,
                    progress: d.add,
                    state: function() {
                        return e
                    },
                    isResolved: b.fired,
                    isRejected: c.fired,
                    then: function(a, b, c) {
                        o.done(a).fail(b).progress(c);
                        return this
                    },
                    always: function() {
                        o.done.apply(o, arguments).fail.apply(o, arguments);
                        return this
                    },
                    pipe: function(a, b, c) {
                        return h.Deferred(function(d) {
                            h.each({
                                done: [a, "resolve"],
                                fail: [b, "reject"],
                                progress: [c, "notify"]
                            }, function(a, b) {
                                var c = b[0],
                                    e = b[1],
                                    y;
                                if (h.isFunction(c)) o[a](function() {
                                    if ((y =
                                            c.apply(this, arguments)) && h.isFunction(y.promise)) y.promise().then(d.resolve, d.reject, d.notify);
                                    else d[e + "With"](this === o ? d : this, [y])
                                });
                                else o[a](d[e])
                            })
                        }).promise()
                    },
                    promise: function(a) {
                        if (null == a) a = g;
                        else
                            for (var b in g) a[b] = g[b];
                        return a
                    }
                },
                o = g.promise({}),
                j;
            for (j in f) o[j] = f[j].fire, o[j + "With"] = f[j].fireWith;
            o.done(function() {
                e = "resolved"
            }, c.disable, d.lock).fail(function() {
                e = "rejected"
            }, b.disable, d.lock);
            a && a.call(o, o);
            return o
        },
        when: function(a) {
            function b(a) {
                return function(b) {
                    d[a] = 1 < arguments.length ?
                        L.call(arguments, 0) : b;
                    --o || j.resolveWith(j, d)
                }
            }

            function c(a) {
                return function(b) {
                    g[a] = 1 < arguments.length ? L.call(arguments, 0) : b;
                    j.notifyWith(k, g)
                }
            }
            var d = L.call(arguments, 0),
                e = 0,
                f = d.length,
                g = Array(f),
                o = f,
                j = 1 >= f && a && h.isFunction(a.promise) ? a : h.Deferred(),
                k = j.promise();
            if (1 < f) {
                for (; e < f; e++) d[e] && d[e].promise && h.isFunction(d[e].promise) ? d[e].promise().then(b(e), j.reject, c(e)) : --o;
                o || j.resolveWith(j, d)
            } else j !== a && j.resolveWith(j, f ? [a] : []);
            return k
        }
    });
    h.support = function() {
        var b, c, d, e, f, g, o, j, k = w.createElement("div");
        k.setAttribute("className", "t");
        k.innerHTML = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
        c = k.getElementsByTagName("*");
        d = k.getElementsByTagName("a")[0];
        if (!c || !c.length || !d) return {};
        e = w.createElement("select");
        f = e.appendChild(w.createElement("option"));
        c = k.getElementsByTagName("input")[0];
        b = {
            leadingWhitespace: 3 === k.firstChild.nodeType,
            tbody: !k.getElementsByTagName("tbody").length,
            htmlSerialize: !!k.getElementsByTagName("link").length,
            style: /top/.test(d.getAttribute("style")),
            hrefNormalized: "/a" === d.getAttribute("href"),
            opacity: /^0.55/.test(d.style.opacity),
            cssFloat: !!d.style.cssFloat,
            checkOn: "on" === c.value,
            optSelected: f.selected,
            getSetAttribute: "t" !== k.className,
            enctype: !!w.createElement("form").enctype,
            html5Clone: "<:nav></:nav>" !== w.createElement("nav").cloneNode(!0).outerHTML,
            submitBubbles: !0,
            changeBubbles: !0,
            focusinBubbles: !1,
            deleteExpando: !0,
            noCloneEvent: !0,
            inlineBlockNeedsLayout: !1,
            shrinkWrapBlocks: !1,
            reliableMarginRight: !0,
            pixelMargin: !0
        };
        h.boxModel = b.boxModel = "CSS1Compat" === w.compatMode;
        c.checked = !0;
        b.noCloneChecked = c.cloneNode(!0).checked;
        e.disabled = !0;
        b.optDisabled = !f.disabled;
        try {
            delete k.test
        } catch (l) {
            b.deleteExpando = !1
        }!k.addEventListener && k.attachEvent && k.fireEvent && (k.attachEvent("onclick", function() {
            b.noCloneEvent = !1
        }), k.cloneNode(!0).fireEvent("onclick"));
        c = w.createElement("input");
        c.value = "t";
        c.setAttribute("type", "radio");
        b.radioValue = "t" === c.value;
        c.setAttribute("checked", "checked");
        c.setAttribute("name",
            "t");
        k.appendChild(c);
        d = w.createDocumentFragment();
        d.appendChild(k.lastChild);
        b.checkClone = d.cloneNode(!0).cloneNode(!0).lastChild.checked;
        b.appendChecked = c.checked;
        d.removeChild(c);
        d.appendChild(k);
        if (k.attachEvent)
            for (o in {
                    submit: 1,
                    change: 1,
                    focusin: 1
                }) c = "on" + o, j = c in k, j || (k.setAttribute(c, "return;"), j = "function" === typeof k[c]), b[o + "Bubbles"] = j;
        d.removeChild(k);
        d = e = f = k = c = null;
        h(function() {
            var c, d, e, f, o = w.getElementsByTagName("body")[0];
            if (o) {
                c = w.createElement("div");
                c.style.cssText = "padding:0;margin:0;border:0;visibility:hidden;width:0;height:0;position:static;top:0;margin-top:1px";
                o.insertBefore(c, o.firstChild);
                k = w.createElement("div");
                c.appendChild(k);
                k.innerHTML = "<table><tr><td style='padding:0;margin:0;border:0;display:none'></td><td>t</td></tr></table>";
                g = k.getElementsByTagName("td");
                j = g[0].offsetHeight === 0;
                g[0].style.display = "";
                g[1].style.display = "none";
                b.reliableHiddenOffsets = j && g[0].offsetHeight === 0;
                if (a.getComputedStyle) {
                    k.innerHTML = "";
                    d = w.createElement("div");
                    d.style.width = "0";
                    d.style.marginRight = "0";
                    k.style.width = "2px";
                    k.appendChild(d);
                    b.reliableMarginRight = (parseInt((a.getComputedStyle(d,
                        null) || {
                        marginRight: 0
                    }).marginRight, 10) || 0) === 0
                }
                if (typeof k.style.zoom !== "undefined") {
                    k.innerHTML = "";
                    k.style.width = k.style.padding = "1px";
                    k.style.border = 0;
                    k.style.overflow = "hidden";
                    k.style.display = "inline";
                    k.style.zoom = 1;
                    b.inlineBlockNeedsLayout = k.offsetWidth === 3;
                    k.style.display = "block";
                    k.style.overflow = "visible";
                    k.innerHTML = "<div style='width:5px;'></div>";
                    b.shrinkWrapBlocks = k.offsetWidth !== 3
                }
                k.style.cssText = "position:absolute;top:0;left:0;width:1px;height:1px;padding:0;margin:0;border:0;visibility:hidden;";
                k.innerHTML = "<div style='position:absolute;top:0;left:0;width:1px;height:1px;padding:0;margin:0;border:5px solid #000;display:block;'><div style='padding:0;margin:0;border:0;display:block;overflow:hidden;'></div></div><table style='position:absolute;top:0;left:0;width:1px;height:1px;padding:0;margin:0;border:5px solid #000;' cellpadding='0' cellspacing='0'><tr><td></td></tr></table>";
                d = k.firstChild;
                e = d.firstChild;
                f = {
                    doesNotAddBorder: e.offsetTop !== 5,
                    doesAddBorderForTableAndCells: d.nextSibling.firstChild.firstChild.offsetTop ===
                        5
                };
                e.style.position = "fixed";
                e.style.top = "20px";
                f.fixedPosition = e.offsetTop === 20 || e.offsetTop === 15;
                e.style.position = e.style.top = "";
                d.style.overflow = "hidden";
                d.style.position = "relative";
                f.subtractsBorderForOverflowNotVisible = e.offsetTop === -5;
                f.doesNotIncludeMarginInBodyOffset = o.offsetTop !== 1;
                if (a.getComputedStyle) {
                    k.style.marginTop = "1%";
                    b.pixelMargin = (a.getComputedStyle(k, null) || {
                        marginTop: 0
                    }).marginTop !== "1%"
                }
                if (typeof c.style.zoom !== "undefined") c.style.zoom = 1;
                o.removeChild(c);
                k = null;
                h.extend(b, f)
            }
        });
        return b
    }();
    var M = /^(?:\{.*\}|\[.*\])$/,
        O = /([A-Z])/g;
    h.extend({
        cache: {},
        uuid: 0,
        expando: "jQuery" + (h.fn.jquery + Math.random()).replace(/\D/g, ""),
        noData: {
            embed: !0,
            object: "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
            applet: !0
        },
        hasData: function(a) {
            a = a.nodeType ? h.cache[a[h.expando]] : a[h.expando];
            return !!a && !e(a)
        },
        data: function(a, c, d, e) {
            if (h.acceptData(a)) {
                var f;
                f = h.expando;
                var g = "string" === typeof c,
                    o = a.nodeType,
                    k = o ? h.cache : a,
                    j = o ? a[f] : a[f] && f,
                    l = "events" === c;
                if (j && k[j] && (l || e || k[j].data) || !(g && d === b)) {
                    j ||
                        (o ? a[f] = j = ++h.uuid : j = f);
                    k[j] || (k[j] = {}, o || (k[j].toJSON = h.noop));
                    if ("object" === typeof c || "function" === typeof c) e ? k[j] = h.extend(k[j], c) : k[j].data = h.extend(k[j].data, c);
                    f = a = k[j];
                    e || (a.data || (a.data = {}), a = a.data);
                    d !== b && (a[h.camelCase(c)] = d);
                    if (l && !a[c]) return f.events;
                    g ? (d = a[c], null == d && (d = a[h.camelCase(c)])) : d = a;
                    return d
                }
            }
        },
        removeData: function(a, b, c) {
            if (h.acceptData(a)) {
                var d, f, g, o = h.expando,
                    k = a.nodeType,
                    j = k ? h.cache : a,
                    l = k ? a[o] : o;
                if (j[l]) {
                    if (b && (d = c ? j[l] : j[l].data)) {
                        h.isArray(b) || (b in d ? b = [b] : (b = h.camelCase(b),
                            b = b in d ? [b] : b.split(" ")));
                        f = 0;
                        for (g = b.length; f < g; f++) delete d[b[f]];
                        if (!(c ? e : h.isEmptyObject)(d)) return
                    }
                    if (!c && (delete j[l].data, !e(j[l]))) return;
                    h.support.deleteExpando || !j.setInterval ? delete j[l] : j[l] = null;
                    k && (h.support.deleteExpando ? delete a[o] : a.removeAttribute ? a.removeAttribute(o) : a[o] = null)
                }
            }
        },
        _data: function(a, b, c) {
            return h.data(a, b, c, !0)
        },
        acceptData: function(a) {
            if (a.nodeName) {
                var b = h.noData[a.nodeName.toLowerCase()];
                if (b) return !(!0 === b || a.getAttribute("classid") !== b)
            }
            return !0
        }
    });
    h.fn.extend({
        data: function(a,
            c) {
            var e, f, g, o, j, k = this[0],
                l = 0,
                m = null;
            if (a === b) {
                if (this.length && (m = h.data(k), 1 === k.nodeType && !h._data(k, "parsedAttrs"))) {
                    g = k.attributes;
                    for (j = g.length; l < j; l++) o = g[l].name, 0 === o.indexOf("data-") && (o = h.camelCase(o.substring(5)), d(k, o, m[o]));
                    h._data(k, "parsedAttrs", !0)
                }
                return m
            }
            if ("object" === typeof a) return this.each(function() {
                h.data(this, a)
            });
            e = a.split(".", 2);
            e[1] = e[1] ? "." + e[1] : "";
            f = e[1] + "!";
            return h.access(this, function(c) {
                if (c === b) return m = this.triggerHandler("getData" + f, [e[0]]), m === b && k && (m = h.data(k,
                    a), m = d(k, a, m)), m === b && e[1] ? this.data(e[0]) : m;
                e[1] = c;
                this.each(function() {
                    var b = h(this);
                    b.triggerHandler("setData" + f, e);
                    h.data(this, a, c);
                    b.triggerHandler("changeData" + f, e)
                })
            }, null, c, 1 < arguments.length, null, !1)
        },
        removeData: function(a) {
            return this.each(function() {
                h.removeData(this, a)
            })
        }
    });
    h.extend({
        _mark: function(a, b) {
            a && (b = (b || "fx") + "mark", h._data(a, b, (h._data(a, b) || 0) + 1))
        },
        _unmark: function(a, b, c) {
            !0 !== a && (c = b, b = a, a = !1);
            if (b) {
                var c = c || "fx",
                    d = c + "mark";
                (a = a ? 0 : (h._data(b, d) || 1) - 1) ? h._data(b, d, a): (h.removeData(b,
                    d, !0), f(b, c, "mark"))
            }
        },
        queue: function(a, b, c) {
            var d;
            if (a) return b = (b || "fx") + "queue", d = h._data(a, b), c && (!d || h.isArray(c) ? d = h._data(a, b, h.makeArray(c)) : d.push(c)), d || []
        },
        dequeue: function(a, b) {
            var b = b || "fx",
                c = h.queue(a, b),
                d = c.shift(),
                e = {};
            "inprogress" === d && (d = c.shift());
            d && ("fx" === b && c.unshift("inprogress"), h._data(a, b + ".run", e), d.call(a, function() {
                h.dequeue(a, b)
            }, e));
            c.length || (h.removeData(a, b + "queue " + b + ".run", !0), f(a, b, "queue"))
        }
    });
    h.fn.extend({
        queue: function(a, c) {
            var d = 2;
            "string" !== typeof a && (c =
                a, a = "fx", d--);
            return arguments.length < d ? h.queue(this[0], a) : c === b ? this : this.each(function() {
                var b = h.queue(this, a, c);
                a === "fx" && b[0] !== "inprogress" && h.dequeue(this, a)
            })
        },
        dequeue: function(a) {
            return this.each(function() {
                h.dequeue(this, a)
            })
        },
        delay: function(a, b) {
            a = h.fx ? h.fx.speeds[a] || a : a;
            return this.queue(b || "fx", function(b, c) {
                var d = setTimeout(b, a);
                c.stop = function() {
                    clearTimeout(d)
                }
            })
        },
        clearQueue: function(a) {
            return this.queue(a || "fx", [])
        },
        promise: function(a, c) {
            function d() {
                --o || e.resolveWith(f, [f])
            }
            "string" !==
            typeof a && (c = a, a = b);
            for (var a = a || "fx", e = h.Deferred(), f = this, g = f.length, o = 1, k = a + "defer", j = a + "queue", l = a + "mark", m; g--;)
                if (m = h.data(f[g], k, b, !0) || (h.data(f[g], j, b, !0) || h.data(f[g], l, b, !0)) && h.data(f[g], k, h.Callbacks("once memory"), !0)) o++, m.add(d);
            d();
            return e.promise(c)
        }
    });
    var S = /[\n\t\r]/g,
        T = /\s+/,
        da = /\r/g,
        ea = /^(?:button|input)$/i,
        F = /^(?:button|input|object|select|textarea)$/i,
        fa = /^a(?:rea)?$/i,
        W = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,
        ga = h.support.getSetAttribute,
        I, o, N;
    h.fn.extend({
        attr: function(a, b) {
            return h.access(this, h.attr, a, b, 1 < arguments.length)
        },
        removeAttr: function(a) {
            return this.each(function() {
                h.removeAttr(this, a)
            })
        },
        prop: function(a, b) {
            return h.access(this, h.prop, a, b, 1 < arguments.length)
        },
        removeProp: function(a) {
            a = h.propFix[a] || a;
            return this.each(function() {
                try {
                    this[a] = b, delete this[a]
                } catch (c) {}
            })
        },
        addClass: function(a) {
            var b, c, d, e, f, g, o;
            if (h.isFunction(a)) return this.each(function(b) {
                h(this).addClass(a.call(this, b, this.className))
            });
            if (a && "string" === typeof a) {
                b = a.split(T);
                c = 0;
                for (d = this.length; c < d; c++)
                    if (e = this[c], 1 === e.nodeType)
                        if (!e.className && 1 === b.length) e.className = a;
                        else {
                            f = " " + e.className + " ";
                            g = 0;
                            for (o = b.length; g < o; g++) ~f.indexOf(" " + b[g] + " ") || (f += b[g] + " ");
                            e.className = h.trim(f)
                        }
            }
            return this
        },
        removeClass: function(a) {
            var c, d, e, f, g, o, k;
            if (h.isFunction(a)) return this.each(function(b) {
                h(this).removeClass(a.call(this, b, this.className))
            });
            if (a && "string" === typeof a || a === b) {
                c = (a || "").split(T);
                d = 0;
                for (e = this.length; d < e; d++)
                    if (f =
                        this[d], 1 === f.nodeType && f.className)
                        if (a) {
                            g = (" " + f.className + " ").replace(S, " ");
                            o = 0;
                            for (k = c.length; o < k; o++) g = g.replace(" " + c[o] + " ", " ");
                            f.className = h.trim(g)
                        } else f.className = ""
            }
            return this
        },
        toggleClass: function(a, b) {
            var c = typeof a,
                d = "boolean" === typeof b;
            return h.isFunction(a) ? this.each(function(c) {
                h(this).toggleClass(a.call(this, c, this.className, b), b)
            }) : this.each(function() {
                if ("string" === c)
                    for (var e, f = 0, g = h(this), o = b, k = a.split(T); e = k[f++];) o = d ? o : !g.hasClass(e), g[o ? "addClass" : "removeClass"](e);
                else if ("undefined" === c || "boolean" === c) this.className && h._data(this, "__className__", this.className), this.className = this.className || !1 === a ? "" : h._data(this, "__className__") || ""
            })
        },
        hasClass: function(a) {
            for (var a = " " + a + " ", b = 0, c = this.length; b < c; b++)
                if (1 === this[b].nodeType && -1 < (" " + this[b].className + " ").replace(S, " ").indexOf(a)) return !0;
            return !1
        },
        val: function(a) {
            var c, d, e, f = this[0];
            if (arguments.length) return e = h.isFunction(a), this.each(function(d) {
                var f = h(this);
                if (1 === this.nodeType && (d = e ? a.call(this,
                        d, f.val()) : a, null == d ? d = "" : "number" === typeof d ? d += "" : h.isArray(d) && (d = h.map(d, function(a) {
                        return a == null ? "" : a + ""
                    })), c = h.valHooks[this.type] || h.valHooks[this.nodeName.toLowerCase()], !c || !("set" in c) || c.set(this, d, "value") === b)) this.value = d
            });
            if (f) {
                if ((c = h.valHooks[f.type] || h.valHooks[f.nodeName.toLowerCase()]) && "get" in c && (d = c.get(f, "value")) !== b) return d;
                d = f.value;
                return "string" === typeof d ? d.replace(da, "") : null == d ? "" : d
            }
        }
    });
    h.extend({
        valHooks: {
            option: {
                get: function(a) {
                    var b = a.attributes.value;
                    return !b ||
                        b.specified ? a.value : a.text
                }
            },
            select: {
                get: function(a) {
                    var b, c, d = a.selectedIndex,
                        e = [],
                        f = a.options,
                        g = "select-one" === a.type;
                    if (0 > d) return null;
                    a = g ? d : 0;
                    for (c = g ? d + 1 : f.length; a < c; a++)
                        if (b = f[a], b.selected && (h.support.optDisabled ? !b.disabled : null === b.getAttribute("disabled")) && (!b.parentNode.disabled || !h.nodeName(b.parentNode, "optgroup"))) {
                            b = h(b).val();
                            if (g) return b;
                            e.push(b)
                        }
                    return g && !e.length && f.length ? h(f[d]).val() : e
                },
                set: function(a, b) {
                    var c = h.makeArray(b);
                    h(a).find("option").each(function() {
                        this.selected =
                            0 <= h.inArray(h(this).val(), c)
                    });
                    c.length || (a.selectedIndex = -1);
                    return c
                }
            }
        },
        attrFn: {
            val: !0,
            css: !0,
            html: !0,
            text: !0,
            data: !0,
            width: !0,
            height: !0,
            offset: !0
        },
        attr: function(a, c, d, e) {
            var f, g, k = a.nodeType;
            if (a && !(3 === k || 8 === k || 2 === k)) {
                if (e && c in h.attrFn) return h(a)[c](d);
                if ("undefined" === typeof a.getAttribute) return h.prop(a, c, d);
                if (e = 1 !== k || !h.isXMLDoc(a)) c = c.toLowerCase(), g = h.attrHooks[c] || (W.test(c) ? o : I);
                if (d !== b)
                    if (null === d) h.removeAttr(a, c);
                    else {
                        if (g && "set" in g && e && (f = g.set(a, d, c)) !== b) return f;
                        a.setAttribute(c,
                            "" + d);
                        return d
                    } else {
                    if (g && "get" in g && e && null !== (f = g.get(a, c))) return f;
                    f = a.getAttribute(c);
                    return null === f ? b : f
                }
            }
        },
        removeAttr: function(a, b) {
            var c, d, e, f, g, o = 0;
            if (b && 1 === a.nodeType) {
                d = b.toLowerCase().split(T);
                for (f = d.length; o < f; o++)
                    if (e = d[o]) c = h.propFix[e] || e, (g = W.test(e)) || h.attr(a, e, ""), a.removeAttribute(ga ? e : c), g && c in a && (a[c] = !1)
            }
        },
        attrHooks: {
            type: {
                set: function(a, b) {
                    if (ea.test(a.nodeName) && a.parentNode) h.error("type property can't be changed");
                    else if (!h.support.radioValue && "radio" === b && h.nodeName(a,
                            "input")) {
                        var c = a.value;
                        a.setAttribute("type", b);
                        c && (a.value = c);
                        return b
                    }
                }
            },
            value: {
                get: function(a, b) {
                    return I && h.nodeName(a, "button") ? I.get(a, b) : b in a ? a.value : null
                },
                set: function(a, b, c) {
                    if (I && h.nodeName(a, "button")) return I.set(a, b, c);
                    a.value = b
                }
            }
        },
        propFix: {
            tabindex: "tabIndex",
            readonly: "readOnly",
            "for": "htmlFor",
            "class": "className",
            maxlength: "maxLength",
            cellspacing: "cellSpacing",
            cellpadding: "cellPadding",
            rowspan: "rowSpan",
            colspan: "colSpan",
            usemap: "useMap",
            frameborder: "frameBorder",
            contenteditable: "contentEditable"
        },
        prop: function(a, c, d) {
            var e, f, g = a.nodeType;
            if (a && !(3 === g || 8 === g || 2 === g)) {
                if (1 !== g || !h.isXMLDoc(a)) c = h.propFix[c] || c, f = h.propHooks[c];
                return d !== b ? f && "set" in f && (e = f.set(a, d, c)) !== b ? e : a[c] = d : f && "get" in f && null !== (e = f.get(a, c)) ? e : a[c]
            }
        },
        propHooks: {
            tabIndex: {
                get: function(a) {
                    var c = a.getAttributeNode("tabindex");
                    return c && c.specified ? parseInt(c.value, 10) : F.test(a.nodeName) || fa.test(a.nodeName) && a.href ? 0 : b
                }
            }
        }
    });
    h.attrHooks.tabindex = h.propHooks.tabIndex;
    o = {
        get: function(a, c) {
            var d, e = h.prop(a, c);
            return !0 ===
                e || "boolean" !== typeof e && (d = a.getAttributeNode(c)) && !1 !== d.nodeValue ? c.toLowerCase() : b
        },
        set: function(a, b, c) {
            !1 === b ? h.removeAttr(a, c) : (b = h.propFix[c] || c, b in a && (a[b] = !0), a.setAttribute(c, c.toLowerCase()));
            return c
        }
    };
    ga || (N = {
            name: !0,
            id: !0,
            coords: !0
        }, I = h.valHooks.button = {
            get: function(a, c) {
                var d;
                return (d = a.getAttributeNode(c)) && (N[c] ? "" !== d.nodeValue : d.specified) ? d.nodeValue : b
            },
            set: function(a, b, c) {
                var d = a.getAttributeNode(c);
                d || (d = w.createAttribute(c), a.setAttributeNode(d));
                return d.nodeValue = b + ""
            }
        },
        h.attrHooks.tabindex.set = I.set, h.each(["width", "height"], function(a, b) {
            h.attrHooks[b] = h.extend(h.attrHooks[b], {
                set: function(a, c) {
                    if ("" === c) return a.setAttribute(b, "auto"), c
                }
            })
        }), h.attrHooks.contenteditable = {
            get: I.get,
            set: function(a, b, c) {
                "" === b && (b = "false");
                I.set(a, b, c)
            }
        });
    h.support.hrefNormalized || h.each(["href", "src", "width", "height"], function(a, c) {
        h.attrHooks[c] = h.extend(h.attrHooks[c], {
            get: function(a) {
                a = a.getAttribute(c, 2);
                return a === null ? b : a
            }
        })
    });
    h.support.style || (h.attrHooks.style = {
        get: function(a) {
            return a.style.cssText.toLowerCase() ||
                b
        },
        set: function(a, b) {
            return a.style.cssText = "" + b
        }
    });
    h.support.optSelected || (h.propHooks.selected = h.extend(h.propHooks.selected, {
        get: function(a) {
            if (a = a.parentNode) {
                a.selectedIndex;
                a.parentNode && a.parentNode.selectedIndex
            }
            return null
        }
    }));
    h.support.enctype || (h.propFix.enctype = "encoding");
    h.support.checkOn || h.each(["radio", "checkbox"], function() {
        h.valHooks[this] = {
            get: function(a) {
                return a.getAttribute("value") === null ? "on" : a.value
            }
        }
    });
    h.each(["radio", "checkbox"], function() {
        h.valHooks[this] = h.extend(h.valHooks[this], {
            set: function(a, b) {
                if (h.isArray(b)) return a.checked = h.inArray(h(a).val(), b) >= 0
            }
        })
    });
    var ta = /^(?:textarea|input|select)$/i,
        Da = /^([^\.]*)?(?:\.(.+))?$/,
        $a = /(?:^|\s)hover(\.\S+)?\b/,
        ab = /^key/,
        bb = /^(?:mouse|contextmenu)|click/,
        Ea = /^(?:focusinfocus|focusoutblur)$/,
        cb = /^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/,
        db = function(a) {
            if (a = cb.exec(a)) {
                a[1] = (a[1] || "").toLowerCase();
                a[3] = a[3] && RegExp("(?:^|\\s)" + a[3] + "(?:\\s|$)")
            }
            return a
        },
        Fa = function(a) {
            return h.event.special.hover ? a : a.replace($a, "mouseenter$1 mouseleave$1")
        };
    h.event = {
        add: function(a, c, d, e, f) {
            var g, o, k, j, l, m, n, p, q;
            if (!(a.nodeType === 3 || a.nodeType === 8 || !c || !d || !(g = h._data(a)))) {
                if (d.handler) {
                    n = d;
                    d = n.handler;
                    f = n.selector
                }
                if (!d.guid) d.guid = h.guid++;
                k = g.events;
                if (!k) g.events = k = {};
                o = g.handle;
                if (!o) {
                    g.handle = o = function(a) {
                        return typeof h !== "undefined" && (!a || h.event.triggered !== a.type) ? h.event.dispatch.apply(o.elem, arguments) : b
                    };
                    o.elem = a
                }
                c = h.trim(Fa(c)).split(" ");
                for (g = 0; g < c.length; g++) {
                    j = Da.exec(c[g]) || [];
                    l = j[1];
                    m = (j[2] || "").split(".").sort();
                    q = h.event.special[l] || {};
                    l = (f ? q.delegateType : q.bindType) || l;
                    q = h.event.special[l] || {};
                    j = h.extend({
                        type: l,
                        origType: j[1],
                        data: e,
                        handler: d,
                        guid: d.guid,
                        selector: f,
                        quick: f && db(f),
                        namespace: m.join(".")
                    }, n);
                    p = k[l];
                    if (!p) {
                        p = k[l] = [];
                        p.delegateCount = 0;
                        if (!q.setup || q.setup.call(a, e, m, o) === false) a.addEventListener ? a.addEventListener(l, o, false) : a.attachEvent && a.attachEvent("on" + l, o)
                    }
                    if (q.add) {
                        q.add.call(a, j);
                        if (!j.handler.guid) j.handler.guid = d.guid
                    }
                    f ? p.splice(p.delegateCount++, 0, j) : p.push(j);
                    h.event.global[l] = true
                }
                a = null
            }
        },
        global: {},
        remove: function(a, b, c, d, e) {
            var f = h.hasData(a) && h._data(a),
                g, o, k, j, l, m, n, p, q, u;
            if (f && (n = f.events)) {
                b = h.trim(Fa(b || "")).split(" ");
                for (g = 0; g < b.length; g++) {
                    o = Da.exec(b[g]) || [];
                    k = j = o[1];
                    o = o[2];
                    if (k) {
                        p = h.event.special[k] || {};
                        k = (d ? p.delegateType : p.bindType) || k;
                        q = n[k] || [];
                        l = q.length;
                        o = o ? RegExp("(^|\\.)" + o.split(".").sort().join("\\.(?:.*\\.)?") + "(\\.|$)") : null;
                        for (m = 0; m < q.length; m++) {
                            u = q[m];
                            if ((e || j === u.origType) && (!c || c.guid === u.guid) && (!o || o.test(u.namespace)) && (!d || d === u.selector || d === "**" && u.selector)) {
                                q.splice(m--,
                                    1);
                                u.selector && q.delegateCount--;
                                p.remove && p.remove.call(a, u)
                            }
                        }
                        if (q.length === 0 && l !== q.length) {
                            (!p.teardown || p.teardown.call(a, o) === false) && h.removeEvent(a, k, f.handle);
                            delete n[k]
                        }
                    } else
                        for (k in n) h.event.remove(a, k + b[g], c, d, true)
                }
                if (h.isEmptyObject(n)) {
                    if (b = f.handle) b.elem = null;
                    h.removeData(a, ["events", "handle"], true)
                }
            }
        },
        customEvent: {
            getData: !0,
            setData: !0,
            changeData: !0
        },
        trigger: function(c, d, e, f) {
            if (!e || !(e.nodeType === 3 || e.nodeType === 8)) {
                var g = c.type || c,
                    o = [],
                    k, j, l, m, n;
                if (!Ea.test(g + h.event.triggered)) {
                    if (g.indexOf("!") >=
                        0) {
                        g = g.slice(0, -1);
                        k = true
                    }
                    if (g.indexOf(".") >= 0) {
                        o = g.split(".");
                        g = o.shift();
                        o.sort()
                    }
                    if (e && !h.event.customEvent[g] || h.event.global[g]) {
                        c = typeof c === "object" ? c[h.expando] ? c : new h.Event(g, c) : new h.Event(g);
                        c.type = g;
                        c.isTrigger = true;
                        c.exclusive = k;
                        c.namespace = o.join(".");
                        c.namespace_re = c.namespace ? RegExp("(^|\\.)" + o.join("\\.(?:.*\\.)?") + "(\\.|$)") : null;
                        k = g.indexOf(":") < 0 ? "on" + g : "";
                        if (e) {
                            c.result = b;
                            if (!c.target) c.target = e;
                            d = d != null ? h.makeArray(d) : [];
                            d.unshift(c);
                            l = h.event.special[g] || {};
                            if (!(l.trigger &&
                                    l.trigger.apply(e, d) === false)) {
                                n = [
                                    [e, l.bindType || g]
                                ];
                                if (!f && !l.noBubble && !h.isWindow(e)) {
                                    m = l.delegateType || g;
                                    o = Ea.test(m + g) ? e : e.parentNode;
                                    for (j = null; o; o = o.parentNode) {
                                        n.push([o, m]);
                                        j = o
                                    }
                                    j && j === e.ownerDocument && n.push([j.defaultView || j.parentWindow || a, m])
                                }
                                for (j = 0; j < n.length && !c.isPropagationStopped(); j++) {
                                    o = n[j][0];
                                    c.type = n[j][1];
                                    (m = (h._data(o, "events") || {})[c.type] && h._data(o, "handle")) && m.apply(o, d);
                                    (m = k && o[k]) && h.acceptData(o) && m.apply(o, d) === false && c.preventDefault()
                                }
                                c.type = g;
                                if (!f && !c.isDefaultPrevented() &&
                                    (!l._default || l._default.apply(e.ownerDocument, d) === false) && !(g === "click" && h.nodeName(e, "a")) && h.acceptData(e))
                                    if (k && e[g] && (g !== "focus" && g !== "blur" || c.target.offsetWidth !== 0) && !h.isWindow(e)) {
                                        (j = e[k]) && (e[k] = null);
                                        h.event.triggered = g;
                                        e[g]();
                                        h.event.triggered = b;
                                        j && (e[k] = j)
                                    }
                                return c.result
                            }
                        } else {
                            e = h.cache;
                            for (j in e) e[j].events && e[j].events[g] && h.event.trigger(c, d, e[j].handle.elem, true)
                        }
                    }
                }
            }
        },
        dispatch: function(c) {
            var c = h.event.fix(c || a.event),
                d = (h._data(this, "events") || {})[c.type] || [],
                e = d.delegateCount,
                f = [].slice.call(arguments, 0),
                g = !c.exclusive && !c.namespace,
                o = h.event.special[c.type] || {},
                k = [],
                j, l, m, n, p, q, u;
            f[0] = c;
            c.delegateTarget = this;
            if (!(o.preDispatch && o.preDispatch.call(this, c) === false)) {
                if (e && !(c.button && c.type === "click")) {
                    m = h(this);
                    m.context = this.ownerDocument || this;
                    for (l = c.target; l != this; l = l.parentNode || this)
                        if (l.disabled !== true) {
                            p = {};
                            q = [];
                            m[0] = l;
                            for (j = 0; j < e; j++) {
                                n = d[j];
                                u = n.selector;
                                if (p[u] === b) {
                                    var I = p,
                                        N = u,
                                        r;
                                    if (n.quick) {
                                        r = n.quick;
                                        var v = l.attributes || {};
                                        r = (!r[1] || l.nodeName.toLowerCase() ===
                                            r[1]) && (!r[2] || (v.id || {}).value === r[2]) && (!r[3] || r[3].test((v["class"] || {}).value))
                                    } else r = m.is(u);
                                    I[N] = r
                                }
                                p[u] && q.push(n)
                            }
                            q.length && k.push({
                                elem: l,
                                matches: q
                            })
                        }
                }
                d.length > e && k.push({
                    elem: this,
                    matches: d.slice(e)
                });
                for (j = 0; j < k.length && !c.isPropagationStopped(); j++) {
                    e = k[j];
                    c.currentTarget = e.elem;
                    for (d = 0; d < e.matches.length && !c.isImmediatePropagationStopped(); d++) {
                        n = e.matches[d];
                        if (g || !c.namespace && !n.namespace || c.namespace_re && c.namespace_re.test(n.namespace)) {
                            c.data = n.data;
                            c.handleObj = n;
                            n = ((h.event.special[n.origType] || {}).handle || n.handler).apply(e.elem, f);
                            if (n !== b) {
                                c.result = n;
                                if (n === false) {
                                    c.preventDefault();
                                    c.stopPropagation()
                                }
                            }
                        }
                    }
                }
                o.postDispatch && o.postDispatch.call(this, c);
                return c.result
            }
        },
        props: "attrChange,attrName,relatedNode,srcElement,altKey,bubbles,cancelable,ctrlKey,currentTarget,eventPhase,metaKey,relatedTarget,shiftKey,target,timeStamp,view,which".split(","),
        fixHooks: {},
        keyHooks: {
            props: ["char", "charCode", "key", "keyCode"],
            filter: function(a, b) {
                if (a.which == null) a.which = b.charCode != null ? b.charCode : b.keyCode;
                return a
            }
        },
        mouseHooks: {
            props: "button,buttons,clientX,clientY,fromElement,offsetX,offsetY,pageX,pageY,screenX,screenY,toElement".split(","),
            filter: function(a, c) {
                var d, e, f = c.button,
                    g = c.fromElement;
                if (a.pageX == null && c.clientX != null) {
                    d = a.target.ownerDocument || w;
                    e = d.documentElement;
                    d = d.body;
                    a.pageX = c.clientX + (e && e.scrollLeft || d && d.scrollLeft || 0) - (e && e.clientLeft || d && d.clientLeft || 0);
                    a.pageY = c.clientY + (e && e.scrollTop || d && d.scrollTop || 0) - (e && e.clientTop || d && d.clientTop || 0)
                }
                if (!a.relatedTarget && g) a.relatedTarget =
                    g === a.target ? c.toElement : g;
                if (!a.which && f !== b) a.which = f & 1 ? 1 : f & 2 ? 3 : f & 4 ? 2 : 0;
                return a
            }
        },
        fix: function(a) {
            if (a[h.expando]) return a;
            var c, d, e = a,
                f = h.event.fixHooks[a.type] || {},
                g = f.props ? this.props.concat(f.props) : this.props,
                a = h.Event(e);
            for (c = g.length; c;) {
                d = g[--c];
                a[d] = e[d]
            }
            if (!a.target) a.target = e.srcElement || w;
            if (a.target.nodeType === 3) a.target = a.target.parentNode;
            if (a.metaKey === b) a.metaKey = a.ctrlKey;
            return f.filter ? f.filter(a, e) : a
        },
        special: {
            ready: {
                setup: h.bindReady
            },
            load: {
                noBubble: !0
            },
            focus: {
                delegateType: "focusin"
            },
            blur: {
                delegateType: "focusout"
            },
            beforeunload: {
                setup: function(a, b, c) {
                    if (h.isWindow(this)) this.onbeforeunload = c
                },
                teardown: function(a, b) {
                    if (this.onbeforeunload === b) this.onbeforeunload = null
                }
            }
        },
        simulate: function(a, b, c, d) {
            a = h.extend(new h.Event, c, {
                type: a,
                isSimulated: true,
                originalEvent: {}
            });
            d ? h.event.trigger(a, null, b) : h.event.dispatch.call(b, a);
            a.isDefaultPrevented() && c.preventDefault()
        }
    };
    h.event.handle = h.event.dispatch;
    h.removeEvent = w.removeEventListener ? function(a, b, c) {
        a.removeEventListener && a.removeEventListener(b,
            c, false)
    } : function(a, b, c) {
        a.detachEvent && a.detachEvent("on" + b, c)
    };
    h.Event = function(a, b) {
        if (!(this instanceof h.Event)) return new h.Event(a, b);
        if (a && a.type) {
            this.originalEvent = a;
            this.type = a.type;
            this.isDefaultPrevented = a.defaultPrevented || a.returnValue === false || a.getPreventDefault && a.getPreventDefault() ? g : j
        } else this.type = a;
        b && h.extend(this, b);
        this.timeStamp = a && a.timeStamp || h.now();
        this[h.expando] = true
    };
    h.Event.prototype = {
        preventDefault: function() {
            this.isDefaultPrevented = g;
            var a = this.originalEvent;
            if (a) a.preventDefault ? a.preventDefault() : a.returnValue = false
        },
        stopPropagation: function() {
            this.isPropagationStopped = g;
            var a = this.originalEvent;
            if (a) {
                a.stopPropagation && a.stopPropagation();
                a.cancelBubble = true
            }
        },
        stopImmediatePropagation: function() {
            this.isImmediatePropagationStopped = g;
            this.stopPropagation()
        },
        isDefaultPrevented: j,
        isPropagationStopped: j,
        isImmediatePropagationStopped: j
    };
    h.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout"
    }, function(a, b) {
        h.event.special[a] = {
            delegateType: b,
            bindType: b,
            handle: function(a) {
                var c =
                    a.relatedTarget,
                    d = a.handleObj,
                    e;
                if (!c || c !== this && !h.contains(this, c)) {
                    a.type = d.origType;
                    e = d.handler.apply(this, arguments);
                    a.type = b
                }
                return e
            }
        }
    });
    h.support.submitBubbles || (h.event.special.submit = {
        setup: function() {
            if (h.nodeName(this, "form")) return false;
            h.event.add(this, "click._submit keypress._submit", function(a) {
                a = a.target;
                if ((a = h.nodeName(a, "input") || h.nodeName(a, "button") ? a.form : b) && !a._submit_attached) {
                    h.event.add(a, "submit._submit", function(a) {
                        a._submit_bubble = true
                    });
                    a._submit_attached = true
                }
            })
        },
        postDispatch: function(a) {
            if (a._submit_bubble) {
                delete a._submit_bubble;
                this.parentNode && !a.isTrigger && h.event.simulate("submit", this.parentNode, a, true)
            }
        },
        teardown: function() {
            if (h.nodeName(this, "form")) return false;
            h.event.remove(this, "._submit")
        }
    });
    h.support.changeBubbles || (h.event.special.change = {
        setup: function() {
            if (ta.test(this.nodeName)) {
                if (this.type === "checkbox" || this.type === "radio") {
                    h.event.add(this, "propertychange._change", function(a) {
                        if (a.originalEvent.propertyName === "checked") this._just_changed =
                            true
                    });
                    h.event.add(this, "click._change", function(a) {
                        if (this._just_changed && !a.isTrigger) {
                            this._just_changed = false;
                            h.event.simulate("change", this, a, true)
                        }
                    })
                }
                return false
            }
            h.event.add(this, "beforeactivate._change", function(a) {
                a = a.target;
                if (ta.test(a.nodeName) && !a._change_attached) {
                    h.event.add(a, "change._change", function(a) {
                        this.parentNode && !a.isSimulated && !a.isTrigger && h.event.simulate("change", this.parentNode, a, true)
                    });
                    a._change_attached = true
                }
            })
        },
        handle: function(a) {
            var b = a.target;
            if (this !== b || a.isSimulated ||
                a.isTrigger || b.type !== "radio" && b.type !== "checkbox") return a.handleObj.handler.apply(this, arguments)
        },
        teardown: function() {
            h.event.remove(this, "._change");
            return ta.test(this.nodeName)
        }
    });
    h.support.focusinBubbles || h.each({
        focus: "focusin",
        blur: "focusout"
    }, function(a, b) {
        var c = 0,
            d = function(a) {
                h.event.simulate(b, a.target, h.event.fix(a), true)
            };
        h.event.special[b] = {
            setup: function() {
                c++ === 0 && w.addEventListener(a, d, true)
            },
            teardown: function() {
                --c === 0 && w.removeEventListener(a, d, true)
            }
        }
    });
    h.fn.extend({
        on: function(a,
            c, d, e, f) {
            var g, o;
            if (typeof a === "object") {
                if (typeof c !== "string") {
                    d = d || c;
                    c = b
                }
                for (o in a) this.on(o, c, d, a[o], f);
                return this
            }
            if (d == null && e == null) {
                e = c;
                d = c = b
            } else if (e == null)
                if (typeof c === "string") {
                    e = d;
                    d = b
                } else {
                    e = d;
                    d = c;
                    c = b
                }
            if (e === false) e = j;
            else if (!e) return this;
            if (f === 1) {
                g = e;
                e = function(a) {
                    h().off(a);
                    return g.apply(this, arguments)
                };
                e.guid = g.guid || (g.guid = h.guid++)
            }
            return this.each(function() {
                h.event.add(this, a, e, d, c)
            })
        },
        one: function(a, b, c, d) {
            return this.on(a, b, c, d, 1)
        },
        off: function(a, c, d) {
            if (a && a.preventDefault &&
                a.handleObj) {
                var e = a.handleObj;
                h(a.delegateTarget).off(e.namespace ? e.origType + "." + e.namespace : e.origType, e.selector, e.handler);
                return this
            }
            if (typeof a === "object") {
                for (e in a) this.off(e, c, a[e]);
                return this
            }
            if (c === false || typeof c === "function") {
                d = c;
                c = b
            }
            d === false && (d = j);
            return this.each(function() {
                h.event.remove(this, a, d, c)
            })
        },
        bind: function(a, b, c) {
            return this.on(a, null, b, c)
        },
        unbind: function(a, b) {
            return this.off(a, null, b)
        },
        live: function(a, b, c) {
            h(this.context).on(a, this.selector, b, c);
            return this
        },
        die: function(a,
            b) {
            h(this.context).off(a, this.selector || "**", b);
            return this
        },
        delegate: function(a, b, c, d) {
            return this.on(b, a, c, d)
        },
        undelegate: function(a, b, c) {
            return arguments.length == 1 ? this.off(a, "**") : this.off(b, a, c)
        },
        trigger: function(a, b) {
            return this.each(function() {
                h.event.trigger(a, b, this)
            })
        },
        triggerHandler: function(a, b) {
            if (this[0]) return h.event.trigger(a, b, this[0], true)
        },
        toggle: function(a) {
            var b = arguments,
                c = a.guid || h.guid++,
                d = 0,
                e = function(c) {
                    var e = (h._data(this, "lastToggle" + a.guid) || 0) % d;
                    h._data(this, "lastToggle" +
                        a.guid, e + 1);
                    c.preventDefault();
                    return b[e].apply(this, arguments) || false
                };
            for (e.guid = c; d < b.length;) b[d++].guid = c;
            return this.click(e)
        },
        hover: function(a, b) {
            return this.mouseenter(a).mouseleave(b || a)
        }
    });
    h.each("blur,focus,focusin,focusout,load,resize,scroll,unload,click,dblclick,mousedown,mouseup,mousemove,mouseover,mouseout,mouseenter,mouseleave,change,select,submit,keydown,keypress,keyup,error,contextmenu".split(","), function(a, b) {
        h.fn[b] = function(a, c) {
            if (c == null) {
                c = a;
                a = null
            }
            return arguments.length >
                0 ? this.on(b, null, a, c) : this.trigger(b)
        };
        h.attrFn && (h.attrFn[b] = true);
        if (ab.test(b)) h.event.fixHooks[b] = h.event.keyHooks;
        if (bb.test(b)) h.event.fixHooks[b] = h.event.mouseHooks
    });
    (function() {
        function a(b, c, d, f, g, h) {
            for (var g = 0, o = f.length; g < o; g++) {
                var k = f[g];
                if (k) {
                    for (var j = false, k = k[b]; k;) {
                        if (k[e] === d) {
                            j = f[k.sizset];
                            break
                        }
                        if (k.nodeType === 1 && !h) {
                            k[e] = d;
                            k.sizset = g
                        }
                        if (k.nodeName.toLowerCase() === c) {
                            j = k;
                            break
                        }
                        k = k[b]
                    }
                    f[g] = j
                }
            }
        }

        function c(a, b, d, f, g, h) {
            for (var g = 0, o = f.length; g < o; g++) {
                var k = f[g];
                if (k) {
                    for (var j =
                            false, k = k[a]; k;) {
                        if (k[e] === d) {
                            j = f[k.sizset];
                            break
                        }
                        if (k.nodeType === 1) {
                            if (!h) {
                                k[e] = d;
                                k.sizset = g
                            }
                            if (typeof b !== "string") {
                                if (k === b) {
                                    j = true;
                                    break
                                }
                            } else if (n.filter(b, [k]).length > 0) {
                                j = k;
                                break
                            }
                        }
                        k = k[a]
                    }
                    f[g] = j
                }
            }
        }
        var d = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,
            e = "sizcache" + (Math.random() + "").replace(".", ""),
            f = 0,
            g = Object.prototype.toString,
            o = false,
            k = true,
            j = /\\/g,
            l = /\r\n/g,
            m = /\W/;
        [0, 0].sort(function() {
            k = false;
            return 0
        });
        var n = function(a, b, c, e) {
            var c = c || [],
                f = b = b || w;
            if (b.nodeType !== 1 && b.nodeType !== 9) return [];
            if (!a || typeof a !== "string") return c;
            var h, o, k, j, y, l = true,
                m = n.isXML(b),
                E = [],
                Q = a;
            do {
                d.exec("");
                if (h = d.exec(Q)) {
                    Q = h[3];
                    E.push(h[1]);
                    if (h[2]) {
                        j = h[3];
                        break
                    }
                }
            } while (h);
            if (E.length > 1 && u.exec(a))
                if (E.length === 2 && q.relative[E[0]]) o = x(E[0] + E[1], b, e);
                else
                    for (o = q.relative[E[0]] ? [b] : n(E.shift(), b); E.length;) {
                        a = E.shift();
                        q.relative[a] && (a = a + E.shift());
                        o = x(a, o, e)
                    } else {
                        if (!e && E.length > 1 && b.nodeType === 9 && !m && q.match.ID.test(E[0]) &&
                            !q.match.ID.test(E[E.length - 1])) {
                            h = n.find(E.shift(), b, m);
                            b = h.expr ? n.filter(h.expr, h.set)[0] : h.set[0]
                        }
                        if (b) {
                            h = e ? {
                                expr: E.pop(),
                                set: r(e)
                            } : n.find(E.pop(), E.length === 1 && (E[0] === "~" || E[0] === "+") && b.parentNode ? b.parentNode : b, m);
                            o = h.expr ? n.filter(h.expr, h.set) : h.set;
                            for (E.length > 0 ? k = r(o) : l = false; E.length;) {
                                h = y = E.pop();
                                q.relative[y] ? h = E.pop() : y = "";
                                h == null && (h = b);
                                q.relative[y](k, h, m)
                            }
                        } else k = []
                    }
                k || (k = o);
            k || n.error(y || a);
            if (g.call(k) === "[object Array]")
                if (l)
                    if (b && b.nodeType === 1)
                        for (a = 0; k[a] != null; a++) k[a] &&
                            (k[a] === true || k[a].nodeType === 1 && n.contains(b, k[a])) && c.push(o[a]);
                    else
                        for (a = 0; k[a] != null; a++) k[a] && k[a].nodeType === 1 && c.push(o[a]);
            else c.push.apply(c, k);
            else r(k, c);
            if (j) {
                n(j, f, c, e);
                n.uniqueSort(c)
            }
            return c
        };
        n.uniqueSort = function(a) {
            if (t) {
                o = k;
                a.sort(t);
                if (o)
                    for (var b = 1; b < a.length; b++) a[b] === a[b - 1] && a.splice(b--, 1)
            }
            return a
        };
        n.matches = function(a, b) {
            return n(a, null, null, b)
        };
        n.matchesSelector = function(a, b) {
            return n(b, null, null, [a]).length > 0
        };
        n.find = function(a, b, c) {
            var d, e, f, g, h, o;
            if (!a) return [];
            e =
                0;
            for (f = q.order.length; e < f; e++) {
                h = q.order[e];
                if (g = q.leftMatch[h].exec(a)) {
                    o = g[1];
                    g.splice(1, 1);
                    if (o.substr(o.length - 1) !== "\\") {
                        g[1] = (g[1] || "").replace(j, "");
                        d = q.find[h](g, b, c);
                        if (d != null) {
                            a = a.replace(q.match[h], "");
                            break
                        }
                    }
                }
            }
            d || (d = typeof b.getElementsByTagName !== "undefined" ? b.getElementsByTagName("*") : []);
            return {
                set: d,
                expr: a
            }
        };
        n.filter = function(a, c, d, e) {
            for (var f, g, h, o, k, j, y, l, m = a, E = [], Q = c, U = c && c[0] && n.isXML(c[0]); a && c.length;) {
                for (h in q.filter)
                    if ((f = q.leftMatch[h].exec(a)) != null && f[2]) {
                        j = q.filter[h];
                        k = f[1];
                        g = false;
                        f.splice(1, 1);
                        if (k.substr(k.length - 1) !== "\\") {
                            Q === E && (E = []);
                            if (q.preFilter[h])
                                if (f = q.preFilter[h](f, Q, d, E, e, U)) {
                                    if (f === true) continue
                                } else g = o = true;
                            if (f)
                                for (y = 0;
                                    (k = Q[y]) != null; y++)
                                    if (k) {
                                        o = j(k, f, y, Q);
                                        l = e ^ o;
                                        if (d && o != null) l ? g = true : Q[y] = false;
                                        else if (l) {
                                            E.push(k);
                                            g = true
                                        }
                                    }
                            if (o !== b) {
                                d || (Q = E);
                                a = a.replace(q.match[h], "");
                                if (!g) return [];
                                break
                            }
                        }
                    }
                if (a === m)
                    if (g == null) n.error(a);
                    else break;
                m = a
            }
            return Q
        };
        n.error = function(a) {
            throw Error("Syntax error, unrecognized expression: " + a);
        };
        var p = n.getText =
            function(a) {
                var b, c;
                b = a.nodeType;
                var d = "";
                if (b)
                    if (b === 1 || b === 9 || b === 11) {
                        if (typeof a.textContent === "string") return a.textContent;
                        if (typeof a.innerText === "string") return a.innerText.replace(l, "");
                        for (a = a.firstChild; a; a = a.nextSibling) d = d + p(a)
                    } else {
                        if (b === 3 || b === 4) return a.nodeValue
                    } else
                    for (b = 0; c = a[b]; b++) c.nodeType !== 8 && (d = d + p(c));
                return d
            },
            q = n.selectors = {
                order: ["ID", "NAME", "TAG"],
                match: {
                    ID: /#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
                    CLASS: /\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
                    NAME: /\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,
                    ATTR: /\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,
                    TAG: /^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,
                    CHILD: /:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,
                    POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,
                    PSEUDO: /:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/
                },
                leftMatch: {},
                attrMap: {
                    "class": "className",
                    "for": "htmlFor"
                },
                attrHandle: {
                    href: function(a) {
                        return a.getAttribute("href")
                    },
                    type: function(a) {
                        return a.getAttribute("type")
                    }
                },
                relative: {
                    "+": function(a, b) {
                        var c = typeof b === "string",
                            d = c && !m.test(b),
                            c = c && !d;
                        d && (b = b.toLowerCase());
                        for (var d = 0, e = a.length, f; d < e; d++)
                            if (f = a[d]) {
                                for (;
                                    (f = f.previousSibling) && f.nodeType !== 1;);
                                a[d] = c || f && f.nodeName.toLowerCase() === b ? f || false : f === b
                            }
                        c && n.filter(b, a, true)
                    },
                    ">": function(a, b) {
                        var c, d = typeof b === "string",
                            e = 0,
                            f = a.length;
                        if (d && !m.test(b))
                            for (b = b.toLowerCase(); e < f; e++) {
                                if (c = a[e]) {
                                    c = c.parentNode;
                                    a[e] = c.nodeName.toLowerCase() === b ? c : false
                                }
                            } else {
                                for (; e <
                                    f; e++)(c = a[e]) && (a[e] = d ? c.parentNode : c.parentNode === b);
                                d && n.filter(b, a, true)
                            }
                    },
                    "": function(b, d, e) {
                        var g, h = f++,
                            o = c;
                        if (typeof d === "string" && !m.test(d)) {
                            g = d = d.toLowerCase();
                            o = a
                        }
                        o("parentNode", d, h, b, g, e)
                    },
                    "~": function(b, d, e) {
                        var g, h = f++,
                            o = c;
                        if (typeof d === "string" && !m.test(d)) {
                            g = d = d.toLowerCase();
                            o = a
                        }
                        o("previousSibling", d, h, b, g, e)
                    }
                },
                find: {
                    ID: function(a, b, c) {
                        if (typeof b.getElementById !== "undefined" && !c) return (a = b.getElementById(a[1])) && a.parentNode ? [a] : []
                    },
                    NAME: function(a, b) {
                        if (typeof b.getElementsByName !==
                            "undefined") {
                            for (var c = [], d = b.getElementsByName(a[1]), e = 0, f = d.length; e < f; e++) d[e].getAttribute("name") === a[1] && c.push(d[e]);
                            return c.length === 0 ? null : c
                        }
                    },
                    TAG: function(a, b) {
                        if (typeof b.getElementsByTagName !== "undefined") return b.getElementsByTagName(a[1])
                    }
                },
                preFilter: {
                    CLASS: function(a, b, c, d, e, f) {
                        a = " " + a[1].replace(j, "") + " ";
                        if (f) return a;
                        for (var f = 0, g;
                            (g = b[f]) != null; f++) g && (e ^ (g.className && (" " + g.className + " ").replace(/[\t\n\r]/g, " ").indexOf(a) >= 0) ? c || d.push(g) : c && (b[f] = false));
                        return false
                    },
                    ID: function(a) {
                        return a[1].replace(j,
                            "")
                    },
                    TAG: function(a) {
                        return a[1].replace(j, "").toLowerCase()
                    },
                    CHILD: function(a) {
                        if (a[1] === "nth") {
                            a[2] || n.error(a[0]);
                            a[2] = a[2].replace(/^\+|\s*/g, "");
                            var b = /(-?)(\d*)(?:n([+\-]?\d*))?/.exec(a[2] === "even" && "2n" || a[2] === "odd" && "2n+1" || !/\D/.test(a[2]) && "0n+" + a[2] || a[2]);
                            a[2] = b[1] + (b[2] || 1) - 0;
                            a[3] = b[3] - 0
                        } else a[2] && n.error(a[0]);
                        a[0] = f++;
                        return a
                    },
                    ATTR: function(a, b, c, d, e, f) {
                        b = a[1] = a[1].replace(j, "");
                        !f && q.attrMap[b] && (a[1] = q.attrMap[b]);
                        a[4] = (a[4] || a[5] || "").replace(j, "");
                        a[2] === "~=" && (a[4] = " " + a[4] +
                            " ");
                        return a
                    },
                    PSEUDO: function(a, b, c, e, f) {
                        if (a[1] === "not")
                            if ((d.exec(a[3]) || "").length > 1 || /^\w/.test(a[3])) a[3] = n(a[3], null, null, b);
                            else {
                                a = n.filter(a[3], b, c, 1 ^ f);
                                c || e.push.apply(e, a);
                                return false
                            } else if (q.match.POS.test(a[0]) || q.match.CHILD.test(a[0])) return true;
                        return a
                    },
                    POS: function(a) {
                        a.unshift(true);
                        return a
                    }
                },
                filters: {
                    enabled: function(a) {
                        return a.disabled === false && a.type !== "hidden"
                    },
                    disabled: function(a) {
                        return a.disabled === true
                    },
                    checked: function(a) {
                        return a.checked === true
                    },
                    selected: function(a) {
                        a.parentNode &&
                            a.parentNode.selectedIndex;
                        return a.selected === true
                    },
                    parent: function(a) {
                        return !!a.firstChild
                    },
                    empty: function(a) {
                        return !a.firstChild
                    },
                    has: function(a, b, c) {
                        return !!n(c[3], a).length
                    },
                    header: function(a) {
                        return /h\d/i.test(a.nodeName)
                    },
                    text: function(a) {
                        var b = a.getAttribute("type"),
                            c = a.type;
                        return a.nodeName.toLowerCase() === "input" && "text" === c && (b === c || b === null)
                    },
                    radio: function(a) {
                        return a.nodeName.toLowerCase() === "input" && "radio" === a.type
                    },
                    checkbox: function(a) {
                        return a.nodeName.toLowerCase() === "input" &&
                            "checkbox" === a.type
                    },
                    file: function(a) {
                        return a.nodeName.toLowerCase() === "input" && "file" === a.type
                    },
                    password: function(a) {
                        return a.nodeName.toLowerCase() === "input" && "password" === a.type
                    },
                    submit: function(a) {
                        var b = a.nodeName.toLowerCase();
                        return (b === "input" || b === "button") && "submit" === a.type
                    },
                    image: function(a) {
                        return a.nodeName.toLowerCase() === "input" && "image" === a.type
                    },
                    reset: function(a) {
                        var b = a.nodeName.toLowerCase();
                        return (b === "input" || b === "button") && "reset" === a.type
                    },
                    button: function(a) {
                        var b = a.nodeName.toLowerCase();
                        return b === "input" && "button" === a.type || b === "button"
                    },
                    input: function(a) {
                        return /input|select|textarea|button/i.test(a.nodeName)
                    },
                    focus: function(a) {
                        return a === a.ownerDocument.activeElement
                    }
                },
                setFilters: {
                    first: function(a, b) {
                        return b === 0
                    },
                    last: function(a, b, c, d) {
                        return b === d.length - 1
                    },
                    even: function(a, b) {
                        return b % 2 === 0
                    },
                    odd: function(a, b) {
                        return b % 2 === 1
                    },
                    lt: function(a, b, c) {
                        return b < c[3] - 0
                    },
                    gt: function(a, b, c) {
                        return b > c[3] - 0
                    },
                    nth: function(a, b, c) {
                        return c[3] - 0 === b
                    },
                    eq: function(a, b, c) {
                        return c[3] - 0 === b
                    }
                },
                filter: {
                    PSEUDO: function(a,
                        b, c, d) {
                        var e = b[1],
                            f = q.filters[e];
                        if (f) return f(a, c, b, d);
                        if (e === "contains") return (a.textContent || a.innerText || p([a]) || "").indexOf(b[3]) >= 0;
                        if (e === "not") {
                            b = b[3];
                            c = 0;
                            for (d = b.length; c < d; c++)
                                if (b[c] === a) return false;
                            return true
                        }
                        n.error(e)
                    },
                    CHILD: function(a, b) {
                        var c, d, f, g, h, o;
                        c = b[1];
                        o = a;
                        switch (c) {
                            case "only":
                            case "first":
                                for (; o = o.previousSibling;)
                                    if (o.nodeType === 1) return false;
                                if (c === "first") return true;
                                o = a;
                            case "last":
                                for (; o = o.nextSibling;)
                                    if (o.nodeType === 1) return false;
                                return true;
                            case "nth":
                                c = b[2];
                                d =
                                    b[3];
                                if (c === 1 && d === 0) return true;
                                f = b[0];
                                if ((g = a.parentNode) && (g[e] !== f || !a.nodeIndex)) {
                                    h = 0;
                                    for (o = g.firstChild; o; o = o.nextSibling)
                                        if (o.nodeType === 1) o.nodeIndex = ++h;
                                    g[e] = f
                                }
                                o = a.nodeIndex - d;
                                return c === 0 ? o === 0 : o % c === 0 && o / c >= 0
                        }
                    },
                    ID: function(a, b) {
                        return a.nodeType === 1 && a.getAttribute("id") === b
                    },
                    TAG: function(a, b) {
                        return b === "*" && a.nodeType === 1 || !!a.nodeName && a.nodeName.toLowerCase() === b
                    },
                    CLASS: function(a, b) {
                        return (" " + (a.className || a.getAttribute("class")) + " ").indexOf(b) > -1
                    },
                    ATTR: function(a, b) {
                        var c = b[1],
                            c = n.attr ? n.attr(a, c) : q.attrHandle[c] ? q.attrHandle[c](a) : a[c] != null ? a[c] : a.getAttribute(c),
                            d = c + "",
                            e = b[2],
                            f = b[4];
                        return c == null ? e === "!=" : !e && n.attr ? c != null : e === "=" ? d === f : e === "*=" ? d.indexOf(f) >= 0 : e === "~=" ? (" " + d + " ").indexOf(f) >= 0 : !f ? d && c !== false : e === "!=" ? d !== f : e === "^=" ? d.indexOf(f) === 0 : e === "$=" ? d.substr(d.length - f.length) === f : e === "|=" ? d === f || d.substr(0, f.length + 1) === f + "-" : false
                    },
                    POS: function(a, b, c, d) {
                        var e = q.setFilters[b[2]];
                        if (e) return e(a, c, b, d)
                    }
                }
            },
            u = q.match.POS,
            I = function(a, b) {
                return "\\" + (b - 0 + 1)
            },
            N;
        for (N in q.match) {
            q.match[N] = RegExp(q.match[N].source + /(?![^\[]*\])(?![^\(]*\))/.source);
            q.leftMatch[N] = RegExp(/(^(?:.|\r|\n)*?)/.source + q.match[N].source.replace(/\\(\d+)/g, I))
        }
        q.match.globalPOS = u;
        var r = function(a, b) {
            a = Array.prototype.slice.call(a, 0);
            if (b) {
                b.push.apply(b, a);
                return b
            }
            return a
        };
        try {
            Array.prototype.slice.call(w.documentElement.childNodes, 0)[0].nodeType
        } catch (v) {
            r = function(a, b) {
                var c = 0,
                    d = b || [];
                if (g.call(a) === "[object Array]") Array.prototype.push.apply(d, a);
                else if (typeof a.length ===
                    "number")
                    for (var e = a.length; c < e; c++) d.push(a[c]);
                else
                    for (; a[c]; c++) d.push(a[c]);
                return d
            }
        }
        var t, s;
        if (w.documentElement.compareDocumentPosition) t = function(a, b) {
            if (a === b) {
                o = true;
                return 0
            }
            return !a.compareDocumentPosition || !b.compareDocumentPosition ? a.compareDocumentPosition ? -1 : 1 : a.compareDocumentPosition(b) & 4 ? -1 : 1
        };
        else {
            t = function(a, b) {
                if (a === b) {
                    o = true;
                    return 0
                }
                if (a.sourceIndex && b.sourceIndex) return a.sourceIndex - b.sourceIndex;
                var c, d, e = [],
                    f = [];
                c = a.parentNode;
                d = b.parentNode;
                var g = c;
                if (c === d) return s(a,
                    b);
                if (c) {
                    if (!d) return 1
                } else return -1;
                for (; g;) {
                    e.unshift(g);
                    g = g.parentNode
                }
                for (g = d; g;) {
                    f.unshift(g);
                    g = g.parentNode
                }
                c = e.length;
                d = f.length;
                for (g = 0; g < c && g < d; g++)
                    if (e[g] !== f[g]) return s(e[g], f[g]);
                return g === c ? s(a, f[g], -1) : s(e[g], b, 1)
            };
            s = function(a, b, c) {
                if (a === b) return c;
                for (a = a.nextSibling; a;) {
                    if (a === b) return -1;
                    a = a.nextSibling
                }
                return 1
            }
        }(function() {
            var a = w.createElement("div"),
                c = "script" + (new Date).getTime(),
                d = w.documentElement;
            a.innerHTML = "<a name='" + c + "'/>";
            d.insertBefore(a, d.firstChild);
            if (w.getElementById(c)) {
                q.find.ID =
                    function(a, c, d) {
                        if (typeof c.getElementById !== "undefined" && !d) return (c = c.getElementById(a[1])) ? c.id === a[1] || typeof c.getAttributeNode !== "undefined" && c.getAttributeNode("id").nodeValue === a[1] ? [c] : b : []
                    };
                q.filter.ID = function(a, b) {
                    var c = typeof a.getAttributeNode !== "undefined" && a.getAttributeNode("id");
                    return a.nodeType === 1 && c && c.nodeValue === b
                }
            }
            d.removeChild(a);
            d = a = null
        })();
        (function() {
            var a = w.createElement("div");
            a.appendChild(w.createComment(""));
            if (a.getElementsByTagName("*").length > 0) q.find.TAG = function(a,
                b) {
                var c = b.getElementsByTagName(a[1]);
                if (a[1] === "*") {
                    for (var d = [], e = 0; c[e]; e++) c[e].nodeType === 1 && d.push(c[e]);
                    c = d
                }
                return c
            };
            a.innerHTML = "<a href='#'></a>";
            if (a.firstChild && typeof a.firstChild.getAttribute !== "undefined" && a.firstChild.getAttribute("href") !== "#") q.attrHandle.href = function(a) {
                return a.getAttribute("href", 2)
            };
            a = null
        })();
        w.querySelectorAll && function() {
            var a = n,
                b = w.createElement("div");
            b.innerHTML = "<p class='TEST'></p>";
            if (!(b.querySelectorAll && b.querySelectorAll(".TEST").length === 0)) {
                n =
                    function(b, c, d, e) {
                        c = c || w;
                        if (!e && !n.isXML(c)) {
                            var f = /^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(b);
                            if (f && (c.nodeType === 1 || c.nodeType === 9)) {
                                if (f[1]) return r(c.getElementsByTagName(b), d);
                                if (f[2] && q.find.CLASS && c.getElementsByClassName) return r(c.getElementsByClassName(f[2]), d)
                            }
                            if (c.nodeType === 9) {
                                if (b === "body" && c.body) return r([c.body], d);
                                if (f && f[3]) {
                                    var g = c.getElementById(f[3]);
                                    if (g && g.parentNode) {
                                        if (g.id === f[3]) return r([g], d)
                                    } else return r([], d)
                                }
                                try {
                                    return r(c.querySelectorAll(b), d)
                                } catch (o) {}
                            } else if (c.nodeType ===
                                1 && c.nodeName.toLowerCase() !== "object") {
                                var f = c,
                                    h = (g = c.getAttribute("id")) || "__sizzle__",
                                    k = c.parentNode,
                                    j = /^\s*[+~]/.test(b);
                                g ? h = h.replace(/'/g, "\\$&") : c.setAttribute("id", h);
                                if (j && k) c = c.parentNode;
                                try {
                                    if (!j || k) return r(c.querySelectorAll("[id='" + h + "'] " + b), d)
                                } catch (y) {} finally {
                                    g || f.removeAttribute("id")
                                }
                            }
                        }
                        return a(b, c, d, e)
                    };
                for (var c in a) n[c] = a[c];
                b = null
            }
        }();
        (function() {
            var a = w.documentElement,
                b = a.matchesSelector || a.mozMatchesSelector || a.webkitMatchesSelector || a.msMatchesSelector;
            if (b) {
                var c = !b.call(w.createElement("div"),
                        "div"),
                    d = false;
                try {
                    b.call(w.documentElement, "[test!='']:sizzle")
                } catch (e) {
                    d = true
                }
                n.matchesSelector = function(a, e) {
                    e = e.replace(/\=\s*([^'"\]]*)\s*\]/g, "='$1']");
                    if (!n.isXML(a)) try {
                        if (d || !q.match.PSEUDO.test(e) && !/!=/.test(e)) {
                            var f = b.call(a, e);
                            if (f || !c || a.document && a.document.nodeType !== 11) return f
                        }
                    } catch (g) {}
                    return n(e, null, null, [a]).length > 0
                }
            }
        })();
        (function() {
            var a = w.createElement("div");
            a.innerHTML = "<div class='test e'></div><div class='test'></div>";
            if (a.getElementsByClassName && a.getElementsByClassName("e").length !==
                0) {
                a.lastChild.className = "e";
                if (a.getElementsByClassName("e").length !== 1) {
                    q.order.splice(1, 0, "CLASS");
                    q.find.CLASS = function(a, b, c) {
                        if (typeof b.getElementsByClassName !== "undefined" && !c) return b.getElementsByClassName(a[1])
                    };
                    a = null
                }
            }
        })();
        n.contains = w.documentElement.contains ? function(a, b) {
            return a !== b && (a.contains ? a.contains(b) : true)
        } : w.documentElement.compareDocumentPosition ? function(a, b) {
            return !!(a.compareDocumentPosition(b) & 16)
        } : function() {
            return false
        };
        n.isXML = function(a) {
            return (a = (a ? a.ownerDocument ||
                a : 0).documentElement) ? a.nodeName !== "HTML" : false
        };
        var x = function(a, b, c) {
            for (var d, e = [], f = "", b = b.nodeType ? [b] : b; d = q.match.PSEUDO.exec(a);) {
                f = f + d[0];
                a = a.replace(q.match.PSEUDO, "")
            }
            a = q.relative[a] ? a + "*" : a;
            d = 0;
            for (var g = b.length; d < g; d++) n(a, b[d], e, c);
            return n.filter(f, e)
        };
        n.attr = h.attr;
        n.selectors.attrMap = {};
        h.find = n;
        h.expr = n.selectors;
        h.expr[":"] = h.expr.filters;
        h.unique = n.uniqueSort;
        h.text = n.getText;
        h.isXMLDoc = n.isXML;
        h.contains = n.contains
    })();
    var eb = /Until$/,
        fb = /^(?:parents|prevUntil|prevAll)/,
        gb = /,/,
        Wa = /^.[^:#\[\.,]*$/,
        hb = Array.prototype.slice,
        Ga = h.expr.match.globalPOS,
        ib = {
            children: !0,
            contents: !0,
            next: !0,
            prev: !0
        };
    h.fn.extend({
        find: function(a) {
            var b = this,
                c, d;
            if (typeof a !== "string") return h(a).filter(function() {
                c = 0;
                for (d = b.length; c < d; c++)
                    if (h.contains(b[c], this)) return true
            });
            var e = this.pushStack("", "find", a),
                f, g, o;
            c = 0;
            for (d = this.length; c < d; c++) {
                f = e.length;
                h.find(a, this[c], e);
                if (c > 0)
                    for (g = f; g < e.length; g++)
                        for (o = 0; o < f; o++)
                            if (e[o] === e[g]) {
                                e.splice(g--, 1);
                                break
                            }
            }
            return e
        },
        has: function(a) {
            var b = h(a);
            return this.filter(function() {
                for (var a = 0, c = b.length; a < c; a++)
                    if (h.contains(this, b[a])) return true
            })
        },
        not: function(a) {
            return this.pushStack(k(this, a, false), "not", a)
        },
        filter: function(a) {
            return this.pushStack(k(this, a, true), "filter", a)
        },
        is: function(a) {
            return !!a && (typeof a === "string" ? Ga.test(a) ? h(a, this.context).index(this[0]) >= 0 : h.filter(a, this).length > 0 : this.filter(a).length > 0)
        },
        closest: function(a, b) {
            var c = [],
                d, e, f = this[0];
            if (h.isArray(a)) {
                for (e = 1; f && f.ownerDocument && f !== b;) {
                    for (d = 0; d < a.length; d++) h(f).is(a[d]) &&
                        c.push({
                            selector: a[d],
                            elem: f,
                            level: e
                        });
                    f = f.parentNode;
                    e++
                }
                return c
            }
            var g = Ga.test(a) || typeof a !== "string" ? h(a, b || this.context) : 0;
            d = 0;
            for (e = this.length; d < e; d++)
                for (f = this[d]; f;)
                    if (g ? g.index(f) > -1 : h.find.matchesSelector(f, a)) {
                        c.push(f);
                        break
                    } else {
                        f = f.parentNode;
                        if (!f || !f.ownerDocument || f === b || f.nodeType === 11) break
                    }
            c = c.length > 1 ? h.unique(c) : c;
            return this.pushStack(c, "closest", a)
        },
        index: function(a) {
            return !a ? this[0] && this[0].parentNode ? this.prevAll().length : -1 : typeof a === "string" ? h.inArray(this[0], h(a)) :
                h.inArray(a.jquery ? a[0] : a, this)
        },
        add: function(a, b) {
            var c = typeof a === "string" ? h(a, b) : h.makeArray(a && a.nodeType ? [a] : a),
                d = h.merge(this.get(), c);
            return this.pushStack(!c[0] || !c[0].parentNode || c[0].parentNode.nodeType === 11 || !d[0] || !d[0].parentNode || d[0].parentNode.nodeType === 11 ? d : h.unique(d))
        },
        andSelf: function() {
            return this.add(this.prevObject)
        }
    });
    h.each({
        parent: function(a) {
            return (a = a.parentNode) && a.nodeType !== 11 ? a : null
        },
        parents: function(a) {
            return h.dir(a, "parentNode")
        },
        parentsUntil: function(a, b, c) {
            return h.dir(a,
                "parentNode", c)
        },
        next: function(a) {
            return h.nth(a, 2, "nextSibling")
        },
        prev: function(a) {
            return h.nth(a, 2, "previousSibling")
        },
        nextAll: function(a) {
            return h.dir(a, "nextSibling")
        },
        prevAll: function(a) {
            return h.dir(a, "previousSibling")
        },
        nextUntil: function(a, b, c) {
            return h.dir(a, "nextSibling", c)
        },
        prevUntil: function(a, b, c) {
            return h.dir(a, "previousSibling", c)
        },
        siblings: function(a) {
            return h.sibling((a.parentNode || {}).firstChild, a)
        },
        children: function(a) {
            return h.sibling(a.firstChild)
        },
        contents: function(a) {
            return h.nodeName(a,
                "iframe") ? a.contentDocument || a.contentWindow.document : h.makeArray(a.childNodes)
        }
    }, function(a, b) {
        h.fn[a] = function(c, d) {
            var e = h.map(this, b, c);
            eb.test(a) || (d = c);
            d && typeof d === "string" && (e = h.filter(d, e));
            e = this.length > 1 && !ib[a] ? h.unique(e) : e;
            if ((this.length > 1 || gb.test(d)) && fb.test(a)) e = e.reverse();
            return this.pushStack(e, a, hb.call(arguments).join(","))
        }
    });
    h.extend({
        filter: function(a, b, c) {
            c && (a = ":not(" + a + ")");
            return b.length === 1 ? h.find.matchesSelector(b[0], a) ? [b[0]] : [] : h.find.matches(a, b)
        },
        dir: function(a,
            c, d) {
            for (var e = [], a = a[c]; a && a.nodeType !== 9 && (d === b || a.nodeType !== 1 || !h(a).is(d));) {
                a.nodeType === 1 && e.push(a);
                a = a[c]
            }
            return e
        },
        nth: function(a, b, c) {
            for (var b = b || 1, d = 0; a; a = a[c])
                if (a.nodeType === 1 && ++d === b) break;
            return a
        },
        sibling: function(a, b) {
            for (var c = []; a; a = a.nextSibling) a.nodeType === 1 && a !== b && c.push(a);
            return c
        }
    });
    var za = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
        jb = / jQuery\d+="(?:\d+|null)"/g,
        va = /^\s+/,
        Ha = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,
        Ia = /<([\w:]+)/,
        kb = /<tbody/i,
        lb = /<|&#?\w+;/,
        mb = /<(?:script|style)/i,
        nb = /<(?:script|object|embed|option|style)/i,
        Ja = RegExp("<(?:" + za + ")[\\s/>]", "i"),
        Ka = /checked\s*(?:[^=]|=\s*.checked.)/i,
        La = /\/(java|ecma)script/i,
        ob = /^\s*<!(?:\[CDATA\[|\-\-)/,
        P = {
            option: [1, "<select multiple='multiple'>", "</select>"],
            legend: [1, "<fieldset>", "</fieldset>"],
            thead: [1, "<table>", "</table>"],
            tr: [2, "<table><tbody>", "</tbody></table>"],
            td: [3,
                "<table><tbody><tr>", "</tr></tbody></table>"
            ],
            col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
            area: [1, "<map>", "</map>"],
            _default: [0, "", ""]
        },
        wa = m(w);
    P.optgroup = P.option;
    P.tbody = P.tfoot = P.colgroup = P.caption = P.thead;
    P.th = P.td;
    h.support.htmlSerialize || (P._default = [1, "div<div>", "</div>"]);
    h.fn.extend({
        text: function(a) {
            return h.access(this, function(a) {
                return a === b ? h.text(this) : this.empty().append((this[0] && this[0].ownerDocument || w).createTextNode(a))
            }, null, a, arguments.length)
        },
        wrapAll: function(a) {
            if (h.isFunction(a)) return this.each(function(b) {
                h(this).wrapAll(a.call(this,
                    b))
            });
            if (this[0]) {
                var b = h(a, this[0].ownerDocument).eq(0).clone(true);
                this[0].parentNode && b.insertBefore(this[0]);
                b.map(function() {
                    for (var a = this; a.firstChild && a.firstChild.nodeType === 1;) a = a.firstChild;
                    return a
                }).append(this)
            }
            return this
        },
        wrapInner: function(a) {
            return h.isFunction(a) ? this.each(function(b) {
                h(this).wrapInner(a.call(this, b))
            }) : this.each(function() {
                var b = h(this),
                    c = b.contents();
                c.length ? c.wrapAll(a) : b.append(a)
            })
        },
        wrap: function(a) {
            var b = h.isFunction(a);
            return this.each(function(c) {
                h(this).wrapAll(b ?
                    a.call(this, c) : a)
            })
        },
        unwrap: function() {
            return this.parent().each(function() {
                h.nodeName(this, "body") || h(this).replaceWith(this.childNodes)
            }).end()
        },
        append: function() {
            return this.domManip(arguments, true, function(a) {
                this.nodeType === 1 && this.appendChild(a)
            })
        },
        prepend: function() {
            return this.domManip(arguments, true, function(a) {
                this.nodeType === 1 && this.insertBefore(a, this.firstChild)
            })
        },
        before: function() {
            if (this[0] && this[0].parentNode) return this.domManip(arguments, false, function(a) {
                this.parentNode.insertBefore(a,
                    this)
            });
            if (arguments.length) {
                var a = h.clean(arguments);
                a.push.apply(a, this.toArray());
                return this.pushStack(a, "before", arguments)
            }
        },
        after: function() {
            if (this[0] && this[0].parentNode) return this.domManip(arguments, false, function(a) {
                this.parentNode.insertBefore(a, this.nextSibling)
            });
            if (arguments.length) {
                var a = this.pushStack(this, "after", arguments);
                a.push.apply(a, h.clean(arguments));
                return a
            }
        },
        remove: function(a, b) {
            for (var c = 0, d;
                (d = this[c]) != null; c++)
                if (!a || h.filter(a, [d]).length) {
                    if (!b && d.nodeType === 1) {
                        h.cleanData(d.getElementsByTagName("*"));
                        h.cleanData([d])
                    }
                    d.parentNode && d.parentNode.removeChild(d)
                }
            return this
        },
        empty: function() {
            for (var a = 0, b;
                (b = this[a]) != null; a++)
                for (b.nodeType === 1 && h.cleanData(b.getElementsByTagName("*")); b.firstChild;) b.removeChild(b.firstChild);
            return this
        },
        clone: function(a, b) {
            a = a == null ? false : a;
            b = b == null ? a : b;
            return this.map(function() {
                return h.clone(this, a, b)
            })
        },
        html: function(a) {
            return h.access(this, function(a) {
                var c = this[0] || {},
                    d = 0,
                    e = this.length;
                if (a === b) return c.nodeType === 1 ? c.innerHTML.replace(jb, "") : null;
                if (typeof a ===
                    "string" && !mb.test(a) && (h.support.leadingWhitespace || !va.test(a)) && !P[(Ia.exec(a) || ["", ""])[1].toLowerCase()]) {
                    a = a.replace(Ha, "<$1></$2>");
                    try {
                        for (; d < e; d++) {
                            c = this[d] || {};
                            if (c.nodeType === 1) {
                                h.cleanData(c.getElementsByTagName("*"));
                                c.innerHTML = a
                            }
                        }
                        c = 0
                    } catch (f) {}
                }
                c && this.empty().append(a)
            }, null, a, arguments.length)
        },
        replaceWith: function(a) {
            if (this[0] && this[0].parentNode) {
                if (h.isFunction(a)) return this.each(function(b) {
                    var c = h(this),
                        d = c.html();
                    c.replaceWith(a.call(this, b, d))
                });
                typeof a !== "string" && (a =
                    h(a).detach());
                return this.each(function() {
                    var b = this.nextSibling,
                        c = this.parentNode;
                    h(this).remove();
                    b ? h(b).before(a) : h(c).append(a)
                })
            }
            return this.length ? this.pushStack(h(h.isFunction(a) ? a() : a), "replaceWith", a) : this
        },
        detach: function(a) {
            return this.remove(a, true)
        },
        domManip: function(a, c, d) {
            var e, f, g, o = a[0],
                k = [];
            if (!h.support.checkClone && arguments.length === 3 && typeof o === "string" && Ka.test(o)) return this.each(function() {
                h(this).domManip(a, c, d, true)
            });
            if (h.isFunction(o)) return this.each(function(e) {
                var f =
                    h(this);
                a[0] = o.call(this, e, c ? f.html() : b);
                f.domManip(a, c, d)
            });
            if (this[0]) {
                e = o && o.parentNode;
                e = h.support.parentNode && e && e.nodeType === 11 && e.childNodes.length === this.length ? {
                    fragment: e
                } : h.buildFragment(a, this, k);
                g = e.fragment;
                if (f = g.childNodes.length === 1 ? g = g.firstChild : g.firstChild) {
                    c = c && h.nodeName(f, "tr");
                    f = 0;
                    for (var j = this.length, l = j - 1; f < j; f++) d.call(c ? h.nodeName(this[f], "table") ? this[f].getElementsByTagName("tbody")[0] || this[f].appendChild(this[f].ownerDocument.createElement("tbody")) : this[f] : this[f],
                        e.cacheable || j > 1 && f < l ? h.clone(g, true, true) : g)
                }
                k.length && h.each(k, function(a, b) {
                    b.src ? h.ajax({
                        type: "GET",
                        global: false,
                        url: b.src,
                        async: false,
                        dataType: "script"
                    }) : h.globalEval((b.text || b.textContent || b.innerHTML || "").replace(ob, "/*$0*/"));
                    b.parentNode && b.parentNode.removeChild(b)
                })
            }
            return this
        }
    });
    h.buildFragment = function(a, b, c) {
        var d, e, f, g, o = a[0];
        b && b[0] && (g = b[0].ownerDocument || b[0]);
        g.createDocumentFragment || (g = w);
        if (a.length === 1 && typeof o === "string" && o.length < 512 && g === w && o.charAt(0) === "<" && !nb.test(o) &&
            (h.support.checkClone || !Ka.test(o)) && (h.support.html5Clone || !Ja.test(o))) {
            e = true;
            (f = h.fragments[o]) && f !== 1 && (d = f)
        }
        if (!d) {
            d = g.createDocumentFragment();
            h.clean(a, g, d, c)
        }
        e && (h.fragments[o] = f ? d : 1);
        return {
            fragment: d,
            cacheable: e
        }
    };
    h.fragments = {};
    h.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(a, b) {
        h.fn[a] = function(c) {
            var d = [],
                c = h(c),
                e = this.length === 1 && this[0].parentNode;
            if (e && e.nodeType === 11 && e.childNodes.length === 1 && c.length ===
                1) {
                c[b](this[0]);
                return this
            }
            for (var e = 0, f = c.length; e < f; e++) {
                var g = (e > 0 ? this.clone(true) : this).get();
                h(c[e])[b](g);
                d = d.concat(g)
            }
            return this.pushStack(d, a, c.selector)
        }
    });
    h.extend({
        clone: function(a, b, c) {
            var d, e, f;
            if (h.support.html5Clone || h.isXMLDoc(a) || !Ja.test("<" + a.nodeName + ">")) d = a.cloneNode(true);
            else {
                d = w.createElement("div");
                wa.appendChild(d);
                d.innerHTML = a.outerHTML;
                d = d.firstChild
            }
            var g = d;
            if ((!h.support.noCloneEvent || !h.support.noCloneChecked) && (a.nodeType === 1 || a.nodeType === 11) && !h.isXMLDoc(a)) {
                l(a,
                    g);
                d = p(a);
                e = p(g);
                for (f = 0; d[f]; ++f) e[f] && l(d[f], e[f])
            }
            if (b) {
                n(a, g);
                if (c) {
                    d = p(a);
                    e = p(g);
                    for (f = 0; d[f]; ++f) n(d[f], e[f])
                }
            }
            return g
        },
        clean: function(a, b, c, d) {
            var e, f = [],
                b = b || w;
            typeof b.createElement === "undefined" && (b = b.ownerDocument || b[0] && b[0].ownerDocument || w);
            for (var g = 0, o;
                (o = a[g]) != null; g++) {
                typeof o === "number" && (o = o + "");
                if (o) {
                    if (typeof o === "string")
                        if (lb.test(o)) {
                            o = o.replace(Ha, "<$1></$2>");
                            e = (Ia.exec(o) || ["", ""])[1].toLowerCase();
                            var k = P[e] || P._default,
                                j = k[0],
                                l = b.createElement("div"),
                                n = wa.childNodes;
                            b === w ? wa.appendChild(l) : m(b).appendChild(l);
                            for (l.innerHTML = k[1] + o + k[2]; j--;) l = l.lastChild;
                            if (!h.support.tbody) {
                                j = kb.test(o);
                                k = e === "table" && !j ? l.firstChild && l.firstChild.childNodes : k[1] === "<table>" && !j ? l.childNodes : [];
                                for (e = k.length - 1; e >= 0; --e) h.nodeName(k[e], "tbody") && !k[e].childNodes.length && k[e].parentNode.removeChild(k[e])
                            }!h.support.leadingWhitespace && va.test(o) && l.insertBefore(b.createTextNode(va.exec(o)[0]), l.firstChild);
                            o = l.childNodes;
                            if (l) {
                                l.parentNode.removeChild(l);
                                if (n.length > 0)(l = n[n.length -
                                    1]) && l.parentNode && l.parentNode.removeChild(l)
                            }
                        } else o = b.createTextNode(o);
                    var q;
                    if (!h.support.appendChecked)
                        if (o[0] && typeof(q = o.length) === "number")
                            for (e = 0; e < q; e++) u(o[e]);
                        else u(o);
                    o.nodeType ? f.push(o) : f = h.merge(f, o)
                }
            }
            if (c) {
                a = function(a) {
                    return !a.type || La.test(a.type)
                };
                for (g = 0; f[g]; g++) {
                    b = f[g];
                    if (d && h.nodeName(b, "script") && (!b.type || La.test(b.type))) d.push(b.parentNode ? b.parentNode.removeChild(b) : b);
                    else {
                        if (b.nodeType === 1) {
                            o = h.grep(b.getElementsByTagName("script"), a);
                            f.splice.apply(f, [g + 1, 0].concat(o))
                        }
                        c.appendChild(b)
                    }
                }
            }
            return f
        },
        cleanData: function(a) {
            for (var b, c, d = h.cache, e = h.event.special, f = h.support.deleteExpando, g = 0, o;
                (o = a[g]) != null; g++)
                if (!o.nodeName || !h.noData[o.nodeName.toLowerCase()])
                    if (c = o[h.expando]) {
                        if ((b = d[c]) && b.events) {
                            for (var k in b.events) e[k] ? h.event.remove(o, k) : h.removeEvent(o, k, b.handle);
                            if (b.handle) b.handle.elem = null
                        }
                        f ? delete o[h.expando] : o.removeAttribute && o.removeAttribute(h.expando);
                        delete d[c]
                    }
        }
    });
    var xa = /alpha\([^)]*\)/i,
        pb = /opacity=([^)]*)/,
        qb = /([A-Z]|^ms)/g,
        rb = /^[\-+]?(?:\d*\.)?\d+$/i,
        oa = /^-?(?:\d*\.)?\d+(?!px)[^\d\s]+$/i,
        sb = /^([\-+])=([\-+.\de]+)/,
        tb = /^margin/,
        ub = {
            position: "absolute",
            visibility: "hidden",
            display: "block"
        },
        V = ["Top", "Right", "Bottom", "Left"],
        Z, Ma, Na;
    h.fn.css = function(a, c) {
        return h.access(this, function(a, c, d) {
            return d !== b ? h.style(a, c, d) : h.css(a, c)
        }, a, c, arguments.length > 1)
    };
    h.extend({
        cssHooks: {
            opacity: {
                get: function(a, b) {
                    if (b) {
                        var c = Z(a, "opacity");
                        return c === "" ? "1" : c
                    }
                    return a.style.opacity
                }
            }
        },
        cssNumber: {
            fillOpacity: !0,
            fontWeight: !0,
            lineHeight: !0,
            opacity: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: {
            "float": h.support.cssFloat ?
                "cssFloat" : "styleFloat"
        },
        style: function(a, c, d, e) {
            if (a && !(a.nodeType === 3 || a.nodeType === 8 || !a.style)) {
                var f, g = h.camelCase(c),
                    o = a.style,
                    k = h.cssHooks[g],
                    c = h.cssProps[g] || g;
                if (d !== b) {
                    e = typeof d;
                    if (e === "string" && (f = sb.exec(d))) {
                        d = +(f[1] + 1) * +f[2] + parseFloat(h.css(a, c));
                        e = "number"
                    }
                    if (!(d == null || e === "number" && isNaN(d))) {
                        e === "number" && !h.cssNumber[g] && (d = d + "px");
                        if (!k || !("set" in k) || (d = k.set(a, d)) !== b) try {
                            o[c] = d
                        } catch (j) {}
                    }
                } else return k && "get" in k && (f = k.get(a, false, e)) !== b ? f : o[c]
            }
        },
        css: function(a, c, d) {
            var e,
                f, c = h.camelCase(c);
            f = h.cssHooks[c];
            c = h.cssProps[c] || c;
            c === "cssFloat" && (c = "float");
            if (f && "get" in f && (e = f.get(a, true, d)) !== b) return e;
            if (Z) return Z(a, c)
        },
        swap: function(a, b, c) {
            var d = {},
                e;
            for (e in b) {
                d[e] = a.style[e];
                a.style[e] = b[e]
            }
            c = c.call(a);
            for (e in b) a.style[e] = d[e];
            return c
        }
    });
    h.curCSS = h.css;
    w.defaultView && w.defaultView.getComputedStyle && (Ma = function(a, b) {
        var c, d, e, f = a.style,
            b = b.replace(qb, "-$1").toLowerCase();
        if ((d = a.ownerDocument.defaultView) && (e = d.getComputedStyle(a, null))) {
            c = e.getPropertyValue(b);
            c === "" && !h.contains(a.ownerDocument.documentElement, a) && (c = h.style(a, b))
        }
        if (!h.support.pixelMargin && e && tb.test(b) && oa.test(c)) {
            d = f.width;
            f.width = c;
            c = e.width;
            f.width = d
        }
        return c
    });
    w.documentElement.currentStyle && (Na = function(a, b) {
        var c, d, e = a.currentStyle && a.currentStyle[b],
            f = a.style;
        if (e == null && f && (c = f[b])) e = c;
        if (oa.test(e)) {
            c = f.left;
            if (d = a.runtimeStyle && a.runtimeStyle.left) a.runtimeStyle.left = a.currentStyle.left;
            f.left = b === "fontSize" ? "1em" : e;
            e = f.pixelLeft + "px";
            f.left = c;
            if (d) a.runtimeStyle.left = d
        }
        return e ===
            "" ? "auto" : e
    });
    Z = Ma || Na;
    h.each(["height", "width"], function(a, b) {
        h.cssHooks[b] = {
            get: function(a, c, d) {
                if (c) return a.offsetWidth !== 0 ? z(a, b, d) : h.swap(a, ub, function() {
                    return z(a, b, d)
                })
            },
            set: function(a, b) {
                return rb.test(b) ? b + "px" : b
            }
        }
    });
    h.support.opacity || (h.cssHooks.opacity = {
        get: function(a, b) {
            return pb.test((b && a.currentStyle ? a.currentStyle.filter : a.style.filter) || "") ? parseFloat(RegExp.$1) / 100 + "" : b ? "1" : ""
        },
        set: function(a, b) {
            var c = a.style,
                d = a.currentStyle,
                e = h.isNumeric(b) ? "alpha(opacity=" + b * 100 + ")" : "",
                f = d &&
                d.filter || c.filter || "";
            c.zoom = 1;
            if (b >= 1 && h.trim(f.replace(xa, "")) === "") {
                c.removeAttribute("filter");
                if (d && !d.filter) return
            }
            c.filter = xa.test(f) ? f.replace(xa, e) : f + " " + e
        }
    });
    h(function() {
        if (!h.support.reliableMarginRight) h.cssHooks.marginRight = {
            get: function(a, b) {
                return h.swap(a, {
                    display: "inline-block"
                }, function() {
                    return b ? Z(a, "margin-right") : a.style.marginRight
                })
            }
        }
    });
    h.expr && h.expr.filters && (h.expr.filters.hidden = function(a) {
        var b = a.offsetHeight;
        return a.offsetWidth === 0 && b === 0 || !h.support.reliableHiddenOffsets &&
            (a.style && a.style.display || h.css(a, "display")) === "none"
    }, h.expr.filters.visible = function(a) {
        return !h.expr.filters.hidden(a)
    });
    h.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(a, b) {
        h.cssHooks[a + b] = {
            expand: function(c) {
                for (var d = typeof c === "string" ? c.split(" ") : [c], e = {}, c = 0; c < 4; c++) e[a + V[c] + b] = d[c] || d[c - 2] || d[0];
                return e
            }
        }
    });
    var vb = /%20/g,
        Xa = /\[\]$/,
        Oa = /\r?\n/g,
        wb = /#.*$/,
        xb = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg,
        yb = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,
        zb = /^(?:GET|HEAD)$/,
        Ab = /^\/\//,
        Pa = /\?/,
        Bb = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
        Cb = /^(?:select|textarea)/i,
        Aa = /\s+/,
        Db = /([?&])_=[^&]*/,
        Qa = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,
        Ra = h.fn.load,
        pa = {},
        Sa = {},
        X, Y, Ta = ["*/"] + ["*"];
    try {
        X = D.href
    } catch (Jb) {
        X = w.createElement("a"), X.href = "", X = X.href
    }
    Y = Qa.exec(X.toLowerCase()) || [];
    h.fn.extend({
        load: function(a, c, d) {
            if (typeof a !== "string" && Ra) return Ra.apply(this, arguments);
            if (!this.length) return this;
            var e = a.indexOf(" ");
            if (e >= 0) var f = a.slice(e,
                    a.length),
                a = a.slice(0, e);
            e = "GET";
            if (c)
                if (h.isFunction(c)) {
                    d = c;
                    c = b
                } else if (typeof c === "object") {
                c = h.param(c, h.ajaxSettings.traditional);
                e = "POST"
            }
            var g = this;
            h.ajax({
                url: a,
                type: e,
                dataType: "html",
                data: c,
                complete: function(a, b, c) {
                    c = a.responseText;
                    if (a.isResolved()) {
                        a.done(function(a) {
                            c = a
                        });
                        g.html(f ? h("<div>").append(c.replace(Bb, "")).find(f) : c)
                    }
                    d && g.each(d, [c, b, a])
                }
            });
            return this
        },
        serialize: function() {
            return h.param(this.serializeArray())
        },
        serializeArray: function() {
            return this.map(function() {
                return this.elements ?
                    h.makeArray(this.elements) : this
            }).filter(function() {
                return this.name && !this.disabled && (this.checked || Cb.test(this.nodeName) || yb.test(this.type))
            }).map(function(a, b) {
                var c = h(this).val();
                return c == null ? null : h.isArray(c) ? h.map(c, function(a) {
                    return {
                        name: b.name,
                        value: a.replace(Oa, "\r\n")
                    }
                }) : {
                    name: b.name,
                    value: c.replace(Oa, "\r\n")
                }
            }).get()
        }
    });
    h.each("ajaxStart,ajaxStop,ajaxComplete,ajaxError,ajaxSuccess,ajaxSend".split(","), function(a, b) {
        h.fn[b] = function(a) {
            return this.on(b, a)
        }
    });
    h.each(["get", "post"],
        function(a, c) {
            h[c] = function(a, d, e, f) {
                if (h.isFunction(d)) {
                    f = f || e;
                    e = d;
                    d = b
                }
                return h.ajax({
                    type: c,
                    url: a,
                    data: d,
                    success: e,
                    dataType: f
                })
            }
        });
    h.extend({
        getScript: function(a, c) {
            return h.get(a, b, c, "script")
        },
        getJSON: function(a, b, c) {
            return h.get(a, b, c, "json")
        },
        ajaxSetup: function(a, b) {
            if (b) v(a, h.ajaxSettings);
            else {
                b = a;
                a = h.ajaxSettings
            }
            v(a, b);
            return a
        },
        ajaxSettings: {
            url: X,
            isLocal: /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/.test(Y[1]),
            global: !0,
            type: "GET",
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            processData: !0,
            async: !0,
            accepts: {
                xml: "application/xml, text/xml",
                html: "text/html",
                text: "text/plain",
                json: "application/json, text/javascript",
                "*": Ta
            },
            contents: {
                xml: /xml/,
                html: /html/,
                json: /json/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText"
            },
            converters: {
                "* text": a.String,
                "text html": !0,
                "text json": h.parseJSON,
                "text xml": h.parseXML
            },
            flatOptions: {
                context: !0,
                url: !0
            }
        },
        ajaxPrefilter: s(pa),
        ajaxTransport: s(Sa),
        ajax: function(a, c) {
            function d(a, c, n, m) {
                if (N !== 2) {
                    N = 2;
                    r && clearTimeout(r);
                    u = b;
                    q = m || "";
                    s.readyState =
                        a > 0 ? 4 : 0;
                    var y, p, E, m = c;
                    if (n) {
                        var I = e,
                            t = s,
                            U = I.contents,
                            w = I.dataTypes,
                            x = I.responseFields,
                            z, D, A, G;
                        for (D in x) D in n && (t[x[D]] = n[D]);
                        for (; w[0] === "*";) {
                            w.shift();
                            z === b && (z = I.mimeType || t.getResponseHeader("content-type"))
                        }
                        if (z)
                            for (D in U)
                                if (U[D] && U[D].test(z)) {
                                    w.unshift(D);
                                    break
                                }
                        if (w[0] in n) A = w[0];
                        else {
                            for (D in n) {
                                if (!w[0] || I.converters[D + " " + w[0]]) {
                                    A = D;
                                    break
                                }
                                G || (G = D)
                            }
                            A = A || G
                        }
                        if (A) {
                            A !== w[0] && w.unshift(A);
                            n = n[A]
                        } else n = void 0
                    } else n = b;
                    if (a >= 200 && a < 300 || a === 304) {
                        if (e.ifModified) {
                            if (z = s.getResponseHeader("Last-Modified")) h.lastModified[l] =
                                z;
                            if (z = s.getResponseHeader("Etag")) h.etag[l] = z
                        }
                        if (a === 304) {
                            m = "notmodified";
                            y = true
                        } else try {
                            z = e;
                            z.dataFilter && (n = z.dataFilter(n, z.dataType));
                            var B = z.dataTypes;
                            D = {};
                            var C, L, Ya = B.length,
                                M, F = B[0],
                                J, K, H, O, ba;
                            for (C = 1; C < Ya; C++) {
                                if (C === 1)
                                    for (L in z.converters) typeof L === "string" && (D[L.toLowerCase()] = z.converters[L]);
                                J = F;
                                F = B[C];
                                if (F === "*") F = J;
                                else if (J !== "*" && J !== F) {
                                    K = J + " " + F;
                                    H = D[K] || D["* " + F];
                                    if (!H) {
                                        ba = b;
                                        for (O in D) {
                                            M = O.split(" ");
                                            if (M[0] === J || M[0] === "*")
                                                if (ba = D[M[1] + " " + F]) {
                                                    O = D[O];
                                                    O === true ? H = ba : ba === true &&
                                                        (H = O);
                                                    break
                                                }
                                        }
                                    }!H && !ba && h.error("No conversion from " + K.replace(" ", " to "));
                                    H !== true && (n = H ? H(n) : ba(O(n)))
                                }
                            }
                            p = n;
                            m = "success";
                            y = true
                        } catch (S) {
                            m = "parsererror";
                            E = S
                        }
                    } else {
                        E = m;
                        if (!m || a) {
                            m = "error";
                            a < 0 && (a = 0)
                        }
                    }
                    s.status = a;
                    s.statusText = "" + (c || m);
                    y ? o.resolveWith(f, [p, m, s]) : o.rejectWith(f, [s, m, E]);
                    s.statusCode(j);
                    j = b;
                    v && g.trigger("ajax" + (y ? "Success" : "Error"), [s, e, y ? p : E]);
                    k.fireWith(f, [s, m]);
                    if (v) {
                        g.trigger("ajaxComplete", [s, e]);
                        --h.active || h.event.trigger("ajaxStop")
                    }
                }
            }
            if (typeof a === "object") {
                c = a;
                a = b
            }
            var c = c || {},
                e = h.ajaxSetup({}, c),
                f = e.context || e,
                g = f !== e && (f.nodeType || f instanceof h) ? h(f) : h.event,
                o = h.Deferred(),
                k = h.Callbacks("once memory"),
                j = e.statusCode || {},
                l, n = {},
                m = {},
                q, p, u, r, I, N = 0,
                v, t, s = {
                    readyState: 0,
                    setRequestHeader: function(a, b) {
                        if (!N) {
                            var c = a.toLowerCase(),
                                a = m[c] = m[c] || a;
                            n[a] = b
                        }
                        return this
                    },
                    getAllResponseHeaders: function() {
                        return N === 2 ? q : null
                    },
                    getResponseHeader: function(a) {
                        var c;
                        if (N === 2) {
                            if (!p)
                                for (p = {}; c = xb.exec(q);) p[c[1].toLowerCase()] = c[2];
                            c = p[a.toLowerCase()]
                        }
                        return c === b ? null : c
                    },
                    overrideMimeType: function(a) {
                        if (!N) e.mimeType =
                            a;
                        return this
                    },
                    abort: function(a) {
                        a = a || "abort";
                        u && u.abort(a);
                        d(0, a);
                        return this
                    }
                };
            o.promise(s);
            s.success = s.done;
            s.error = s.fail;
            s.complete = k.add;
            s.statusCode = function(a) {
                if (a) {
                    var b;
                    if (N < 2)
                        for (b in a) j[b] = [j[b], a[b]];
                    else {
                        b = a[s.status];
                        s.then(b, b)
                    }
                }
                return this
            };
            e.url = ((a || e.url) + "").replace(wb, "").replace(Ab, Y[1] + "//");
            e.dataTypes = h.trim(e.dataType || "*").toLowerCase().split(Aa);
            if (e.crossDomain == null) {
                I = Qa.exec(e.url.toLowerCase());
                e.crossDomain = !(!I || !(I[1] != Y[1] || I[2] != Y[2] || (I[3] || (I[1] === "http:" ?
                    80 : 443)) != (Y[3] || (Y[1] === "http:" ? 80 : 443))))
            }
            if (e.data && e.processData && typeof e.data !== "string") e.data = h.param(e.data, e.traditional);
            A(pa, e, c, s);
            if (N === 2) return false;
            v = e.global;
            e.type = e.type.toUpperCase();
            e.hasContent = !zb.test(e.type);
            v && h.active++ === 0 && h.event.trigger("ajaxStart");
            if (!e.hasContent) {
                if (e.data) {
                    e.url = e.url + ((Pa.test(e.url) ? "&" : "?") + e.data);
                    delete e.data
                }
                l = e.url;
                if (e.cache === false) {
                    I = h.now();
                    var w = e.url.replace(Db, "$1_=" + I);
                    e.url = w + (w === e.url ? (Pa.test(e.url) ? "&" : "?") + "_=" + I : "")
                }
            }(e.data &&
                e.hasContent && e.contentType !== false || c.contentType) && s.setRequestHeader("Content-Type", e.contentType);
            if (e.ifModified) {
                l = l || e.url;
                h.lastModified[l] && s.setRequestHeader("If-Modified-Since", h.lastModified[l]);
                h.etag[l] && s.setRequestHeader("If-None-Match", h.etag[l])
            }
            s.setRequestHeader("Accept", e.dataTypes[0] && e.accepts[e.dataTypes[0]] ? e.accepts[e.dataTypes[0]] + (e.dataTypes[0] !== "*" ? ", " + Ta + "; q=0.01" : "") : e.accepts["*"]);
            for (t in e.headers) s.setRequestHeader(t, e.headers[t]);
            if (e.beforeSend && (e.beforeSend.call(f,
                    s, e) === false || N === 2)) {
                s.abort();
                return false
            }
            for (t in {
                    success: 1,
                    error: 1,
                    complete: 1
                }) s[t](e[t]);
            if (u = A(Sa, e, c, s)) {
                s.readyState = 1;
                v && g.trigger("ajaxSend", [s, e]);
                e.async && e.timeout > 0 && (r = setTimeout(function() {
                    s.abort("timeout")
                }, e.timeout));
                try {
                    N = 1;
                    u.send(n, d)
                } catch (x) {
                    if (N < 2) d(-1, x);
                    else throw x;
                }
            } else d(-1, "No Transport");
            return s
        },
        param: function(a, c) {
            var d = [],
                e = function(a, b) {
                    b = h.isFunction(b) ? b() : b;
                    d[d.length] = encodeURIComponent(a) + "=" + encodeURIComponent(b)
                };
            if (c === b) c = h.ajaxSettings.traditional;
            if (h.isArray(a) || a.jquery && !h.isPlainObject(a)) h.each(a, function() {
                e(this.name, this.value)
            });
            else
                for (var f in a) r(f, a[f], c, e);
            return d.join("&").replace(vb, "+")
        }
    });
    h.extend({
        active: 0,
        lastModified: {},
        etag: {}
    });
    var Eb = h.now(),
        ma = /(\=)\?(&|$)|\?\?/i;
    h.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            return h.expando + "_" + Eb++
        }
    });
    h.ajaxPrefilter("json jsonp", function(b, c, d) {
        c = typeof b.data === "string" && /^application\/x\-www\-form\-urlencoded/.test(b.contentType);
        if (b.dataTypes[0] === "jsonp" || b.jsonp !==
            false && (ma.test(b.url) || c && ma.test(b.data))) {
            var e, f = b.jsonpCallback = h.isFunction(b.jsonpCallback) ? b.jsonpCallback() : b.jsonpCallback,
                g = a[f],
                o = b.url,
                k = b.data,
                j = "$1" + f + "$2";
            if (b.jsonp !== false) {
                o = o.replace(ma, j);
                if (b.url === o) {
                    c && (k = k.replace(ma, j));
                    b.data === k && (o = o + ((/\?/.test(o) ? "&" : "?") + b.jsonp + "=" + f))
                }
            }
            b.url = o;
            b.data = k;
            a[f] = function(a) {
                e = [a]
            };
            d.always(function() {
                a[f] = g;
                if (e && h.isFunction(g)) a[f](e[0])
            });
            b.converters["script json"] = function() {
                e || h.error(f + " was not called");
                return e[0]
            };
            b.dataTypes[0] =
                "json";
            return "script"
        }
    });
    h.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /javascript|ecmascript/
        },
        converters: {
            "text script": function(a) {
                h.globalEval(a);
                return a
            }
        }
    });
    h.ajaxPrefilter("script", function(a) {
        if (a.cache === b) a.cache = false;
        if (a.crossDomain) {
            a.type = "GET";
            a.global = false
        }
    });
    h.ajaxTransport("script", function(a) {
        if (a.crossDomain) {
            var c, d = w.head || w.getElementsByTagName("head")[0] || w.documentElement;
            return {
                send: function(e,
                    f) {
                    c = w.createElement("script");
                    c.async = "async";
                    if (a.scriptCharset) c.charset = a.scriptCharset;
                    c.src = a.url;
                    c.onload = c.onreadystatechange = function(a, e) {
                        if (e || !c.readyState || /loaded|complete/.test(c.readyState)) {
                            c.onload = c.onreadystatechange = null;
                            d && c.parentNode && d.removeChild(c);
                            c = b;
                            e || f(200, "success")
                        }
                    };
                    d.insertBefore(c, d.firstChild)
                },
                abort: function() {
                    if (c) c.onload(0, 1)
                }
            }
        }
    });
    var ya = a.ActiveXObject ? function() {
            for (var a in ha) ha[a](0, 1)
        } : !1,
        Fb = 0,
        ha;
    h.ajaxSettings.xhr = a.ActiveXObject ? function() {
        var b;
        if (!(b = !this.isLocal && t())) a: {
            try {
                b = new a.ActiveXObject("Microsoft.XMLHTTP");
                break a
            } catch (c) {}
            b = void 0
        }
        return b
    } : t;
    (function(a) {
        h.extend(h.support, {
            ajax: !!a,
            cors: !!a && "withCredentials" in a
        })
    })(h.ajaxSettings.xhr());
    h.support.ajax && h.ajaxTransport(function(c) {
        if (!c.crossDomain || h.support.cors) {
            var d;
            return {
                send: function(e, f) {
                    var g = c.xhr(),
                        o, k;
                    c.username ? g.open(c.type, c.url, c.async, c.username, c.password) : g.open(c.type, c.url, c.async);
                    if (c.xhrFields)
                        for (k in c.xhrFields) g[k] = c.xhrFields[k];
                    c.mimeType && g.overrideMimeType &&
                        g.overrideMimeType(c.mimeType);
                    !c.crossDomain && !e["X-Requested-With"] && (e["X-Requested-With"] = "XMLHttpRequest");
                    try {
                        for (k in e) g.setRequestHeader(k, e[k])
                    } catch (j) {}
                    g.send(c.hasContent && c.data || null);
                    d = function(a, e) {
                        var k, j, l, n, m;
                        try {
                            if (d && (e || g.readyState === 4)) {
                                d = b;
                                if (o) {
                                    g.onreadystatechange = h.noop;
                                    ya && delete ha[o]
                                }
                                if (e) g.readyState !== 4 && g.abort();
                                else {
                                    k = g.status;
                                    l = g.getAllResponseHeaders();
                                    n = {};
                                    if ((m = g.responseXML) && m.documentElement) n.xml = m;
                                    try {
                                        n.text = g.responseText
                                    } catch (q) {}
                                    try {
                                        j = g.statusText
                                    } catch (p) {
                                        j =
                                            ""
                                    }!k && c.isLocal && !c.crossDomain ? k = n.text ? 200 : 404 : k === 1223 && (k = 204)
                                }
                            }
                        } catch (u) {
                            e || f(-1, u)
                        }
                        n && f(k, j, n, l)
                    };
                    if (!c.async || g.readyState === 4) d();
                    else {
                        o = ++Fb;
                        if (ya) {
                            if (!ha) {
                                ha = {};
                                h(a).unload(ya)
                            }
                            ha[o] = d
                        }
                        g.onreadystatechange = d
                    }
                },
                abort: function() {
                    d && d(0, 1)
                }
            }
        }
    });
    var qa = {},
        R, aa, Gb = /^(?:toggle|show|hide)$/,
        Hb = /^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,
        na, ka = [
            ["height", "marginTop", "marginBottom", "paddingTop", "paddingBottom"],
            ["width", "marginLeft", "marginRight", "paddingLeft", "paddingRight"],
            ["opacity"]
        ],
        ja;
    h.fn.extend({
        show: function(a,
            b, c) {
            if (a || a === 0) return this.animate(B("show", 3), a, b, c);
            for (var c = 0, d = this.length; c < d; c++) {
                a = this[c];
                if (a.style) {
                    b = a.style.display;
                    if (!h._data(a, "olddisplay") && b === "none") b = a.style.display = "";
                    (b === "" && h.css(a, "display") === "none" || !h.contains(a.ownerDocument.documentElement, a)) && h._data(a, "olddisplay", C(a.nodeName))
                }
            }
            for (c = 0; c < d; c++) {
                a = this[c];
                if (a.style) {
                    b = a.style.display;
                    if (b === "" || b === "none") a.style.display = h._data(a, "olddisplay") || ""
                }
            }
            return this
        },
        hide: function(a, b, c) {
            if (a || a === 0) return this.animate(B("hide",
                3), a, b, c);
            for (var c = 0, d = this.length; c < d; c++) {
                a = this[c];
                if (a.style) {
                    b = h.css(a, "display");
                    b !== "none" && !h._data(a, "olddisplay") && h._data(a, "olddisplay", b)
                }
            }
            for (c = 0; c < d; c++)
                if (this[c].style) this[c].style.display = "none";
            return this
        },
        _toggle: h.fn.toggle,
        toggle: function(a, b, c) {
            var d = typeof a === "boolean";
            h.isFunction(a) && h.isFunction(b) ? this._toggle.apply(this, arguments) : a == null || d ? this.each(function() {
                var b = d ? a : h(this).is(":hidden");
                h(this)[b ? "show" : "hide"]()
            }) : this.animate(B("toggle", 3), a, b, c);
            return this
        },
        fadeTo: function(a, b, c, d) {
            return this.filter(":hidden").css("opacity", 0).show().end().animate({
                opacity: b
            }, a, c, d)
        },
        animate: function(a, b, c, d) {
            function e() {
                f.queue === false && h._mark(this);
                var b = h.extend({}, f),
                    c = this.nodeType === 1,
                    d = c && h(this).is(":hidden"),
                    g, o, k, j, l;
                b.animatedProperties = {};
                for (k in a) {
                    g = h.camelCase(k);
                    if (k !== g) {
                        a[g] = a[k];
                        delete a[k]
                    }
                    if ((o = h.cssHooks[g]) && "expand" in o) {
                        j = o.expand(a[g]);
                        delete a[g];
                        for (k in j) k in a || (a[k] = j[k])
                    }
                }
                for (g in a) {
                    o = a[g];
                    if (h.isArray(o)) {
                        b.animatedProperties[g] =
                            o[1];
                        o = a[g] = o[0]
                    } else b.animatedProperties[g] = b.specialEasing && b.specialEasing[g] || b.easing || "swing";
                    if (o === "hide" && d || o === "show" && !d) return b.complete.call(this);
                    if (c && (g === "height" || g === "width")) {
                        b.overflow = [this.style.overflow, this.style.overflowX, this.style.overflowY];
                        if (h.css(this, "display") === "inline" && h.css(this, "float") === "none") !h.support.inlineBlockNeedsLayout || C(this.nodeName) === "inline" ? this.style.display = "inline-block" : this.style.zoom = 1
                    }
                }
                if (b.overflow != null) this.style.overflow = "hidden";
                for (k in a) {
                    c = new h.fx(this, b, k);
                    o = a[k];
                    if (Gb.test(o))
                        if (g = h._data(this, "toggle" + k) || (o === "toggle" ? d ? "show" : "hide" : 0)) {
                            h._data(this, "toggle" + k, g === "show" ? "hide" : "show");
                            c[g]()
                        } else c[o]();
                    else {
                        g = Hb.exec(o);
                        j = c.cur();
                        if (g) {
                            o = parseFloat(g[2]);
                            l = g[3] || (h.cssNumber[k] ? "" : "px");
                            if (l !== "px") {
                                h.style(this, k, (o || 1) + l);
                                j = (o || 1) / c.cur() * j;
                                h.style(this, k, j + l)
                            }
                            g[1] && (o = (g[1] === "-=" ? -1 : 1) * o + j);
                            c.custom(j, o, l)
                        } else c.custom(j, o, "")
                    }
                }
                return true
            }
            var f = h.speed(b, c, d);
            if (h.isEmptyObject(a)) return this.each(f.complete, [false]);
            a = h.extend({}, a);
            return f.queue === false ? this.each(e) : this.queue(f.queue, e)
        },
        stop: function(a, c, d) {
            if (typeof a !== "string") {
                d = c;
                c = a;
                a = b
            }
            c && a !== false && this.queue(a || "fx", []);
            return this.each(function() {
                var b, c = false,
                    e = h.timers,
                    f = h._data(this);
                d || h._unmark(true, this);
                if (a == null)
                    for (b in f) {
                        if (f[b] && f[b].stop && b.indexOf(".run") === b.length - 4) {
                            var g = f[b];
                            h.removeData(this, b, true);
                            g.stop(d)
                        }
                    } else if (f[b = a + ".run"] && f[b].stop) {
                        f = f[b];
                        h.removeData(this, b, true);
                        f.stop(d)
                    }
                for (b = e.length; b--;)
                    if (e[b].elem ===
                        this && (a == null || e[b].queue === a)) {
                        if (d) e[b](true);
                        else e[b].saveState();
                        c = true;
                        e.splice(b, 1)
                    }(!d || !c) && h.dequeue(this, a)
            })
        }
    });
    h.each({
        slideDown: B("show", 1),
        slideUp: B("hide", 1),
        slideToggle: B("toggle", 1),
        fadeIn: {
            opacity: "show"
        },
        fadeOut: {
            opacity: "hide"
        },
        fadeToggle: {
            opacity: "toggle"
        }
    }, function(a, b) {
        h.fn[a] = function(a, c, d) {
            return this.animate(b, a, c, d)
        }
    });
    h.extend({
        speed: function(a, b, c) {
            var d = a && typeof a === "object" ? h.extend({}, a) : {
                complete: c || !c && b || h.isFunction(a) && a,
                duration: a,
                easing: c && b || b && !h.isFunction(b) &&
                    b
            };
            d.duration = h.fx.off ? 0 : typeof d.duration === "number" ? d.duration : d.duration in h.fx.speeds ? h.fx.speeds[d.duration] : h.fx.speeds._default;
            if (d.queue == null || d.queue === true) d.queue = "fx";
            d.old = d.complete;
            d.complete = function(a) {
                h.isFunction(d.old) && d.old.call(this);
                d.queue ? h.dequeue(this, d.queue) : a !== false && h._unmark(this)
            };
            return d
        },
        easing: {
            linear: function(a) {
                return a
            },
            swing: function(a) {
                return -Math.cos(a * Math.PI) / 2 + 0.5
            }
        },
        timers: [],
        fx: function(a, b, c) {
            this.options = b;
            this.elem = a;
            this.prop = c;
            b.orig = b.orig || {}
        }
    });
    h.fx.prototype = {
        update: function() {
            this.options.step && this.options.step.call(this.elem, this.now, this);
            (h.fx.step[this.prop] || h.fx.step._default)(this)
        },
        cur: function() {
            if (this.elem[this.prop] != null && (!this.elem.style || this.elem.style[this.prop] == null)) return this.elem[this.prop];
            var a, b = h.css(this.elem, this.prop);
            return isNaN(a = parseFloat(b)) ? !b || b === "auto" ? 0 : b : a
        },
        custom: function(a, c, d) {
            function e(a) {
                return f.step(a)
            }
            var f = this,
                g = h.fx;
            this.startTime = ja || x();
            this.end = c;
            this.now = this.start = a;
            this.pos =
                this.state = 0;
            this.unit = d || this.unit || (h.cssNumber[this.prop] ? "" : "px");
            e.queue = this.options.queue;
            e.elem = this.elem;
            e.saveState = function() {
                h._data(f.elem, "fxshow" + f.prop) === b && (f.options.hide ? h._data(f.elem, "fxshow" + f.prop, f.start) : f.options.show && h._data(f.elem, "fxshow" + f.prop, f.end))
            };
            e() && h.timers.push(e) && !na && (na = setInterval(g.tick, g.interval))
        },
        show: function() {
            var a = h._data(this.elem, "fxshow" + this.prop);
            this.options.orig[this.prop] = a || h.style(this.elem, this.prop);
            this.options.show = true;
            a !== b ?
                this.custom(this.cur(), a) : this.custom(this.prop === "width" || this.prop === "height" ? 1 : 0, this.cur());
            h(this.elem).show()
        },
        hide: function() {
            this.options.orig[this.prop] = h._data(this.elem, "fxshow" + this.prop) || h.style(this.elem, this.prop);
            this.options.hide = true;
            this.custom(this.cur(), 0)
        },
        step: function(a) {
            var b, c = ja || x(),
                d = true,
                e = this.elem,
                f = this.options;
            if (a || c >= f.duration + this.startTime) {
                this.now = this.end;
                this.pos = this.state = 1;
                this.update();
                f.animatedProperties[this.prop] = true;
                for (b in f.animatedProperties) f.animatedProperties[b] !==
                    true && (d = false);
                if (d) {
                    f.overflow != null && !h.support.shrinkWrapBlocks && h.each(["", "X", "Y"], function(a, b) {
                        e.style["overflow" + b] = f.overflow[a]
                    });
                    f.hide && h(e).hide();
                    if (f.hide || f.show)
                        for (b in f.animatedProperties) {
                            h.style(e, b, f.orig[b]);
                            h.removeData(e, "fxshow" + b, true);
                            h.removeData(e, "toggle" + b, true)
                        }
                    if (a = f.complete) {
                        f.complete = false;
                        a.call(e)
                    }
                }
                return false
            }
            if (f.duration == Infinity) this.now = c;
            else {
                a = c - this.startTime;
                this.state = a / f.duration;
                this.pos = h.easing[f.animatedProperties[this.prop]](this.state, a,
                    0, 1, f.duration);
                this.now = this.start + (this.end - this.start) * this.pos
            }
            this.update();
            return true
        }
    };
    h.extend(h.fx, {
        tick: function() {
            for (var a, b = h.timers, c = 0; c < b.length; c++) {
                a = b[c];
                !a() && b[c] === a && b.splice(c--, 1)
            }
            b.length || h.fx.stop()
        },
        interval: 13,
        stop: function() {
            clearInterval(na);
            na = null
        },
        speeds: {
            slow: 600,
            fast: 200,
            _default: 400
        },
        step: {
            opacity: function(a) {
                h.style(a.elem, "opacity", a.now)
            },
            _default: function(a) {
                a.elem.style && a.elem.style[a.prop] != null ? a.elem.style[a.prop] = a.now + a.unit : a.elem[a.prop] = a.now
            }
        }
    });
    h.each(ka.concat.apply([], ka), function(a, b) {
        b.indexOf("margin") && (h.fx.step[b] = function(a) {
            h.style(a.elem, b, Math.max(0, a.now) + a.unit)
        })
    });
    h.expr && h.expr.filters && (h.expr.filters.animated = function(a) {
        return h.grep(h.timers, function(b) {
            return a === b.elem
        }).length
    });
    var Ua, Ib = /^t(?:able|d|h)$/i,
        Va = /^(?:body|html)$/i;
    Ua = "getBoundingClientRect" in w.documentElement ? function(a, b, c, d) {
        try {
            d = a.getBoundingClientRect()
        } catch (e) {}
        if (!d || !h.contains(c, a)) return d ? {
            top: d.top,
            left: d.left
        } : {
            top: 0,
            left: 0
        };
        a = b.body;
        b = K(b);
        return {
            top: d.top + (b.pageYOffset || h.support.boxModel && c.scrollTop || a.scrollTop) - (c.clientTop || a.clientTop || 0),
            left: d.left + (b.pageXOffset || h.support.boxModel && c.scrollLeft || a.scrollLeft) - (c.clientLeft || a.clientLeft || 0)
        }
    } : function(a, b, c) {
        var d, e = a.offsetParent,
            f = b.body;
        d = (b = b.defaultView) ? b.getComputedStyle(a, null) : a.currentStyle;
        for (var g = a.offsetTop, o = a.offsetLeft;
            (a = a.parentNode) && a !== f && a !== c;) {
            if (h.support.fixedPosition && d.position === "fixed") break;
            d = b ? b.getComputedStyle(a, null) : a.currentStyle;
            g = g - a.scrollTop;
            o = o - a.scrollLeft;
            if (a === e) {
                g = g + a.offsetTop;
                o = o + a.offsetLeft;
                if (h.support.doesNotAddBorder && (!h.support.doesAddBorderForTableAndCells || !Ib.test(a.nodeName))) {
                    g = g + (parseFloat(d.borderTopWidth) || 0);
                    o = o + (parseFloat(d.borderLeftWidth) || 0)
                }
                e = a.offsetParent
            }
            if (h.support.subtractsBorderForOverflowNotVisible && d.overflow !== "visible") {
                g = g + (parseFloat(d.borderTopWidth) || 0);
                o = o + (parseFloat(d.borderLeftWidth) || 0)
            }
        }
        if (d.position === "relative" || d.position === "static") {
            g = g + f.offsetTop;
            o = o + f.offsetLeft
        }
        if (h.support.fixedPosition &&
            d.position === "fixed") {
            g = g + Math.max(c.scrollTop, f.scrollTop);
            o = o + Math.max(c.scrollLeft, f.scrollLeft)
        }
        return {
            top: g,
            left: o
        }
    };
    h.fn.offset = function(a) {
        if (arguments.length) return a === b ? this : this.each(function(b) {
            h.offset.setOffset(this, a, b)
        });
        var c = this[0],
            d = c && c.ownerDocument;
        return !d ? null : c === d.body ? h.offset.bodyOffset(c) : Ua(c, d, d.documentElement)
    };
    h.offset = {
        bodyOffset: function(a) {
            var b = a.offsetTop,
                c = a.offsetLeft;
            if (h.support.doesNotIncludeMarginInBodyOffset) {
                b = b + (parseFloat(h.css(a, "marginTop")) || 0);
                c = c + (parseFloat(h.css(a, "marginLeft")) || 0)
            }
            return {
                top: b,
                left: c
            }
        },
        setOffset: function(a, b, c) {
            var d = h.css(a, "position");
            if (d === "static") a.style.position = "relative";
            var e = h(a),
                f = e.offset(),
                g = h.css(a, "top"),
                o = h.css(a, "left"),
                k = {},
                j = {};
            if ((d === "absolute" || d === "fixed") && h.inArray("auto", [g, o]) > -1) {
                j = e.position();
                d = j.top;
                o = j.left
            } else {
                d = parseFloat(g) || 0;
                o = parseFloat(o) || 0
            }
            h.isFunction(b) && (b = b.call(a, c, f));
            if (b.top != null) k.top = b.top - f.top + d;
            if (b.left != null) k.left = b.left - f.left + o;
            "using" in b ? b.using.call(a,
                k) : e.css(k)
        }
    };
    h.fn.extend({
        position: function() {
            if (!this[0]) return null;
            var a = this[0],
                b = this.offsetParent(),
                c = this.offset(),
                d = Va.test(b[0].nodeName) ? {
                    top: 0,
                    left: 0
                } : b.offset();
            c.top = c.top - (parseFloat(h.css(a, "marginTop")) || 0);
            c.left = c.left - (parseFloat(h.css(a, "marginLeft")) || 0);
            d.top = d.top + (parseFloat(h.css(b[0], "borderTopWidth")) || 0);
            d.left = d.left + (parseFloat(h.css(b[0], "borderLeftWidth")) || 0);
            return {
                top: c.top - d.top,
                left: c.left - d.left
            }
        },
        offsetParent: function() {
            return this.map(function() {
                for (var a =
                        this.offsetParent || w.body; a && !Va.test(a.nodeName) && h.css(a, "position") === "static";) a = a.offsetParent;
                return a
            })
        }
    });
    h.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function(a, c) {
        var d = /Y/.test(c);
        h.fn[a] = function(e) {
            return h.access(this, function(a, e, f) {
                var g = K(a);
                if (f === b) return g ? c in g ? g[c] : h.support.boxModel && g.document.documentElement[e] || g.document.body[e] : a[e];
                g ? g.scrollTo(!d ? f : h(g).scrollLeft(), d ? f : h(g).scrollTop()) : a[e] = f
            }, a, e, arguments.length, null)
        }
    });
    h.each({
            Height: "height",
            Width: "width"
        },
        function(a, c) {
            var d = "client" + a,
                e = "scroll" + a,
                f = "offset" + a;
            h.fn["inner" + a] = function() {
                var a = this[0];
                return a ? a.style ? parseFloat(h.css(a, c, "padding")) : this[c]() : null
            };
            h.fn["outer" + a] = function(a) {
                var b = this[0];
                return b ? b.style ? parseFloat(h.css(b, c, a ? "margin" : "border")) : this[c]() : null
            };
            h.fn[c] = function(a) {
                return h.access(this, function(a, c, g) {
                    if (h.isWindow(a)) {
                        c = a.document;
                        a = c.documentElement[d];
                        return h.support.boxModel && a || c.body && c.body[d] || a
                    }
                    if (a.nodeType === 9) {
                        c = a.documentElement;
                        return c[d] >= c[e] ?
                            c[d] : Math.max(a.body[e], c[e], a.body[f], c[f])
                    }
                    if (g === b) {
                        a = h.css(a, c);
                        c = parseFloat(a);
                        return h.isNumeric(c) ? c : a
                    }
                    h(a).css(c, g)
                }, c, a, arguments.length, null)
            }
        });
    a.jQuery = a.$ = h;
    "function" === typeof define && define.amd && define.amd.jQuery && define("jquery", [], function() {
        return h
    })
})(window);
(function(a) {
    a.fn.slider = function(b) {
        if (void 0 != b.value) try {
            this.setRange(b.value)
        } catch (c) {} else if (void 0 != b.maxValue) try {
            this.duration = b.maxValue, this.setRange(this.range)
        } catch (d) {} else {
            var e = this;
            this.duration = b.max;
            this.onChange = b.onChange;
            this.direction = b.direction;
            var f = a('<div class="slider-total"></div>'),
                j = a('<div class="slider-range"></div>'),
                g = a('<div class="slider-handle"></div>');
            this.append(f);
            this.append(j);
            this.append(g);
            this.setRange = function(a) {
                if (void 0 != a) {
                    e.range = a;
                    var a = f.offset().left -
                        e.offset().left,
                        b = parseInt(j.css("bottom").replace("px", "")),
                        c = g.width();
                    if ("horizontal" == e.direction) {
                        var d = f.width() - c,
                            b = Math.floor(e.range * d / e.duration),
                            b = Math.min(b, d),
                            c = b + c / 2;
                        g.css({
                            left: b + a
                        });
                        j.css({
                            width: c
                        })
                    } else d = f.height() - c, a = Math.floor(e.range * d / e.duration), a = Math.min(a, d), c = a + c / 2, g.css({
                        bottom: a + b
                    }), j.css({
                        height: c
                    })
                }
            };
            this.setRange(b.range);
            b = function(b) {
                var c;
                isTouchDevice() ? (c = b.originalEvent.touches[0], void 0 == c && (c = b.touches[0])) : c = b;
                if (void 0 != c) {
                    var b = a(c.target),
                        d = 0;
                    "horizontal" ==
                    e.direction ? (d = c.offsetX, void 0 == d && (d = c.pageX - b.offset().left), d = d / f.width() * e.duration) : (d = c.offsetY, void 0 == d && (d = c.pageY - b.offset().top), d = (b.height() - d) / f.height() * e.duration);
                    e.setRange.apply(e, [d]);
                    e.onChange(d);
                    return !1
                }
            };
            f.bind(_event._click, b);
            j.bind(_event._click, b)
        }
    }
})(jQuery);
(function(a) {
    a.fn.addVideoSkin = function(b) {
        var c = this;
        this.theme = void 0;
        for (var d = 0; d < videoThemes.length; d++) videoThemes[d].name == b && (this.theme = videoThemes[d]);
        void 0 == this.theme && (this.theme = videoThemes[0]);
        var b = this.find("video:first"),
            e = b[0];
        if (!(void 0 == e || null == e)) {
            this.addClass("video-player").addClass(this.theme.name);
            var f = a('<div class="video-controls"></div>');
            this.append(f);
            d = a('<div class="control-border"></div>');
            f.append(d);
            var j = a('<div class="video-play"></div>');
            f.append(j);
            d = a('<div class="bevel"></div>');
            f.append(d);
            d = function(a) {
                e.paused == false ? e.pause() : e.play();
                stopEvent(a);
                return false
            };
            b.bind(_event._click, d);
            j.bind(_event._click, d);
            b.bind("play", function() {
                j.addClass("paused-button")
            });
            b.bind("pause", function() {
                j.removeClass("paused-button")
            });
            b.bind("ended", function() {
                j.removeClass("paused-button")
            });
            f.playButton = j;
            var g = a('<div class="video-timer">00:00</div>');
            f.append(g);
            b.bind("timeupdate", function() {
                var a = e.currentTime,
                    b = e.duration;
                if (b == 0 || b == void 0) b = 100;
                k.slider({
                    maxValue: b
                });
                k.slider({
                    value: a
                });
                g.text(timeFormat(a))
            });
            f.videoTimer = g;
            var k = a('<div class="video-seek"></div>');
            f.append(k);
            (function() {
                var a = e.duration;
                if (a == 0 || a == void 0) a = 100;
                k.slider({
                    range: 0,
                    max: a,
                    direction: "horizontal",
                    onChange: function(a) {
                        try {
                            e.currentTime = a
                        } catch (b) {}
                    }
                });
                f.show();
                c.controlbarWidth = f.width()
            })();
            f.videoSeek = k;
            d = a('<div class="bevel"></div>');
            f.append(d);
            var m = a('<div class="volume-seek"></div>');
            f.append(m);
            this.volume_value = 1;
            m.slider({
                range: 1,
                max: 1,
                direction: "vertical",
                onChange: function(a) {
                    try {
                        c.volume_value =
                            a;
                        if (a == 0) {
                            e.muted = true;
                            n.addClass("volume-mute")
                        } else {
                            e.muted = false;
                            n.removeClass("volume-mute")
                        }
                        e.volume = a
                    } catch (b) {}
                }
            });
            f.volumeSeek = m;
            var n = a('<div class="volume-button"></div>');
            f.append(n);
            n.bind(_event._click, function() {
                if (e.muted == true) {
                    e.muted = false;
                    m.slider({
                        value: c.volume_value
                    });
                    n.removeClass("volume-mute")
                } else {
                    e.muted = true;
                    m.slider({
                        value: 0
                    });
                    n.addClass("volume-mute")
                }
                return false
            });
            n.bind("mouseenter", function() {
                m.css({
                    visiblity: "visible",
                    opacity: "1"
                })
            });
            n.bind("mouseleave", function() {
                m.css({
                    visiblity: "hidden",
                    opacity: "0"
                })
            });
            m.bind("mouseenter", function() {
                m.css({
                    visiblity: "visible",
                    opacity: "1"
                })
            });
            m.bind("mouseleave", function() {
                m.css({
                    visiblity: "hidden",
                    opacity: "0"
                })
            });
            f.volumeButton = n;
            var l = a('<div class="player-fullscreen"></div>');
            f.append(l);
            l.bind(_event._click, function() {
                fullScreenApi.supportsFullScreen ? fullScreenApi.isFullScreen() ? fullScreenApi.cancelFullScreen() : fullScreenApi.requestFullScreen(e) : e.webkitSupportsFullscreen && e.webkitEnterFullscreen();
                return false
            });
            b.bind(fullScreenApi.fullScreenEventName,
                function() {
                    fullScreenApi.isFullScreen() ? l.addClass("player-exit-fullscreen") : l.removeClass("player-exit-fullscreen")
                });
            f.fullscreenButton = l;
            this.controlbar = f;
            this.resizeVideoSkin()
        }
    };
    a.fn.resizeVideoSkin = function() {
        var a = this.find("video:first")[0],
            c = this.controlbar;
        if (void 0 != c) {
            var d = c.videoSeek,
                e = c.volumeSeek,
                f = c.volumeButton,
                j = c.fullscreenButton,
                g = this.width(),
                k = Math.max(0, g - this.theme.seekWidth);
            0 >= k ? d.css({
                display: "none"
            }) : (d.css({
                width: k,
                display: "block"
            }), d.slider({
                value: a.currentTime
            }));
            c =
                f.offset().left - c.offset().left + (f.width() - e.width()) / 2;
            g < this.theme.fullscreenWidth ? (j.css({
                display: "none"
            }), g < this.theme.volumeWidth ? (f.css({
                display: "none"
            }), e.css({
                left: "-45px"
            })) : (f.css({
                display: "block"
            }), e.css({
                left: c + "px"
            }))) : (f.css({
                display: "block"
            }), j.css({
                display: "block"
            }), e.css({
                left: c + "px"
            }));
            !0 == a.muted ? e.slider({
                value: 0
            }) : e.slider({
                value: this.volume_value
            })
        }
    };
    a.fn.addAudioSkin = function(b) {
        var c = this;
        this.theme = void 0;
        for (var d = 0; d < audioThemes.length; d++) audioThemes[d].name == b && (this.theme =
            audioThemes[d]);
        void 0 == this.theme && (this.theme = audioThemes[0]);
        var b = this.find("audio:first"),
            e = b[0];
        if (!(void 0 == e || null == e)) {
            this.audioList = [];
            this.audioIndex = 0;
            if (0 == b.children("source").length) d = b.attr("src"), "" != d && void 0 != d && this.audioList.push(b.attr("src"));
            else
                for (d = 0; d < b.children("source").length; d++) this.audioList.push(b.children("source")[d].src);
            if (this.audioResources.length > this.audioList.length) {
                this.audioList = [];
                for (d = 0; d < this.audioResources.length; d++) this.audioList.push(this.audioResources[d])
            }
            this.addClass("audio-player").addClass(this.theme.name);
            this.play_btn = a('<div class="audio-play"></div>');
            this.append(this.play_btn);
            this.play_btn.bind(_event._click, function(a) {
                e.paused == false ? e.pause() : e.play();
                stopEvent(a);
                return false
            });
            b.bind("play", function() {
                c.play_btn.addClass("paused-button")
            });
            b.bind("pause", function() {
                c.play_btn.removeClass("paused-button")
            });
            b.bind("ended", function() {
                c.play_btn.removeClass("paused-button");
                c.audioIndex < c.audioList.length - 1 && f()
            });
            this.back_btn = a('<div class="back_button"></div>');
            this.append(this.back_btn);
            this.back_btn.bind(_event._click, function(a) {
                if (c.audioList.length != 0) {
                    c.audioIndex--;
                    if (c.audioIndex < 0) c.audioIndex = c.audioIndex + c.audioList.length;
                    var b = c.audioList[c.audioIndex];
                    e.src = b;
                    c.audio_name.text(g(b));
                    e.play();
                    stopEvent(a);
                    return false
                }
            });
            this.forward_btn = a('<div class="forward_button"></div>');
            this.append(this.forward_btn);
            var f = function(a) {
                if (c.audioList.length != 0) {
                    c.audioIndex++;
                    c.audioIndex = c.audioIndex % c.audioList.length;
                    var b = c.audioList[c.audioIndex];
                    e.src = b;
                    c.audio_name.text(g(b));
                    e.play();
                    stopEvent(a);
                    return false
                }
            };
            this.forward_btn.bind(_event._click, f);
            this.volume_seek = a('<div class="volume-seek"></div>');
            this.append(this.volume_seek);
            this.volume_value = 1;
            this.volume_seek.slider({
                range: 1,
                max: 1,
                direction: this.theme.volumeDirection,
                onChange: function(a) {
                    try {
                        c.volume_value = a;
                        if (a == 0) {
                            e.muted = true;
                            c.volume_btn.addClass("volume-mute")
                        } else {
                            e.muted = false;
                            c.volume_btn.removeClass("volume-mute")
                        }
                        e.volume = a
                    } catch (b) {}
                }
            });
            this.volume_btn = a('<div class="volume-button"></div>');
            this.append(this.volume_btn);
            var j = function(a) {
                c.volume_value = e.volume + a;
                c.volume_value = Math.max(0, c.volume_value);
                c.volume_value = Math.min(1, c.volume_value);
                e.volume = c.volume_value
            };
            this.volume_up_btn = a('<div class="volume-up-button"></div>');
            this.volume_down_btn = a('<div class="volume-down-button"></div>');
            this.volume_up_btn.bind(_event._click, function() {
                j(0.1)
            });
            this.volume_down_btn.bind(_event._click, function() {
                j(-0.1)
            });
            this.append(this.volume_up_btn);
            this.append(this.volume_down_btn);
            this.volume_btn.bind(_event._click, function(a) {
                if (e.muted ==
                    true) {
                    e.muted = false;
                    c.volume_seek.slider({
                        value: c.volume_value
                    });
                    c.volume_btn.removeClass("volume-mute")
                } else {
                    e.muted = true;
                    c.volume_seek.slider({
                        value: 0
                    });
                    c.volume_btn.addClass("volume-mute")
                }
                stopEvent(a);
                return false
            });
            this.audio_timer = a('<div class="audio-timer">00:00/00:00</div>');
            this.append(this.audio_timer);
            b.bind("timeupdate", function() {
                var a = e.currentTime,
                    b = e.duration;
                c.audio_seek.slider({
                    maxValue: b
                });
                c.audio_seek.slider({
                    value: a
                });
                c.audio_timer.text(timeFormat(a) + "/" + timeFormat(b))
            });
            this.audio_seek =
                a('<div class="audio-seek"></div>');
            this.append(this.audio_seek);
            (function() {
                var a = e.duration;
                if (a == 0 || a == void 0) a = 100;
                c.audio_seek.slider({
                    range: 0,
                    max: a,
                    direction: "horizontal",
                    onChange: function(a) {
                        try {
                            e.currentTime = a
                        } catch (b) {}
                    }
                });
                c.resizeAudioSkin()
            })();
            this.audio_name = a('<div class="audio-file"></div>');
            this.append(this.audio_name);
            d = "";
            0 < this.audioList.length && (d = this.audioList[0]);
            var g = function(a) {
                if (a == "") return "";
                var b = -1,
                    b = a.indexOf("\\") == -1 ? a.lastIndexOf("/") : a.lastIndexOf("\\");
                iNameEnd =
                    a.lastIndexOf(".");
                return fileTitle = a.substr(b + 1, iNameEnd - b - 1)
            };
            this.audio_name.text(g(d));
            c.resizeAudioSkin()
        }
    };
    a.fn.resizeAudioSkin = function() {
        var a = this.find("audio:first")[0];
        if (!(null == this.theme || void 0 == this.theme)) {
            var c = Math.max(0, this.width() - this.theme.audioSeek);
            0 >= c ? this.audio_seek.css({
                display: "none"
            }) : (this.audio_seek.css({
                width: c,
                display: "block"
            }), this.audio_seek.slider({
                value: a.currentTime
            }));
            a = this.theme.wolumnWidth;
            void 0 != a && (this.width() < a ? (this.volume_btn.css({
                    display: "none"
                }),
                this.volume_seek.css({
                    display: "none"
                })) : (this.volume_btn.css({
                display: "block"
            }), this.volume_seek.css({
                display: "block"
            })))
        }
    }
})(jQuery);
var videoThemes = [{
        name: "default",
        seekWidth: 150,
        volumeWidth: 105,
        fullscreenWidth: 130
    }, {
        name: "round",
        seekWidth: 225,
        volumeWidth: 145,
        fullscreenWidth: 150
    }, {
        name: "classic",
        seekWidth: 195,
        volumeWidth: 135,
        fullscreenWidth: 170
    }, {
        name: "smallblack",
        seekWidth: 135,
        volumeWidth: 85,
        fullscreenWidth: 110
    }, {
        name: "circle",
        seekWidth: 150,
        volumeWidth: 105,
        fullscreenWidth: 130
    }],
    audioThemes = [{
        name: "default",
        volumeDirection: "horizontal",
        audioSeek: 20,
        wolumnWidth: 170
    }, {
        name: "advanced",
        volumeDirection: "horizontal"
    }, {
        name: "wave",
        volumeDirection: "horizontal",
        audioSeek: 125
    }, {
        name: "glass",
        volumeDirection: "horizontal"
    }, {
        name: "simple",
        volumeDirection: "horizontal"
    }, {
        name: "enjoy",
        volumeDirection: "horizontal"
    }, {
        name: "decent",
        volumeDirection: "vertical"
    }, {
        name: "tree",
        volumeDirection: "horizontal"
    }, {
        name: "christmas",
        volumeDirection: "vertical"
    }, {
        name: "turnonoff",
        volumeDirection: "horizontal"
    }, {
        name: "fade",
        volumeDirection: "horizontal"
    }],
    audioThemeNames = {
        GlassAudioPlayer: "",
        SimpleAudioPlayer: "",
        StandardAudioPlayer: "",
        StandardAudioPlayer02: "",
        StandardAudioPlayer03: "",
        StandardAudioPlayer04: "",
        StandardAudioPlayer05: "",
        StandardAudioPlayer06: ""
    },
    timeFormat = function(a) {
        var b = 10 > Math.floor(a / 60) ? "0" + Math.floor(a / 60) : Math.floor(a / 60);
        return b + ":" + (10 > Math.floor(a - 60 * b) ? "0" + Math.floor(a - 60 * b) : Math.floor(a - 60 * b))
    },
    stopEvent = function(a) {
        a = a || window.event;
        a.preventDefault ? (a.preventDefault(), a.stopPropagation()) : (a.returnValue = !1, a.cancelBubble = !0)
    };
(function(a, b, c) {
    function d(a, b) {
        var c = (a[0] || 0) - (b[0] || 0);
        return 0 < c || !c && 0 < a.length && d(a.slice(1), b.slice(1))
    }

    function e(a) {
        if (typeof a != j) return a;
        var b = [],
            c = "",
            d;
        for (d in a) c = typeof a[d] == j ? e(a[d]) : [d, g ? encodeURI(a[d]) : a[d]].join("="), b.push(c);
        return b.join("&")
    }

    function f(a) {
        var b = [],
            c;
        for (c in a) b.push(['<param name="', c, '" value="', e(a[c]), '" />'].join(""));
        return b.join("")
    }
    var j = "object",
        g = !0;
    try {
        var k = c.description || (new c("ShockwaveFlash.ShockwaveFlash")).GetVariable("$version")
    } catch (m) {
        k =
            "Unavailable"
    }
    var n = k.match(/\d+/g) || [0];
    a[b] = {
        available: 0 < n[0],
        activeX: c && !c.name,
        version: {
            original: k,
            array: n,
            string: n.join("."),
            major: parseInt(n[0], 10) || 0,
            minor: parseInt(n[1], 10) || 0,
            release: parseInt(n[2], 10) || 0
        },
        hasVersion: function(a) {
            a = /string|number/.test(typeof a) ? a.toString().split(".") : /object/.test(typeof a) ? [a.major, a.minor] : a || [0, 0];
            return d(n, a)
        },
        encodeParams: !0,
        expressInstall: "expressInstall.swf",
        expressInstallIsActive: !1,
        create: function(a) {
            if (!a.swf || this.expressInstallIsActive || !this.available &&
                !a.hasVersionFail) return !1;
            if (!this.hasVersion(a.hasVersion || 1)) {
                this.expressInstallIsActive = !0;
                if ("function" == typeof a.hasVersionFail && !a.hasVersionFail.apply(a)) return !1;
                a = {
                    swf: a.expressInstall || this.expressInstall,
                    height: 137,
                    width: 214,
                    flashvars: {
                        MMredirectURL: location.href,
                        MMplayerType: this.activeX ? "ActiveX" : "PlugIn",
                        MMdoctitle: document.title.slice(0, 47) + " - Flash Player Installation"
                    }
                }
            }
            attrs = {
                data: a.swf,
                type: "application/x-shockwave-flash",
                id: a.id || "flash_" + Math.floor(999999999 * Math.random()),
                width: a.width || 320,
                height: a.height || 180,
                style: a.style || ""
            };
            g = "undefined" !== typeof a.useEncode ? a.useEncode : this.encodeParams;
            a.movie = a.swf;
            a.wmode = a.wmode || "opaque";
            delete a.fallback;
            delete a.hasVersion;
            delete a.hasVersionFail;
            delete a.height;
            delete a.id;
            delete a.swf;
            delete a.useEncode;
            delete a.width;
            var b = document.createElement("div"),
                c;
            c = attrs;
            var d = [],
                e;
            for (e in c) c[e] && d.push([e, '="', c[e], '"'].join(""));
            c = d.join(" ");
            b.innerHTML = ["<object ", c, ">", f(a), "</object>"].join("");
            return b.firstChild
        }
    };
    a.fn[b] = function(c) {
        var d = this.find(j).andSelf().filter(j);
        /string|object/.test(typeof c) && this.each(function() {
            var d = a(this),
                e;
            c = typeof c == j ? c : {
                swf: c
            };
            c.fallback = this;
            if (e = a[b].create(c)) d.children().remove(), d.html(e)
        });
        "function" == typeof c && d.each(function() {
            var d = this;
            d.jsInteractionTimeoutMs = d.jsInteractionTimeoutMs || 0;
            660 > d.jsInteractionTimeoutMs && (d.clientWidth || d.clientHeight ? c.call(d) : setTimeout(function() {
                a(d)[b](c)
            }, d.jsInteractionTimeoutMs + 66))
        });
        return d
    }
})(jQuery, "flash", navigator.plugins["Shockwave Flash"] ||
    window.ActiveXObject);
jQuery.easing.jswing = jQuery.easing.swing;
jQuery.extend(jQuery.easing, {
    def: "easeOutQuad",
    swing: function(a, b, c, d, e) {
        return jQuery.easing[jQuery.easing.def](a, b, c, d, e)
    },
    easeInQuad: function(a, b, c, d, e) {
        return d * (b /= e) * b + c
    },
    easeOutQuad: function(a, b, c, d, e) {
        return -d * (b /= e) * (b - 2) + c
    },
    easeInOutQuad: function(a, b, c, d, e) {
        return 1 > (b /= e / 2) ? d / 2 * b * b + c : -d / 2 * (--b * (b - 2) - 1) + c
    },
    easeInCubic: function(a, b, c, d, e) {
        return d * (b /= e) * b * b + c
    },
    easeOutCubic: function(a, b, c, d, e) {
        return d * ((b = b / e - 1) * b * b + 1) + c
    },
    easeInOutCubic: function(a, b, c, d, e) {
        return 1 > (b /= e / 2) ? d / 2 * b * b * b + c :
            d / 2 * ((b -= 2) * b * b + 2) + c
    },
    easeInQuart: function(a, b, c, d, e) {
        return d * (b /= e) * b * b * b + c
    },
    easeOutQuart: function(a, b, c, d, e) {
        return -d * ((b = b / e - 1) * b * b * b - 1) + c
    },
    easeInOutQuart: function(a, b, c, d, e) {
        return 1 > (b /= e / 2) ? d / 2 * b * b * b * b + c : -d / 2 * ((b -= 2) * b * b * b - 2) + c
    },
    easeInQuint: function(a, b, c, d, e) {
        return d * (b /= e) * b * b * b * b + c
    },
    easeOutQuint: function(a, b, c, d, e) {
        return d * ((b = b / e - 1) * b * b * b * b + 1) + c
    },
    easeInOutQuint: function(a, b, c, d, e) {
        return 1 > (b /= e / 2) ? d / 2 * b * b * b * b * b + c : d / 2 * ((b -= 2) * b * b * b * b + 2) + c
    },
    easeInSine: function(a, b, c, d, e) {
        return -d * Math.cos(b /
            e * (Math.PI / 2)) + d + c
    },
    easeOutSine: function(a, b, c, d, e) {
        return d * Math.sin(b / e * (Math.PI / 2)) + c
    },
    easeInOutSine: function(a, b, c, d, e) {
        return -d / 2 * (Math.cos(Math.PI * b / e) - 1) + c
    },
    easeInExpo: function(a, b, c, d, e) {
        return 0 == b ? c : d * Math.pow(2, 10 * (b / e - 1)) + c
    },
    easeOutExpo: function(a, b, c, d, e) {
        return b == e ? c + d : d * (-Math.pow(2, -10 * b / e) + 1) + c
    },
    easeInOutExpo: function(a, b, c, d, e) {
        return 0 == b ? c : b == e ? c + d : 1 > (b /= e / 2) ? d / 2 * Math.pow(2, 10 * (b - 1)) + c : d / 2 * (-Math.pow(2, -10 * --b) + 2) + c
    },
    easeInCirc: function(a, b, c, d, e) {
        return -d * (Math.sqrt(1 - (b /= e) *
            b) - 1) + c
    },
    easeOutCirc: function(a, b, c, d, e) {
        return d * Math.sqrt(1 - (b = b / e - 1) * b) + c
    },
    easeInOutCirc: function(a, b, c, d, e) {
        return 1 > (b /= e / 2) ? -d / 2 * (Math.sqrt(1 - b * b) - 1) + c : d / 2 * (Math.sqrt(1 - (b -= 2) * b) + 1) + c
    },
    easeInElastic: function(a, b, c, d, e) {
        var a = 1.70158,
            f = 0,
            j = d;
        if (0 == b) return c;
        if (1 == (b /= e)) return c + d;
        f || (f = 0.3 * e);
        j < Math.abs(d) ? (j = d, a = f / 4) : a = f / (2 * Math.PI) * Math.asin(d / j);
        return -(j * Math.pow(2, 10 * (b -= 1)) * Math.sin((b * e - a) * 2 * Math.PI / f)) + c
    },
    easeOutElastic: function(a, b, c, d, e) {
        var a = 1.70158,
            f = 0,
            j = d;
        if (0 == b) return c;
        if (1 ==
            (b /= e)) return c + d;
        f || (f = 0.3 * e);
        j < Math.abs(d) ? (j = d, a = f / 4) : a = f / (2 * Math.PI) * Math.asin(d / j);
        return j * Math.pow(2, -10 * b) * Math.sin((b * e - a) * 2 * Math.PI / f) + d + c
    },
    easeInOutElastic: function(a, b, c, d, e) {
        var a = 1.70158,
            f = 0,
            j = d;
        if (0 == b) return c;
        if (2 == (b /= e / 2)) return c + d;
        f || (f = e * 0.3 * 1.5);
        j < Math.abs(d) ? (j = d, a = f / 4) : a = f / (2 * Math.PI) * Math.asin(d / j);
        return 1 > b ? -0.5 * j * Math.pow(2, 10 * (b -= 1)) * Math.sin((b * e - a) * 2 * Math.PI / f) + c : 0.5 * j * Math.pow(2, -10 * (b -= 1)) * Math.sin((b * e - a) * 2 * Math.PI / f) + d + c
    },
    easeInBack: function(a, b, c, d, e, f) {
        void 0 ==
            f && (f = 1.70158);
        return d * (b /= e) * b * ((f + 1) * b - f) + c
    },
    easeOutBack: function(a, b, c, d, e, f) {
        void 0 == f && (f = 1.70158);
        return d * ((b = b / e - 1) * b * ((f + 1) * b + f) + 1) + c
    },
    easeInOutBack: function(a, b, c, d, e, f) {
        void 0 == f && (f = 1.70158);
        return 1 > (b /= e / 2) ? d / 2 * b * b * (((f *= 1.525) + 1) * b - f) + c : d / 2 * ((b -= 2) * b * (((f *= 1.525) + 1) * b + f) + 2) + c
    },
    easeInBounce: function(a, b, c, d, e) {
        return d - jQuery.easing.easeOutBounce(a, e - b, 0, d, e) + c
    },
    easeOutBounce: function(a, b, c, d, e) {
        return (b /= e) < 1 / 2.75 ? d * 7.5625 * b * b + c : b < 2 / 2.75 ? d * (7.5625 * (b -= 1.5 / 2.75) * b + 0.75) + c : b < 2.5 / 2.75 ?
            d * (7.5625 * (b -= 2.25 / 2.75) * b + 0.9375) + c : d * (7.5625 * (b -= 2.625 / 2.75) * b + 0.984375) + c
    },
    easeInOutBounce: function(a, b, c, d, e) {
        return b < e / 2 ? 0.5 * jQuery.easing.easeInBounce(a, 2 * b, 0, d, e) + c : 0.5 * jQuery.easing.easeOutBounce(a, 2 * b - e, 0, d, e) + 0.5 * d + c
    }
});
(function(a) {
    var b = [],
        c = function() {},
        d = 0,
        e = [],
        f = function() {
            d++;
            d >= b.length && (c(e), c = function() {})
        },
        j = function(b) {
            var c = new Image;
            a(c).load(function() {
                e.push({
                    url: b,
                    img: c
                });
                f()
            }).error(function() {
                e.push(c);
                f()
            }).attr("src", b)
        };
    a.fn.loader = function(d, e) {
        d && a.extend(b, d);
        "function" == typeof e && (c = e);
        for (var f = 0; f < b.length; f++) j(b[f])
    }
})(jQuery);
(function(a) {
    var b = function() {
            return Hammer.HAS_TOUCHEVENTS && navigator.userAgent.match(Hammer.MOBILE_REGEX)
        },
        c = function(a) {
            var d = this;
            this.theButton = a;
            this.eventSource = a[0];
            b() ? (a.bind("touchstart", function() {
                c.prototype.mouseDown.apply(d, arguments)
            }), a.bind("touchend", function() {
                c.prototype.mouseUp.apply(d, arguments)
            })) : (a.bind("mousedown", function() {
                c.prototype.mouseDown.apply(d, arguments)
            }), a.bind("mouseleave", function() {
                c.prototype.mouseUp.apply(d, arguments)
            }), a.bind("mouseup", function() {
                c.prototype.mouseUp.apply(d,
                    arguments)
            }))
        };
    c.prototype.mouseDown = function() {
        this.setAlpha(70)
    };
    c.prototype.mouseUp = function() {
        var a = this;
        window.setTimeout(function() {
            c.prototype.setAlpha.apply(a, [100])
        }, 100)
    };
    c.prototype.setAlpha = function(a) {
        0 > a && (a = 0);
        100 <= a && (a = 100);
        this.theButton.css("opacity", a / 100)
    };
    a.fn.asButton = function() {
        new c(this);
        return this
    };
    var d = function(a) {
        this.eventSource = a[0];
        this.origPicture = a[0].src;
        var c = this.origPicture.lastIndexOf("."),
            e = this.origPicture.substr(0, c),
            c = this.origPicture.substring(c);
        this.pictureDown =
            e + "_down" + c;
        var f = this;
        b() ? (a.bind("touchstart", function() {
            d.prototype.mouseDown.apply(f, arguments)
        }), a.bind("touchend", function() {
            d.prototype.mouseUp.apply(f, arguments)
        })) : (a.bind("mouseenter", function() {
            d.prototype.mouseOver.apply(f, arguments)
        }), a.bind("mousedown", function() {
            d.prototype.mouseDown.apply(f, arguments)
        }), a.bind("mouseup", function() {
            d.prototype.mouseUp.apply(f, arguments)
        }), a.bind("mouseleave", function() {
            d.prototype.mouseUp.apply(f, arguments)
        }))
    };
    d.prototype.mouseOver = function() {
        this.eventSource.src =
            this.pictureDown
    };
    d.prototype.mouseDown = function() {
        this.eventSource.src = this.pictureDown
    };
    d.prototype.mouseUp = function() {
        var a = this;
        window.setTimeout(function() {
            a.eventSource.src = a.origPicture
        }, 100)
    };
    a.fn.asImageButton = function() {
        new d(this);
        return this
    };
    var e = function(a) {
        this.eventSource = a[0];
        this.origPicture = a[0].src;
        var c = this.origPicture.lastIndexOf("."),
            d = this.origPicture.substr(0, c),
            c = this.origPicture.substring(c);
        this.pictureDown = d + "_down" + c;
        var f = this;
        b() ? (a.bind("touchstart", function() {
            e.prototype.mouseOver.apply(f,
                arguments)
        }), a.bind("touchend", function() {
            e.prototype.mouseUp.apply(f, arguments)
        })) : (a.bind("mouseenter", function() {
            e.prototype.mouseOver.apply(f, arguments)
        }), a.bind("mousedown", function() {
            e.prototype.mouseDown.apply(f, arguments)
        }), a.bind("mouseup", function() {
            e.prototype.mouseUp.apply(f, arguments)
        }), a.bind("mouseleave", function() {
            e.prototype.mouseUp.apply(f, arguments)
        }))
    };
    e.prototype.mouseOver = function() {
        this.eventSource.src = this.pictureDown
    };
    e.prototype.mouseDown = function() {
        this.eventSource.src =
            this.pictureDown
    };
    e.prototype.mouseUp = function() {
        var a = this;
        window.setTimeout(function() {
            a.eventSource.src = a.origPicture
        }, 100)
    };
    a.fn.asImageChangeButton = function() {
        new e(this);
        return this
    };
    var f = function(a) {
        var b = this;
        this.theButton = a;
        this.eventSource = a[0];
        var c = this.theButton.css("top");
        this.iOrigTop = parseInt(c.replace("px", ""));
        this.iJumpTop = this.iOrigTop - 5;
        a.bind("mouseenter", function() {
            f.prototype.MouseEnter.apply(b, arguments)
        });
        a.bind("mouseleave", function() {
            f.prototype.MouseLeave.apply(b, arguments)
        })
    };
    f.prototype.MouseEnter = function() {
        this.theButton.animate({
            top: this.iJumpTop
        }, 150)
    };
    f.prototype.MouseLeave = function() {
        this.theButton.animate({
            top: this.iOrigTop
        }, 150)
    };
    a.fn.mouseEnterJump = function() {
        new f(this);
        return this
    };
    a.fn.mouseOverCursor = function() {
        new j(this);
        return this
    };
    var j = function(a) {
            a.bind("mouseover", function() {
                a.css({
                    cursor: "pointer"
                })
            })
        },
        g = function(a) {
            var b = this;
            this.theButton = a;
            this.eventSource = a[0];
            var c = this.theButton.css("top");
            this.iOrigTop = parseInt(c.replace("px", ""));
            c = this.theButton.css("left");
            this.iOrigLeft = parseInt(c.replace("px", ""));
            this.iZoomTop = this.iOrigTop - 3;
            this.iZoomLeft = this.iOrigLeft - 1;
            a.bind("mouseenter", function() {
                g.prototype.MouseEnter.apply(b, arguments)
            });
            a.bind("mouseleave", function() {
                g.prototype.MouseLeave.apply(b, arguments)
            })
        };
    g.prototype.MouseDown = function() {
        this.theButton.css({
            left: this.iZoomLeft + "px",
            top: this.iZoomTop + "px",
            "-webkit-transform": "scale(1.1)",
            "-moz-transform": "scale(1.1)",
            transform: "scale(1.1)",
            "-ms-transform": "scale(1.1)",
            "-o-transform": "scale(1.1)"
        })
    };
    g.prototype.MouseEnter = function() {
        this.theButton.css({
            left: this.iZoomLeft + "px",
            top: this.iZoomTop + "px",
            "-webkit-transform": "scale(1.2)",
            "-moz-transform": "scale(1.2)",
            transform: "scale(1.2)",
            "-ms-transform": "scale(1.2)",
            "-o-transform": "scale(1.2)"
        })
    };
    g.prototype.MouseLeave = function() {
        this.theButton.css({
            left: this.iOrigLeft + "px",
            top: this.iOrigTop + "px",
            "-webkit-transform": "scale(1)",
            "-moz-transform": "scale(1)",
            transform: "scale(1)",
            "-ms-transform": "scale(1)",
            "-o-transform": "scale(1)"
        })
    };
    var k = function(a) {
        var b =
            this;
        this.theButton = a;
        this.eventSource = a[0];
        var c = this.theButton.css("top");
        this.iOrigTop = parseInt(c.replace("px", ""));
        c = this.theButton.css("left");
        this.iOrigLeft = parseInt(c.replace("px", ""));
        this.iZoomTop = this.iOrigTop - 1;
        this.iZoomLeft = this.iOrigLeft - 1;
        a.bind("mouseenter", function() {
            k.prototype.MouseEnter.apply(b, arguments)
        });
        a.bind("mouseleave", function() {
            k.prototype.MouseLeave.apply(b, arguments)
        })
    };
    k.prototype.MouseEnter = function() {
        this.theButton.css({
            left: this.iZoomLeft + "px",
            top: this.iZoomTop +
                "px",
            "-webkit-transform": "scale(1.1)",
            "-moz-transform": "scale(1.1)",
            transform: "scale(1.1)",
            "-ms-transform": "scale(1.1)",
            "-o-transform": "scale(1.1)"
        })
    };
    k.prototype.MouseLeave = function() {
        this.theButton.css({
            left: this.iOrigLeft + "px",
            top: this.iOrigTop + "px",
            "-webkit-transform": "scale(1)",
            "-moz-transform": "scale(1)",
            transform: "scale(1)",
            "-ms-transform": "scale(1)",
            "-o-transform": "scale(1)"
        })
    };
    a.fn.mouseEnterZoom = function() {
        new k(this);
        return this
    };
    a.fn.mouseEnterUp = function() {
        new m(this);
        return this
    };
    var m =
        function(a) {
            var b = this;
            this.theButton = a;
            this.eventSource = a[0];
            var c = this.theButton.css("bottom");
            this.iOrigTop = parseInt(c.replace("px", ""));
            c = this.theButton.css("left");
            this.iOrigLeft = parseInt(c.replace("px", ""));
            this.iZoomTop = this.iOrigTop - 1;
            this.iZoomLeft = this.iOrigLeft - 1;
            a.bind("mouseenter", function() {
                m.prototype.MouseEnter.apply(b, arguments)
            });
            a.bind("mouseleave", function() {
                m.prototype.MouseLeave.apply(b, arguments)
            })
        };
    m.prototype.MouseEnter = function() {
        this.theButton.css({
            bottom: this.iZoomTop +
                "px",
            "-webkit-transform": "scale(1.1)",
            "-moz-transform": "scale(1.1)",
            transform: "scale(1.1)",
            "-ms-transform": "scale(1.1)",
            "-o-transform": "scale(1.1)"
        })
    };
    m.prototype.MouseLeave = function() {
        this.theButton.css({
            bottom: this.iOrigTop + "px",
            "-webkit-transform": "scale(1)",
            "-moz-transform": "scale(1)",
            transform: "scale(1)",
            "-ms-transform": "scale(1)",
            "-o-transform": "scale(1)"
        })
    };
    a.fn.mouseZoomUp = function() {
        new g(this);
        return this
    };
    a.fn.mouseEnterLight = function() {
        var a = this;
        this.bind(_event._enter, function() {
            a.css({
                background: "#EEEEEE"
            })
        });
        this.bind(_event._down, function() {
            a.css({
                background: "#EEEEEE"
            })
        });
        b() ? this.bind(_event._end, function() {
            a.css({
                background: "transparent"
            })
        }) : this.bind(_event._end, function() {
            a.css({
                background: "#EEEEEE"
            })
        });
        this.bind(_event._leave, function() {
            a.css({
                background: "transparent"
            })
        });
        return this
    };
    a.fn.mouseEnterShine = function(a, c, d) {
        var e = this,
            f = colorDiv(a, 10);
        this.bind(_event._enter, function() {
            e.css({
                background: f
            });
            e.css({
                border: ""
            });
            e.css({
                "border-left": "1px solid " + d,
                "border-top": "1px solid " + d
            });
            e.css({
                "border-right": "1px solid " +
                    c,
                "border-bottom": "1px solid " + c
            })
        });
        this.bind(_event._down, function() {
            e.css({
                background: f
            });
            e.css({
                border: ""
            });
            e.css({
                "border-left": "1px solid " + c,
                "border-top": "1px solid " + c
            });
            e.css({
                "border-right": "1px solid " + d,
                "border-bottom": "1px solid " + d
            })
        });
        b() ? this.bind(_event._end, function() {
            e.css({
                background: "transparent"
            });
            e.css({
                border: ""
            })
        }) : this.bind(_event._end, function() {
            e.css({
                background: f
            });
            e.css({
                border: ""
            });
            e.css({
                "border-left": "1px solid " + d,
                "border-top": "1px solid " + d
            });
            e.css({
                "border-right": "1px solid " +
                    c,
                "border-bottom": "1px solid " + c
            })
        });
        this.bind(_event._leave, function() {
            e.css({
                background: "transparent"
            });
            e.css({
                border: ""
            })
        });
        return this
    };
    a.fn.mouseEnterGradient = function(a, c, d) {
        var e = this,
            f = colorAdd(a, 75),
            g = "-webkit-gradient(linear,left top,left bottom,color-stop(0," + f + "),color-stop(0.19," + colorAdd(f, 2) + "),color-stop(0.35," + colorAdd(f, 28) + "),color-stop(0.55, " + colorAdd(f, 6) + "),color-stop(0.75," + colorAdd(f, 4) + "),color-stop(0.85," + colorAdd(f, 2) + "),color-stop(1, " + f + "))";
        this.bind(_event._enter, function() {
            e.css("background",
                g);
            e.css({
                border: ""
            });
            e.css({
                "border-left": "1px solid " + d,
                "border-top": "1px solid " + d
            });
            e.css({
                "border-right": "1px solid " + c,
                "border-bottom": "1px solid " + c
            })
        });
        this.bind(_event._down, function() {
            e.setGradient(f, !1);
            e.css({
                border: ""
            });
            e.css({
                "border-left": "1px solid " + c,
                "border-top": "1px solid " + c
            });
            e.css({
                "border-right": "1px solid " + d,
                "border-bottom": "1px solid " + d
            })
        });
        b() ? this.bind(_event._end, function() {
            e.css({
                background: "transparent"
            });
            e.css({
                border: ""
            })
        }) : this.bind(_event._end, function() {
            e.css("background",
                g);
            e.css({
                border: ""
            });
            e.css({
                "border-left": "1px solid " + d,
                "border-top": "1px solid " + d
            });
            e.css({
                "border-right": "1px solid " + c,
                "border-bottom": "1px solid " + c
            })
        });
        this.bind(_event._leave, function() {
            e.css({
                background: "transparent"
            });
            e.css({
                border: ""
            })
        });
        return this
    }
})(jQuery);
(function(a, b) {
    function c() {
        if (!d.READY) {
            d.event.determineEventTypes();
            for (var a in d.gestures) d.gestures.hasOwnProperty(a) && d.detection.register(d.gestures[a]);
            d.event.onTouch(d.DOCUMENT, d.EVENT_MOVE, d.detection.detect);
            d.event.onTouch(d.DOCUMENT, d.EVENT_END, d.detection.detect);
            d.READY = !0
        }
    }
    var d = function(a, b) {
        return new d.Instance(a, b || {})
    };
    d.defaults = {
        stop_browser_behavior: {
            userSelect: "none",
            touchAction: "none",
            touchCallout: "none",
            contentZooming: "none",
            userDrag: "none",
            tapHighlightColor: "rgba(0,0,0,0)"
        }
    };
    d.HAS_POINTEREVENTS = navigator.pointerEnabled || navigator.msPointerEnabled;
    d.HAS_TOUCHEVENTS = "ontouchstart" in a;
    d.MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;
    d.NO_MOUSEEVENTS = d.HAS_TOUCHEVENTS && navigator.userAgent.match(d.MOBILE_REGEX);
    d.EVENT_TYPES = {};
    d.DIRECTION_DOWN = "down";
    d.DIRECTION_LEFT = "left";
    d.DIRECTION_UP = "up";
    d.DIRECTION_RIGHT = "right";
    d.POINTER_MOUSE = "mouse";
    d.POINTER_TOUCH = "touch";
    d.POINTER_PEN = "pen";
    d.EVENT_START = "start";
    d.EVENT_MOVE = "move";
    d.EVENT_END = "end";
    d.DOCUMENT = document;
    d.plugins = {};
    d.READY = !1;
    d.Instance = function(a, b) {
        var e = this;
        return c(), this.element = a, this.enabled = !0, this.options = d.utils.extend(d.utils.extend({}, d.defaults), b || {}), this.options.stop_browser_behavior && d.utils.stopDefaultBrowserBehavior(this.element, this.options.stop_browser_behavior), d.event.onTouch(a, d.EVENT_START, function(a) {
            e.enabled && d.detection.startDetect(e, a)
        }), this
    };
    d.Instance.prototype = {
        on: function(a, b) {
            for (var c = a.split(" "), d = 0; c.length > d; d++) this.element.addEventListener(c[d], b, !1);
            return this
        },
        off: function(a, b) {
            for (var c = a.split(" "), d = 0; c.length > d; d++) this.element.removeEventListener(c[d], b, !1);
            return this
        },
        trigger: function(a, b) {
            var c = d.DOCUMENT.createEvent("Event");
            c.initEvent(a, !0, !0);
            c.gesture = b;
            var e = this.element;
            return d.utils.hasParent(b.target, e) && (e = b.target), e.dispatchEvent(c), this
        },
        enable: function(a) {
            return this.enabled = a, this
        }
    };
    var e = null,
        f = !1,
        j = !1;
    d.event = {
        bindDom: function(a, b, c) {
            for (var b = b.split(" "), d = 0; b.length > d; d++) a.addEventListener(b[d], c, !1)
        },
        onTouch: function(a,
            b, c) {
            var n = this;
            this.bindDom(a, d.EVENT_TYPES[b], function(l) {
                var p = l.type.toLowerCase();
                if (!p.match(/mouse/) || !j) {
                    (p.match(/touch/) || p.match(/pointerdown/) || p.match(/mouse/) && 1 === l.which) && (f = !0);
                    p.match(/touch|pointer/) && (j = !0);
                    var q = 0;
                    f && (d.HAS_POINTEREVENTS && b != d.EVENT_END ? q = d.PointerEvent.updatePointer(b, l) : p.match(/touch/) ? q = l.touches.length : j || (q = p.match(/up/) ? 0 : 1), 0 < q && b == d.EVENT_END ? b = d.EVENT_MOVE : q || (b = d.EVENT_END), q || null === e ? e = l : l = e, c.call(d.detection, n.collectEventData(a, b, l)), d.HAS_POINTEREVENTS &&
                        b == d.EVENT_END && (q = d.PointerEvent.updatePointer(b, l)));
                    q || (e = null, f = !1, j = !1, d.PointerEvent.reset())
                }
            })
        },
        determineEventTypes: function() {
            var a;
            a = d.HAS_POINTEREVENTS ? d.PointerEvent.getEvents() : d.NO_MOUSEEVENTS ? ["touchstart", "touchmove", "touchend touchcancel"] : ["touchstart mousedown", "touchmove mousemove", "touchend touchcancel mouseup"];
            d.EVENT_TYPES[d.EVENT_START] = a[0];
            d.EVENT_TYPES[d.EVENT_MOVE] = a[1];
            d.EVENT_TYPES[d.EVENT_END] = a[2]
        },
        getTouchList: function(a) {
            return d.HAS_POINTEREVENTS ? d.PointerEvent.getTouchList() :
                a.touches ? a.touches : [{
                    identifier: 1,
                    pageX: a.pageX,
                    pageY: a.pageY,
                    target: a.target
                }]
        },
        collectEventData: function(a, b, c) {
            var a = this.getTouchList(c, b),
                e = d.POINTER_TOUCH;
            return (c.type.match(/mouse/) || d.PointerEvent.matchType(d.POINTER_MOUSE, c)) && (e = d.POINTER_MOUSE), {
                center: d.utils.getCenter(a),
                timeStamp: (new Date).getTime(),
                target: c.target,
                touches: a,
                eventType: b,
                pointerType: e,
                srcEvent: c,
                preventDefault: function() {
                    this.srcEvent.preventManipulation && this.srcEvent.preventManipulation();
                    this.srcEvent.preventDefault &&
                        this.srcEvent.preventDefault()
                },
                stopPropagation: function() {
                    this.srcEvent.stopPropagation()
                },
                stopDetect: function() {
                    return d.detection.stopDetect()
                }
            }
        }
    };
    d.PointerEvent = {
        pointers: {},
        getTouchList: function() {
            var a = this,
                b = [];
            return Object.keys(a.pointers).sort().forEach(function(c) {
                b.push(a.pointers[c])
            }), b
        },
        updatePointer: function(a, b) {
            return a == d.EVENT_END ? this.pointers = {} : (b.identifier = b.pointerId, this.pointers[b.pointerId] = b), Object.keys(this.pointers).length
        },
        matchType: function(a, b) {
            if (!b.pointerType) return !1;
            var c = {};
            return c[d.POINTER_MOUSE] = b.pointerType == b.MSPOINTER_TYPE_MOUSE || b.pointerType == d.POINTER_MOUSE, c[d.POINTER_TOUCH] = b.pointerType == b.MSPOINTER_TYPE_TOUCH || b.pointerType == d.POINTER_TOUCH, c[d.POINTER_PEN] = b.pointerType == b.MSPOINTER_TYPE_PEN || b.pointerType == d.POINTER_PEN, c[a]
        },
        getEvents: function() {
            return ["pointerdown MSPointerDown", "pointermove MSPointerMove", "pointerup pointercancel MSPointerUp MSPointerCancel"]
        },
        reset: function() {
            this.pointers = {}
        }
    };
    d.utils = {
        extend: function(a, c, d) {
            for (var e in c) a[e] !==
                b && d || (a[e] = c[e]);
            return a
        },
        hasParent: function(a, b) {
            for (; a;) {
                if (a == b) return !0;
                a = a.parentNode
            }
            return !1
        },
        getCenter: function(a) {
            for (var b = [], c = [], d = 0, e = a.length; e > d; d++) b.push(a[d].pageX), c.push(a[d].pageY);
            return {
                pageX: (Math.min.apply(Math, b) + Math.max.apply(Math, b)) / 2,
                pageY: (Math.min.apply(Math, c) + Math.max.apply(Math, c)) / 2
            }
        },
        getVelocity: function(a, b, c) {
            return {
                x: Math.abs(b / a) || 0,
                y: Math.abs(c / a) || 0
            }
        },
        getAngle: function(a, b) {
            return 180 * Math.atan2(b.pageY - a.pageY, b.pageX - a.pageX) / Math.PI
        },
        getDirection: function(a,
            b) {
            var c = Math.abs(a.pageX - b.pageX),
                e = Math.abs(a.pageY - b.pageY);
            return c >= e ? 0 < a.pageX - b.pageX ? d.DIRECTION_LEFT : d.DIRECTION_RIGHT : 0 < a.pageY - b.pageY ? d.DIRECTION_UP : d.DIRECTION_DOWN
        },
        getDistance: function(a, b) {
            var c = b.pageX - a.pageX,
                d = b.pageY - a.pageY;
            return Math.sqrt(c * c + d * d)
        },
        getScale: function(a, b) {
            return 2 <= a.length && 2 <= b.length ? this.getDistance(b[0], b[1]) / this.getDistance(a[0], a[1]) : 1
        },
        getRotation: function(a, b) {
            return 2 <= a.length && 2 <= b.length ? this.getAngle(b[1], b[0]) - this.getAngle(a[1], a[0]) : 0
        },
        isVertical: function(a) {
            return a ==
                d.DIRECTION_UP || a == d.DIRECTION_DOWN
        },
        stopDefaultBrowserBehavior: function(a, b) {
            var c, d = "webkit,khtml,moz,ms,o,".split(",");
            if (b && a.style) {
                for (var e = 0; d.length > e; e++)
                    for (var f in b) b.hasOwnProperty(f) && (c = f, d[e] && (c = d[e] + c.substring(0, 1).toUpperCase() + c.substring(1)), a.style[c] = b[f]);
                "none" == b.userSelect && (a.onselectstart = function() {
                    return !1
                })
            }
        }
    };
    d.detection = {
        gestures: [],
        current: null,
        previous: null,
        stopped: !1,
        startDetect: function(a, b) {
            this.current || (this.stopped = !1, this.current = {
                inst: a,
                startEvent: d.utils.extend({},
                    b),
                lastEvent: !1,
                name: ""
            }, this.detect(b))
        },
        detect: function(a) {
            if (this.current && !this.stopped) {
                for (var a = this.extendEventData(a), b = this.current.inst.options, c = 0, e = this.gestures.length; e > c; c++) {
                    var f = this.gestures[c];
                    if (!this.stopped && !1 !== b[f.name] && !1 === f.handler.call(f, a, this.current.inst)) {
                        this.stopDetect();
                        break
                    }
                }
                return this.current && (this.current.lastEvent = a), a.eventType == d.EVENT_END && !a.touches.length - 1 && this.stopDetect(), a
            }
        },
        stopDetect: function() {
            this.previous = d.utils.extend({}, this.current);
            this.current = null;
            this.stopped = !0
        },
        extendEventData: function(a) {
            var b = this.current.startEvent;
            if (b && (a.touches.length != b.touches.length || a.touches === b.touches)) {
                b.touches = [];
                for (var c = 0, e = a.touches.length; e > c; c++) b.touches.push(d.utils.extend({}, a.touches[c]))
            }
            var c = a.timeStamp - b.timeStamp,
                e = a.center.pageX - b.center.pageX,
                f = a.center.pageY - b.center.pageY,
                j = d.utils.getVelocity(c, e, f);
            return d.utils.extend(a, {
                deltaTime: c,
                deltaX: e,
                deltaY: f,
                velocityX: j.x,
                velocityY: j.y,
                distance: d.utils.getDistance(b.center,
                    a.center),
                angle: d.utils.getAngle(b.center, a.center),
                direction: d.utils.getDirection(b.center, a.center),
                scale: d.utils.getScale(b.touches, a.touches),
                rotation: d.utils.getRotation(b.touches, a.touches),
                startEvent: b
            }), a
        },
        register: function(a) {
            var c = a.defaults || {};
            return c[a.name] === b && (c[a.name] = !0), d.utils.extend(d.defaults, c, !0), a.index = a.index || 1E3, this.gestures.push(a), this.gestures.sort(function(a, b) {
                return a.index < b.index ? -1 : a.index > b.index ? 1 : 0
            }), this.gestures
        }
    };
    d.gestures = d.gestures || {};
    d.gestures.Hold = {
        name: "hold",
        index: 10,
        defaults: {
            hold_timeout: 500,
            hold_threshold: 1
        },
        timer: null,
        handler: function(a, b) {
            switch (a.eventType) {
                case d.EVENT_START:
                    clearTimeout(this.timer);
                    d.detection.current.name = this.name;
                    this.timer = setTimeout(function() {
                        "hold" == d.detection.current.name && b.trigger("hold", a)
                    }, b.options.hold_timeout);
                    break;
                case d.EVENT_MOVE:
                    a.distance > b.options.hold_threshold && clearTimeout(this.timer);
                    break;
                case d.EVENT_END:
                    clearTimeout(this.timer)
            }
        }
    };
    d.gestures.Tap = {
        name: "tap",
        index: 100,
        defaults: {
            tap_max_touchtime: 250,
            tap_max_distance: 10,
            tap_always: !0,
            doubletap_distance: 20,
            doubletap_interval: 300
        },
        handler: function(a, b) {
            if (a.eventType == d.EVENT_END) {
                var c = d.detection.previous,
                    e = !1;
                a.deltaTime > b.options.tap_max_touchtime || a.distance > b.options.tap_max_distance || (c && "tap" == c.name && a.timeStamp - c.lastEvent.timeStamp < b.options.doubletap_interval && a.distance < b.options.doubletap_distance && (b.trigger("doubletap", a), e = !0), (!e || b.options.tap_always) && (d.detection.current.name = "tap", b.trigger(d.detection.current.name, a)))
            }
        }
    };
    d.gestures.Swipe = {
        name: "swipe",
        index: 40,
        defaults: {
            swipe_max_touches: 1,
            swipe_velocity: 0.7
        },
        handler: function(a, b) {
            a.eventType == d.EVENT_END && !(0 < b.options.swipe_max_touches && a.touches.length > b.options.swipe_max_touches) && (a.velocityX > b.options.swipe_velocity || a.velocityY > b.options.swipe_velocity) && (b.trigger(this.name, a), b.trigger(this.name + a.direction, a))
        }
    };
    d.gestures.Drag = {
        name: "drag",
        index: 50,
        defaults: {
            drag_min_distance: 10,
            drag_max_touches: 1,
            drag_block_horizontal: !1,
            drag_block_vertical: !1,
            drag_lock_to_axis: !1,
            drag_lock_min_distance: 25
        },
        triggered: !1,
        handler: function(a, c) {
            if (d.detection.current.name != this.name && this.triggered) return c.trigger(this.name + "end", a), this.triggered = !1, b;
            if (!(0 < c.options.drag_max_touches && a.touches.length > c.options.drag_max_touches)) switch (a.eventType) {
                case d.EVENT_START:
                    this.triggered = !1;
                    break;
                case d.EVENT_MOVE:
                    if (a.distance < c.options.drag_min_distance && d.detection.current.name != this.name) break;
                    d.detection.current.name = this.name;
                    (d.detection.current.lastEvent.drag_locked_to_axis ||
                        c.options.drag_lock_to_axis && c.options.drag_lock_min_distance <= a.distance) && (a.drag_locked_to_axis = !0);
                    var e = d.detection.current.lastEvent.direction;
                    a.drag_locked_to_axis && e !== a.direction && (a.direction = d.utils.isVertical(e) ? 0 > a.deltaY ? d.DIRECTION_UP : d.DIRECTION_DOWN : 0 > a.deltaX ? d.DIRECTION_LEFT : d.DIRECTION_RIGHT);
                    this.triggered || (c.trigger(this.name + "start", a), this.triggered = !0);
                    c.trigger(this.name, a);
                    c.trigger(this.name + a.direction, a);
                    (c.options.drag_block_vertical && d.utils.isVertical(a.direction) ||
                        c.options.drag_block_horizontal && !d.utils.isVertical(a.direction)) && a.preventDefault();
                    break;
                case d.EVENT_END:
                    this.triggered && c.trigger(this.name + "end", a), this.triggered = !1
            }
        }
    };
    d.gestures.Transform = {
        name: "transform",
        index: 45,
        defaults: {
            transform_min_scale: 0.01,
            transform_min_rotation: 1,
            transform_always_block: !1
        },
        triggered: !1,
        handler: function(a, c) {
            if (d.detection.current.name != this.name && this.triggered) return c.trigger(this.name + "end", a), this.triggered = !1, b;
            if (!(2 > a.touches.length)) switch (c.options.transform_always_block &&
                a.preventDefault(), a.eventType) {
                case d.EVENT_START:
                    this.triggered = !1;
                    break;
                case d.EVENT_MOVE:
                    var e = Math.abs(1 - a.scale),
                        f = Math.abs(a.rotation);
                    if (c.options.transform_min_scale > e && c.options.transform_min_rotation > f) break;
                    d.detection.current.name = this.name;
                    this.triggered || (c.trigger(this.name + "start", a), this.triggered = !0);
                    c.trigger(this.name, a);
                    f > c.options.transform_min_rotation && c.trigger("rotate", a);
                    e > c.options.transform_min_scale && (c.trigger("pinch", a), c.trigger("pinch" + (1 > a.scale ? "in" : "out"), a));
                    break;
                case d.EVENT_END:
                    this.triggered && c.trigger(this.name + "end", a), this.triggered = !1
            }
        }
    };
    d.gestures.Touch = {
        name: "touch",
        index: -1 / 0,
        defaults: {
            prevent_default: !1,
            prevent_mouseevents: !1
        },
        handler: function(a, c) {
            return c.options.prevent_mouseevents && a.pointerType == d.POINTER_MOUSE ? (a.stopDetect(), b) : (c.options.prevent_default && a.preventDefault(), a.eventType == d.EVENT_START && c.trigger(this.name, a), b)
        }
    };
    d.gestures.Release = {
        name: "release",
        index: 1 / 0,
        handler: function(a, b) {
            a.eventType == d.EVENT_END && b.trigger(this.name,
                a)
        }
    };
    "object" == typeof module && "object" == typeof module.exports ? module.exports = d : (a.Hammer = d, "function" == typeof a.define && a.define.amd && a.define("hammer", [], function() {
        return d
    }))
})(this);
(function(a, b) {
    a !== b && (Hammer.event.bindDom = function(c, d, e) {
            a(c).on(d, function(a) {
                var c = a.originalEvent || a;
                c.pageX === b && (c.pageX = a.pageX, c.pageY = a.pageY);
                c.target || (c.target = a.target);
                c.which === b && (c.which = c.button);
                c.preventDefault || (c.preventDefault = a.preventDefault);
                c.stopPropagation || (c.stopPropagation = a.stopPropagation);
                e.call(this, c)
            })
        }, Hammer.Instance.prototype.on = function(b, d) {
            return a(this.element).on(b, d)
        }, Hammer.Instance.prototype.off = function(b, d) {
            return a(this.element).off(b, d)
        }, Hammer.Instance.prototype.trigger =
        function(b, d) {
            var e = a(this.element);
            return e.has(d.target).length && (e = a(d.target)), e.trigger({
                type: b,
                gesture: d
            })
        }, a.fn.hammer = function(b) {
            return this.each(function() {
                var d = a(this),
                    e = d.data("hammer");
                e ? e && b && Hammer.utils.extend(e.options, b) : d.data("hammer", new Hammer(this, b || {}))
            })
        })
})(window.jQuery || window.Zepto);
(function(a) {
    var b = function(b, d, e, f, j) {
        if (!(void 0 == b || null == b)) {
            j = a.extend({
                background: "green",
                cornersTop: !0,
                scale: "noresize"
            }, j);
            b.prev();
            var g = 0,
                k = !1,
                m = j.background,
                n = j.cornersTop,
                l = j.gradientColors || ["#ddd", "#eee", "#fff"],
                p = j.scale,
                q = [],
                u = b.clone(),
                z = u[0].getContext("2d"),
                s = b[0].getContext("2d"),
                A = 0,
                f = f.each(function(b) {
                    if (!q[b]) {
                        var c = this;
                        c.onload = function() {
                            var g = 1;
                            if ("noresize" != p) {
                                var j = 0 == this.width ? this.naturalWidth : this.width,
                                    l = 0 == this.height ? this.naturalHeight : this.height,
                                    m = d / j,
                                    n = e / l;
                                "fit" == p && (g = 1 > m || 1 > n ? Math.min(m, n) : 1);
                                "fill" == p && (g = Math.min(m, n))
                            }
                            a(c).data("flip.scale", g);
                            q[b] = s.createPattern(c, "no-repeat");
                            q[b].width = j;
                            q[b].height = l;
                            A++;
                            A == f.length && !k && (k = !0, H())
                        };
                        c.complete && window.setTimeout(function() {
                            c.onload()
                        }, 10)
                    }
                }).get(),
                v = d,
                r = e,
                t = a.browser.msie ? b.offset() : null,
                x, J, B, C;
            a.browser.msie && function() {
                var f = a("<div>").width(d).height(e).css({
                    position: "absolute",
                    cursor: "default",
                    zIndex: 1
                }).appendTo(tmpContainer);
                7 == parseInt(a.browser.version) && f.css({
                    opacity: 1.0E-6,
                    background: "#FFF"
                });
                var g = function() {
                    t = b.offset();
                    return f.css({
                        left: t.left + "px",
                        top: t.top + "px"
                    })
                };
                a(window).resize(g);
                return g()
            }();
            setInterval(function() {
                window.clearInterval(x);
                J = (new Date).getTime();
                B = v;
                C = r / 50;
                x = window.setInterval(K, 0);
                g += 1;
                0 > g && (g = f.length - 1);
                g == f.length && (g = 0)
            }, 3E3);
            var K = function() {
                    var a = (new Date).getTime() - J;
                    700 <= a ? (window.clearInterval(x), f.push(f.shift()), q.push(q.shift()), v = d, r = e) : (v = B - 2 * d * a / 700, r = C + 2 * e * a / 700 / 3);
                    H()
                },
                w = function(b, c) {
                    var f = b * d + c,
                        g = -c / b;
                    a.browser.msie && (f = Math.round(f), g = Math.round(g));
                    s.beginPath();
                    s.moveTo(d, Math.min(f, e));
                    s.lineTo(d, 0);
                    s.lineTo(Math.max(g, 0), 0);
                    0 > g ? (s.lineTo(0, Math.min(c, e)), c < e && s.lineTo((e - c) / b, e), s.lineTo(d, e)) : f < e ? s.lineTo(d, f) : (s.lineTo((e - c) / b, e), s.lineTo(d, e))
                },
                H = function() {
                    if (k) {
                        a.browser.msie && s.clearRect(0, 0, d, e);
                        s.fillStyle = m;
                        s.fillRect(0, 0, d, e);
                        var b = f[0],
                            c = a(b).data("flip.scale");
                        if (a.browser.msie) try {
                            s.drawImage(b, 0, 0, b.width, b.height, 0, 0, d, e)
                        } catch (g) {
                            s.fillStyle = q[0], s.fillStyle.width2 = s.fillStyle.width * c, s.fillStyle.height2 = s.fillStyle.height *
                                c, s.fillRect(0, 0, d, e)
                        } else s.drawImage(b, (d - b.width * c) / 2, (e - b.height * c) / 2, b.width * c, b.height * c);
                        if (r && v != d && (b = (r - 2 * (v + d)) / 2, m2 = r / (d - v), q2 = v * m2, 2 != m2)) {
                            var j = 1,
                                p = 0;
                            s.save();
                            n || (p = e, j = -1);
                            s.translate(0, p);
                            s.scale(1, j);
                            var t = (q2 - b) / (2 - m2),
                                x = 2 * t + b,
                                A = (2 * x + t + 4 * v - 2 * r) / 5,
                                B = -A / 2 + x + t / 2,
                                c = Math.sqrt(Math.pow(t - A, 2) + Math.pow(x - B, 2)),
                                C = Math.min(0.5 * c, 30),
                                F;
                            a.browser.mozilla && 1.9 > parseFloat(a.browser.version) ? (F = z, F.clearRect(0, 0, d, e), F.save(), F.translate(1, 0)) : F = s;
                            t = F.createLinearGradient(t, x, A, B);
                            t.addColorStop(0,
                                l[0]);
                            t.addColorStop(C / c, l[1]);
                            t.addColorStop(1, l[2]);
                            F.fillStyle = t;
                            F.beginPath();
                            F.moveTo(-b / 2, 0);
                            F.quadraticCurveTo((-b / 2 + v) / 2 + 0.02 * v, r / 2, v, r);
                            F.quadraticCurveTo((d + v) / 2, (2 * d + b + r) / 2 - 0.02 * (e - r), d, 2 * d + b);
                            a.browser.mozilla && 1.9 > parseFloat(a.browser.version) ? (F.save(), F.clip(), F.fillRect(0, 0, d, e), F.restore(), s.drawImage(u[0], 0, 0), F.restore()) : F.fill();
                            s.fillStyle = m;
                            w(2, b);
                            s.fill();
                            w(2, b);
                            !a.browser.safari && !a.browser.opera && s.restore();
                            b = f[1];
                            c = a(b).data("flip.scale");
                            if (a.browser.msie) s.fillStyle =
                                q[1], s.fillStyle.width2 = s.fillStyle.width * c, s.fillStyle.height2 = s.fillStyle.height * c, s.fill();
                            else {
                                s.save();
                                s.clip();
                                if (a.browser.safari || a.browser.opera) s.scale(1, 1 / j), s.translate(-0.0, -p);
                                s.drawImage(b, (d - b.width * c) / 2, (e - b.height * c) / 2, b.width * c, b.height * c);
                                s.restore();
                                (a.browser.safari || a.browser.opera) && s.restore()
                            }
                        }
                    }
                }
        }
    };
    a.fn.jFlip = function(c, d, e, f, j) {
        return this.each(function() {
            a(this).wrap("<div class='bannerdiv' style='position: absolute;width:" + c + "px;height:" + d + "px;top:" + j + "px;left:" + f + "px'>");
            var g = a(this).find("img"),
                k = a(document.createElement("canvas")).attr({
                    width: c,
                    height: d
                }).css({
                    margin: 0,
                    width: c + "px",
                    height: d + "px"
                });
            a(this).css({
                position: "absolute",
                left: "-9000px",
                top: "-9000px",
                display: "none"
            }).after(k);
            new b(a(this).next(), c || 300, d || 300, g, e)
        })
    }
})(jQuery);
var VERSION_NAME = "2.0.0",
    BUILD_DATE = "20130822",
    isTouchDevice = function() {
        return Hammer.HAS_TOUCHEVENTS && navigator.userAgent.match(Hammer.MOBILE_REGEX)
    },
    BookType = function() {};
BookType.normal_book = 0;
BookType.single_book = 1;
BookType.zoom_book = 2;
var normalBookStatu = function() {};
normalBookStatu.book_statu_ready = 0;
normalBookStatu.book_statu_auto_flip = 1;
normalBookStatu.book_statu_mouse_flip = 2;
normalBookStatu.book_statu_mag_flip = 3;
var singleBookStatu = function() {};
singleBookStatu.book_statu_ready = 0;
singleBookStatu.book_statu_auto_flip = 1;
singleBookStatu.book_statu_mouse_flip = 2;
singleBookStatu.book_statu_mag_flip = 3;
var bookCorner = function() {};
bookCorner.top_left = 0;
bookCorner.top_right = 1;
bookCorner.bottom_left = 2;
bookCorner.bottom_right = 3;
var BrowserType = function() {};
BrowserType.MS = 3;
BrowserType.MOZ = 2;
BrowserType.WEBKIT = 1;
BrowserType.OPERA = 4;
var PageEditor = function() {};
PageEditor.AnnoType = function() {};
PageEditor.AnnoType.ANNO_LINK = "com.mobiano.flipbook.pageeditor.TAnnoLink";
PageEditor.AnnoType.ANNO_YOUTUBE = "com.mobiano.flipbook.pageeditor.TAnnoYouTube";
PageEditor.AnnoType.ANNO_YOUTUBE1 = "com.mobiano.flipbook.pageeditor::TAnnoYoutubePlayer";
PageEditor.AnnoType.ANNO_YOUTUBE2 = "com.mobiano.flipbook.pageeditor.player::TAnnoYoutubePlayer02";
PageEditor.AnnoType.ANNO_YOUTUBE3 = "com.mobiano.flipbook.pageeditor.player::TAnnoYoutubePlayer03";
PageEditor.AnnoType.ANNO_YOUTUBE4 = "com.mobiano.flipbook.pageeditor.player::TAnnoYoutubePlayer04";
PageEditor.AnnoType.ANNO_VIDEO1 = "com.mobiano.flipbook.pageeditor::TAnnoVideoPlayer";
PageEditor.AnnoType.ANNO_VIDEO2 = "com.mobiano.flipbook.pageeditor.player::TAnnoSimpleVideoPlayer";
PageEditor.AnnoType.ANNO_AUDIO1 = "com.mobiano.flipbook.pageeditor::TAnnoAdvancedSound";
PageEditor.AnnoType.ANNO_AUDIO2 = "com.mobiano.flipbook.pageeditor::TAnnoWavemusicPlayer";
PageEditor.AnnoType.ANNO_AUDIO3 = "com.mobiano.flipbook.pageeditor::TAnnoPlugIn";
PageEditor.AnnoType.ANNO_AUDIO4 = "";
PageEditor.AnnoType.ANNO_AUDIO5 = "";
PageEditor.AnnoType.ANNO_AUDIO6 = "";
PageEditor.AnnoType.ANNO_AUDIO7 = "";
PageEditor.AnnoType.ANNO_AUDIO8 = "";
PageEditor.AnnoType.ANNO_AUDIO9 = "";
PageEditor.AnnoType.ANNO_VIMEO = "com.mobiano.flipbook.pageeditor.vimeoPlayer::TAnnoVimeoPlayer";
PageEditor.AnnoType.ANNO_VIMEO2 = "com.mobiano.flipbook.pageeditor.vimeoPlayer::TAnnoVimeoPopUpPlayer";
PageEditor.AnnoType.ANNO_VIDEO = "com.mobiano.flipbook.pageeditor.TAnnoMovie";
PageEditor.AnnoType.ANNO_AUDIO = "com.mobiano.flipbook.pageeditor.TAnnoSound";
PageEditor.AnnoType.ANNO_IMAGE = "com.mobiano.flipbook.pageeditor.TAnnoImage";
PageEditor.AnnoType.ANNO_BUTTON = "com.mobiano.flipbook.pageeditor.TAnnoButton";
PageEditor.AnnoType.ANNO_LINE = "com.mobiano.flipbook.pageeditor.shapes::TAnnoLine";
PageEditor.AnnoType.ANNO_ARROW = "com.mobiano.flipbook.pageeditor.shapes::TAnnoArrow";
PageEditor.AnnoType.ANNO_ROUND = "com.mobiano.flipbook.pageeditor.shapes::TAnnoEllipse";
PageEditor.AnnoType.ANNO_RECTANGLE = "com.mobiano.flipbook.pageeditor.shapes::TAnnoRectangle";
PageEditor.AnnoType.ANNO_TEXT = "com.mobiano.flipbook.pageeditor::TAnnoText";
PageEditor.AnnoType.ANNO_AREA = "com.mobiano.flipbook.pageeditor::TAnnoHighLightArea";
PageEditor.AnnoType.ANNO_FLASHSHOW = "com.mobiano.flipbook.pageeditor.TAnnoSWF1";
PageEditor.AnnoType.ANNO_ATEXT = "com.mobiano.flipbook.pageeditor::TAnnoDynamicText";
PageEditor.AnnoType.ANNO_PRINT = "com.mobiano.flipbook.pageeditor::TAnnoPrint";
PageEditor.AnnoType.ANNO_STARTEXT = "com.mobiano.flipbook.pageeditor::TAnnoStarwarsText";
PageEditor.AnnoType.ANNO_TEXTANIM = "com.mobiano.flipbook.pageeditor.textAnim::TAnnoTextAnim";
PageEditor.AnnoType.ANNO_ATIMAGE = "com.mobiano.flipbook.pageeditor.TAnnoClipart";
PageEditor.AnnoType.ANNO_EFFECTTEXT = "com.mobiano.flipbook.pageeditor.TAnnoEffectText";
PageEditor.AnnoType.ANNO_CALLOUT = "com.mobiano.flipbook.pageeditor.shapes::TAnnoCallout";
PageEditor.AnnoType.ANNO_ADVANCEDSOUND = "com.mobiano.flipbook.pageeditor::TAnnoAdvancedSound1";
PageEditor.AnnoType.ANNO_ALPHATRANSITIONBANNER = "com.mobiano.flipbook.pageeditor.TAnnoAlphaTransitionBanner";
PageEditor.AnnoType.ANNO_EMBEDDEDSLIDESHOW = "com.mobiano.flipbook.pageeditor.TAnnoEmbeddedSlideshow";
PageEditor.AnnoType.ANNO_BANNER = "com.mobiano.flipbook.pageeditor::TAnnoBanner";
PageEditor.AnnoType.ANNO_CAROUSEL = "com.mobiano.flipbook.pageeditor.TAnnoCarouselViewer";
PageEditor.AnnoType.ANNO_DYNSHOW = "com.mobiano.flipbook.pageeditor::TAnnoDynamicShowPhoto";
PageEditor.AnnoType.ANNO_FLIPJUMP = "com.mobiano.flipbook.pageeditor.TAnnoDynamicTurnPhoto";
PageEditor.AnnoType.ANNO_PLUGIN = "com.mobiano.flipbook.pageeditor::TAnnoPlugIn";
PLUGIN_ROTATE3D = "AbPIRotationPhotoFor3D";
PLUGIN_VIDEO1 = "VideoPlayerExemple01";
PLUGIN_VIDEO2 = "VideoPlayerExemple02";
PLUGIN_CLASSAUDIO = "";
PageEditor.AnnoType.ANNO_SWF = "com.mobiano.flipbook.pageeditor.TAnnoSWF";
PageEditor.PlayEvt = function() {};
PageEditor.PlayEvt.EVT_PLAY = "EVT_PageViewed";
PageEditor.PlayEvt.EVT_STOP = "EVT_PageOffView";
PageEditor.TriggerEventType = function() {};
PageEditor.TriggerEventType.MouseDown = "mouseDown";
PageEditor.TriggerEventType.MouseOver = "mouseOver";
PageEditor.TriggerEventType.MouseOut = "mouseOut";
PageEditor.MouseOverType = function() {};
PageEditor.MouseOverType.Zoom = "1";
PageEditor.MouseOverType.AddBorder = "2";
PageEditor.ActionType = function() {};
PageEditor.ActionType.GOTO_PAGE = "com.mobiano.flipbook.pageeditor.TAnnoActionGotoPage";
PageEditor.ActionType.OPEN_URL = "com.mobiano.flipbook.pageeditor.TAnnoActionOpenURL";
PageEditor.ActionType.OPEN_WINDOW = "com.mobiano.flipbook.pageeditor.TAnnoActionOpenWindow";
PageEditor.ActionType.SLIDE_SHOW = "com.mobiano.flipbook.pageeditor.TAnnoActionPhotoSlide";
PageEditor.ActionType.ACTION_JS = "com.mobiano.flipbook.pageeditor.TAnnoActionJavascript";
PageEditor.ActionType.PLAY_AUDIO = "com.mobiano.flipbook.pageeditor.TAnnoActionPlayAudio";
var _event;
_event = isTouchDevice() ? {
    _down: "touchstart",
    _move: "touchmove",
    _end: "touchend",
    _click: "touchend",
    _leave: "touchleave",
    _enter: "touchmove",
    _mousewheel: "mousewheel"
} : {
    _down: "mousedown",
    _move: "mousemove",
    _end: "mouseup",
    _click: "click",
    _leave: "mouseleave",
    _enter: "mouseenter",
    _mousewheel: "mousewheel"
};
var bookEvent = function() {};
bookEvent.onCurrentPageIndexChanged = "BE_PIC";
bookEvent.onCurrentPageIndexWillChange = "BE_PIWC";
bookEvent.onNoNextPage = "BE_NNP";
bookEvent.onNoPreviousPage = "BE_NPP";
var KEY_CODE_ENTER = 13,
    KEY_CODE_LEFT = 37,
    KEY_CODE_RIGHT = 39,
    KEY_CODE_HOME = 36,
    KEY_CODE_END = 35,
    KEY_CODE_PAGEUP = 33,
    KEY_CODE_PAGEDOWN = 34;
IE10_LIMIT = "Your browser is Microfost Internet Explorer, you can only apply slide mode.";
colorTo0x = function(a) {
    var b = a;
    if (null == a || void 0 == a) return b;
    "#" != a.substr(0, 1) && "0x" != a.substr(0, 2) && (b = parseInt(a).toString(16), b = "#" + "000000".substr(0, 6 - b.length) + b);
    "0x" == a.substr(0, 2) && (b = a.replace("0x", "#"));
    return b
};
var Point = function(a, b) {
    return {
        x: a,
        y: b
    }
};

function debug(a) {
    window.console && window.console.log && window.console.log(a)
}

function colorSplit(a) {
    var b = {
            r: 0,
            g: 0,
            b: 0
        },
        c = "FF",
        d = "FF",
        e = "FF";
    7 == a.length ? (c = a.substr(1, 2), d = a.substr(3, 2), e = a.substr(5, 2)) : 4 == a.length && (c = a.substr(1, 1), d = a.substr(2, 1), e = a.substr(3, 1), c += c, d += d, e += e);
    b.r = parseInt(c, 16);
    b.g = parseInt(d, 16);
    b.b = parseInt(e, 16);
    return b
}

function colorAdd(a, b) {
    var c = colorSplit(a);
    c.r = Math.min(c.r + b, 255).toString(16);
    c.g = Math.min(c.g + b, 255).toString(16);
    c.b = Math.min(c.b + b, 255).toString(16);
    c.r = 1 >= c.r.length ? "0" + c.r : c.r;
    c.g = 1 >= c.g.length ? "0" + c.g : c.g;
    c.b = 1 >= c.b.length ? "0" + c.b : c.b;
    return "#" + c.r + c.g + c.b
}

function colorDiv(a, b) {
    var c = colorSplit(a);
    c.r = Math.max(c.r - b, 0).toString(16);
    c.g = Math.max(c.g - b, 0).toString(16);
    c.b = Math.max(c.b - b, 0).toString(16);
    c.r = 1 >= c.r.length ? "0" + c.r : c.r;
    c.g = 1 >= c.g.length ? "0" + c.g : c.g;
    c.b = 1 >= c.b.length ? "0" + c.b : c.b;
    return "#" + c.r + c.g + c.b
}
$.fn.setGradient = function(a, b) {
    var c = colorAdd(a, 30),
        d = colorDiv(a, 30);
    void 0 == b && (b = !1);
    var e = "",
        f = "0";
    b && (e = "left,", f = "1");
    this.css({
        background: "linear-gradient(" + e + c + ", " + d + ")"
    });
    switch (browserType) {
        case 1:
            this.css({
                background: "-webkit-linear-gradient(" + e + c + ", " + d + ")"
            });
            break;
        case 2:
            this.css({
                background: "-moz-linear-gradient(" + e + c + ", " + d + ")"
            });
            break;
        case 3:
            this.css({
                background: "-ms-linear-gradient(" + e + c + ", " + d + ")"
            });
            this.css("filter", "progid:DXImageTransform.Microsoft.Gradient(GradientType=" + f + ", EndColorStr=" +
                d + ", StartColorStr=" + c + ")");
            break;
        case 4:
            this.css({
                background: "-o-linear-gradient(" + e + c + ", " + d + ")"
            })
    }
};
$.fn.addBorderShadow = function(a, b, c) {
    var d = b + "px",
        e = c + "px",
        b = 2 * (Math.abs(b) + Math.abs(c)) + "px";
    this.css({
        "-moz-box-shadow": d + " " + e + " " + b + " " + a,
        "box-shadow": d + " " + e + " " + b + " " + a,
        "-webkit-box-shadow": d + " " + e + " " + b + " " + a,
        "-o-box-shadow": d + " " + e + " " + b + " " + a
    })
};
$.fn.changeButtonColor = function(a) {
    var b = this;
    if ("none" != this.css("display")) {
        var c = this;
        0 < this.children().length && (c = this.find("img:first"));
        if (void 0 != c[0]) {
            var d = $("<canvas></canvas>")[0],
                e = d.getContext("2d"),
                f = c.width(),
                j = c.height(),
                c = c[0];
            d.width = f;
            d.height = j;
            try {
                e.drawImage(c, 0, 0, c.naturalWidth, c.naturalHeight, 0, 0, f, j);
                var g = e.getImageData(0, 0, f, j),
                    k = e.getImageData(0, 0, f, j);
                if (!0 != c.colorChanged && (c.colorChanged = !0, g)) {
                    for (var m = colorSplit(a), f = 0, n = g.data.length; f < n; f += 4) 0 < k.data[f + 3] && (g.data[f] !=
                        m.r && (k.data[f] = g.data[f] / 255 * m.r), g.data[f + 1] != m.g && (k.data[f + 1] = g.data[f + 1] / 255 * m.g), g.data[f + 2] != m.b && (k.data[f + 2] = g.data[f + 2] / 255 * m.b));
                    e.putImageData(k, 0, 0);
                    c.src = d.toDataURL("image/png")
                }
            } catch (l) {
                $(c).load(function() {
                    try {
                        b.changeButtonColor(a)
                    } catch (c) {}
                })
            }
        }
    }
};
$.fn.rotate = function(a) {
    if (!(4 < browserType && 1 > browserType)) switch (browserType) {
        case 1:
            this.css({
                "-webkit-transform": "rotate(" + a + "deg)"
            });
            break;
        case 2:
            this.css({
                "-moz-transform": "rotate(" + a + "deg)"
            });
            break;
        case 3:
            this.css({
                "-ms-transform": "rotate(" + a + "deg)"
            });
            break;
        case 4:
            this.css({
                "-0-transform": "rotate(" + a + "deg)"
            })
    }
};
Array.indexOf || (Array.prototype.indexOf = function(a) {
    for (var b = 0; b < this.length; b++)
        if (this[b] == a) return b;
    return -1
});
(function() {
    var a = {
            supportsFullScreen: false,
            isFullScreen: function() {
                return false
            },
            requestFullScreen: function() {},
            cancelFullScreen: function() {},
            fullScreenEventName: "-",
            prefix: ""
        },
        b = ["webkit", "moz", "o", "ms"];
    if (typeof document.exitFullscreen != "undefined") a.supportsFullScreen = true;
    else if (typeof document.cancelFullScreen != "undefined") a.supportsFullScreen = true;
    else
        for (var c = 0, d = b.length; c < d; c++) {
            a.prefix = b[c];
            if (typeof document[a.prefix + "CancelFullScreen"] != "undefined") {
                a.supportsFullScreen = true;
                break
            }
        }
    if (a.supportsFullScreen) {
        a.fullScreenEventName =
            a.prefix + "fullscreenchange";
        a.isFullScreen = function() {
            switch (this.prefix) {
                case "":
                    return document.fullScreen;
                case "webkit":
                    return document.webkitIsFullScreen;
                default:
                    return document[this.prefix + "FullScreen"]
            }
        };
        a.requestFullScreen = function(a) {
            return this.prefix === "" ? a.requestFullScreen() : a[this.prefix + "RequestFullScreen"]()
        };
        a.cancelFullScreen = function() {
            return this.prefix === "" ? document.cancelFullScreen() : document[this.prefix + "CancelFullScreen"]()
        }
    }
    window.fullScreenApi = a
})();

function loadingBook(a, b) {
    this.width = 700;
    this.height = 460;
    this.bg = $("<div></div>");
    this.loadingBox = $("<div></div>");
    this.firstImg = $("<img />");
    this.titleLabel = new label(window.document.title, this.loadingBox);
    this.loadingImage = $("<img src='" + uiBaseURL + "progress.gif' style='position:absolute;' />");
    this.bg.css({
        "background-color": "#474747",
        width: window.innerWidth + "px",
        height: window.innerHeight + "px"
    });
    isTouch && (this.width = window.innerWidth, this.height = window.innerHeight);
    this.loadingImage.css({
        left: (this.width -
            32) / 2 + "px",
        top: this.height - 80 + "px"
    });
    b || (b = "#805080");
    this.loadingBox.css({
        width: this.width + "px",
        height: this.height + "px",
        "-webkit-border-radius": "9px",
        "-moz-border-radius": "9px",
        "-ms-border-radius": "9px",
        "-o-border-radius": "9px",
        "border-radius": "9px",
        "-webkit-box-shadow": "0 0 10px rgba(40, 0, 0, 0.8)",
        "-moz-box-shadow": "0 0 10px rgba(40, 0, 0, 0.8)",
        "-o-box-shadow": "0 0 10px rgba(40, 0, 0, 0.8)",
        "box-shadow": "0 0 10px rgba(40, 0, 0, 0.8)",
        position: "absolute",
        left: (window.innerWidth - this.width) / 2 +
            "px",
        top: (window.innerHeight - this.height) / 2 + "px",
        "background-color": b
    });
    var c = 150;
    300 > window.innerWidth && (c = (window.innerWidth - 10) / 2);
    this.firstImg.attr({
        src: getPageDir(1, "normal")
    });
    this.firstImg.css({
        "-webkit-box-shadow": "0 0 5px rgba(40, 0, 0, 0.6)",
        "-moz-box-shadow": "0 0 5px rgba(40, 0, 0, 0.6)",
        "-o-box-shadow": "0 0 5px rgba(40, 0, 0, 0.6)",
        "box-shadow": "0 0 5px rgba(40, 0, 0, 0.6)",
        position: "absolute",
        width: c + "px",
        top: this.height / 2 - 100 + "px",
        left: this.width / 2 - (c + 5) + "px",
        "backgroud-color": "#888888"
    });
    this.titleLabel.setLabelPosition(this.width / 2 + 10, this.height / 2 - 80);
    this.titleLabel.setFont(18, "#FFFFFF", "Tahoma");
    a.append(this.bg);
    this.bg.append(this.loadingBox);
    this.loadingBox.append(this.firstImg);
    this.loadingBox.append(this.titleLabel);
    this.loadingBox.append(this.loadingImage)
}
loadingBook.prototype.hide = function() {
    this.bg.remove()
};

function loadXMLString(a) {
    var b = null;
    if (!window.DOMParser && window.ActiveXObject)
        for (var c = ["MSXML.2.DOMDocument.6.0", "MSXML.2.DOMDocument.3.0", "Microsoft.XMLDOM"], d = 0; d < c.length; d++) try {
            b = new ActiveXObject(c[d]);
            b.async = !1;
            b.loadXMLString(a);
            break
        } catch (e) {} else if (window.DOMParser && document.implementation && document.implementation.createDocument) try {
            domParser = new DOMParser, b = domParser.parseFromString(a, "text/xml")
        } catch (f) {} else return null;
    return b
}

function loadXMLFile(a) {
    var b = null;
    if (!window.DOMParser && window.ActiveXObject)
        for (var c = ["MSXML.2.DOMDocument.6.0", "MSXML.2.DOMDocument.3.0", "Microsoft.XMLDOM"], d = 0; d < c.length; d++) try {
            b = new ActiveXObject(c[d]);
            break
        } catch (e) {} else if (document.implementation && document.implementation.createDocument) try {
            b = document.implementation.createDocument("", "", null)
        } catch (f) {} else return null;
    null != b && (b.async = !1, b.load(a));
    return b
};

function audioPlayer(a) {
    this.audio = document.createElement("audio");
    tmpContainer.append(this.audio);
    this.audio.src = a;
    var b = this;
    this.audio.addEventListener("ended", function() {
        b.audio.currentTime = 0
    }, !1)
}
audioPlayer.prototype.play = function() {
    null != this.audio && this.audio.play()
};
audioPlayer.prototype.rePlay = function() {
    null != this.audio && (0 != this.audio.currentTime && (this.audio.currentTime = this.audio.startTime), this.audio.play())
};
audioPlayer.prototype.preload = function() {
    this.audio.preload
};
audioPlayer.prototype.loop = function() {
    this.audio.loop
};
audioPlayer.prototype.autoPlay = function() {
    this.audio.autoplay
};
audioPlayer.prototype.src = function(a) {
    this.audio.src = a
};
audioPlayer.prototype.control = function() {
    this.audio.controls
};
var canvasMask = new function() {
    function a(f, j) {
        d = f.offsetWidth;
        e = f.offsetHeight;
        b.width = d;
        b.height = e;
        c.drawImage(a, 0, 0, d, e);
        c.globalCompositeOperation = "source-atop";
        c.drawImage(f, 0, 0);
        f.src = b.toDataURL();
        f.setAttribute("isAdd", "1");
        j.innerHTML = "";
        j.appendChild(f)
    }
    var b = document.createElement("canvas"),
        c = b.getContext("2d"),
        a = !1,
        d = 0,
        e = 0;
    return {
        addMask: function(b, c) {
            "1" != b.getAttribute("isAdd") && (a = document.createElement("img"), a.src = b.getAttribute("data-mask"), b.complete && a(b, c), b.onload = function() {
                a(b,
                    c)
            })
        }
    }
};

function initYoutube(a, b, c, d) {
    this.father = a;
    this.config = $.extend({
        width: 400,
        height: 300,
        x: 0.02,
        y: 0.02,
        alpha: 1,
        id: null
    }, b);
    this.youtubeFrame = null;
    null != this.config.id && (this.pw = c, this.ph = d, this.width = this.config.width * this.pw, this.height = this.config.height * this.ph, this.x = this.config.x * this.pw, this.y = this.config.y * this.ph, this.youtubeFrame = $("<iframe class='youtube-player' type='text/html' width='" + this.width + "' height='" + this.height + "' src='http://www.youtube.com/embed/" + this.config.id + "' frameborder='0' style='position: absolute; opacity: " +
        this.config.alpha + "; left:" + this.x + "px; top:" + this.y + "px;'></iframe>"), a.append(this.youtubeFrame))
}
initYoutube.prototype.onResize = function(a, b) {
    this.pw = a;
    this.ph = b;
    this.width = this.config.width * this.pw;
    this.height = this.config.height * this.ph;
    this.youtubeFrame.css({
        width: this.width + "px",
        height: this.height + "px"
    });
    this.setPosition()
};
initYoutube.prototype.setPosition = function() {
    this.x = this.config.x * this.pw;
    this.y = this.config.y * this.ph;
    this.youtubeFrame.css({
        top: this.y + "px",
        left: this.x + "px"
    })
};
initYoutube.prototype.getPlayEvt = function() {
    return this.config.moviePlayTriggerEvt
};
initYoutube.prototype.getStopEvt = function() {
    return this.config.movieStopTriggerEvt
};
initYoutube.prototype.hide = function() {
    this.youtubeFrame.css({
        width: "0px",
        height: "0px"
    });
    this.youtubeFrame.css({
        display: "none"
    })
};
initYoutube.prototype.show = function() {
    this.youtubeFrame.css({
        width: this.width + "px",
        height: this.height + "px"
    });
    this.youtubeFrame.css({
        display: "block"
    })
};

function initVimeo(a, b, c, d) {
    this.config = $.extend({
        width: 400,
        height: 300,
        x: 0.02,
        y: 0.02,
        alpha: 1,
        id: null
    }, b);
    this.vimeoFrame = null;
    null != this.config.id && (this.pw = c, this.ph = d, this.width = this.config.width * this.pw, this.height = this.config.height * this.ph, this.x = this.config.x * this.pw, this.y = this.config.y * this.ph, b = this.config.id.substring(this.config.id.lastIndexOf("/") + 1), this.vimeoFrame = $("<iframe width='" + this.width + "' height='" + this.height + "' src='http://player.vimeo.com/video/" + b + "' frameborder='0' style='position: absolute; opacity: " +
        this.config.alpha + "; left:" + this.x + "px; top:" + this.y + "px;' webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>"), a.append(this.vimeoFrame))
}
initVimeo.prototype = {
    onResize: function(a, b) {
        this.pw = a;
        this.ph = b;
        this.vimeoFrame.css({
            width: this.pw * this.config.width + "px",
            height: this.ph * this.config.height + "px"
        });
        this.setPosition(this.config.x * this.pw, this.config.y * this.ph)
    },
    setPosition: function(a, b) {
        this.vimeoFrame.css({
            top: b + "px",
            left: a + "px"
        })
    },
    getPlayEvt: function() {
        return this.config.moviePlayTriggerEvt
    },
    getStopEvt: function() {
        return this.config.movieStopTriggerEvt
    },
    hide: function() {
        this.vimeoFrame.css({
            display: "none"
        })
    },
    show: function() {
        this.vimeoFrame.css({
            display: "block"
        })
    }
};

function initVideo(a, b, c, d, e) {
    this.config = $.extend({
        width: 0.6,
        height: 0.5,
        x: 0.2,
        y: 0.2,
        src: null,
        alpha: 1
    }, b);
    this.pw = c;
    this.ph = d;
    this.width = this.config.width * this.pw;
    this.height = this.config.height * this.ph;
    this.x = this.config.x * this.pw;
    this.y = this.config.y * this.ph;
    this.father = a;
    this.content = $("<div></div>");
    this.content.css({
        position: "absolute",
        left: this.x + "px",
        top: this.y + "px",
        width: this.width + "px",
        height: this.height + "px"
    });
    this.father.append(this.content);
    if ("string" == typeof this.config.src.toLowerCase()) {
        if (null ==
            this.config.src || ".mp4" != this.config.src.substr(this.config.src.length - 4, 4)) return
    } else if (this.config.src == {}) return;
    !0 == isFlipPdf && (this.config.src = "../" + this.config.src);
    this.video = null;
    this.video = $("<video src='" + this.config.src + "' controls></video>");
    this.video.css({
        position: "absolute",
        "z-index": 1,
        left: "0px",
        top: "0px",
        width: "100%",
        height: "100%",
        opacity: this.config.alpha
    });
    this.content.append(this.video);
    void 0 != this.video[0].play && (this.content.addVideoSkin(e), this.video.removeAttr("controls"))
}
initVideo.prototype.onResize = function(a, b) {
    null != this.video && (this.pw = a, this.ph = b, this.width = this.config.width * this.pw, this.height = this.config.height * this.ph, this.content.css({
        width: this.width + "px",
        height: this.height + "px"
    }), this.content.resizeVideoSkin(), this.setPosition())
};
initVideo.prototype.setPosition = function() {
    null != this.video && (this.x = this.pw * this.config.x, this.y = this.ph * this.config.y, this.content.css({
        left: this.x + "px",
        top: this.y + "px"
    }))
};
initVideo.prototype.playVideo = function() {
    if (null != this.video) try {
        this.video[0].play()
    } catch (a) {}
};
initVideo.prototype.stopVideo = function() {
    if (null != this.video) try {
        this.video[0].stop()
    } catch (a) {}
};
initVideo.prototype.pauseVideo = function() {
    if (null != this.video) try {
        this.video[0].pause()
    } catch (a) {}
};
initVideo.prototype.getPlayEvt = function() {
    return this.config.moviePlayTriggerEvt
};
initVideo.prototype.getStopEvt = function() {
    return this.config.soundStopTriggerEvt
};

function initAudio(a, b, c, d, e) {
    this.config = $.extend({
        width: 80,
        height: 30,
        x: 20,
        y: 20,
        src: null,
        alpha: 1
    }, b);
    this.audio = null;
    if (null != this.config.src) {
        this.originWidth = bookConfig.largePageWidth;
        this.pw = c;
        this.ph = d;
        this.width = this.config.width * this.pw;
        this.height = this.config.height * this.ph;
        this.x = this.config.x * this.pw;
        this.y = this.config.y * this.ph;
        this.father = a;
        a = b.key;
        this.themeName = e;
        this.content = $("<div></div>");
        this.content.css({
            position: "absolute",
            left: this.x + "px",
            top: this.y + "px",
            opacity: this.config.alpha
        });
        this.resizeThemes = {
            "default": "",
            wave: ""
        };
        this.themeName in this.resizeThemes || void 0 == this.themeName ? this.content.css({
            width: this.width + "px",
            height: this.height + "px"
        }) : this.resizeAudio(c, d);
        this.father.append(this.content);
        this.audio = $("<audio controls ></audio>");
        this.audio.css({
            position: "absolute",
            width: this.width + "px",
            height: this.height + "px",
            left: "0px",
            top: "0px",
            opacity: this.config.alpha
        });
        this.content.audioResources = [];
        if (void 0 == a) this.audio.attr("src", this.config.src), this.content.audioResources.push(this.config.src);
        else if (a in this.config.src) d = this.config.src[a], "./" == d.substr(0, 2) && (d = "." + d), this.content.audioResources.push(d), this.audio.attr("src", d);
        else
            for (c = 0; c < this.config.src.length; c++) d = this.config.src[c][a], "./" == d.substr(0, 2) && (d = "." + d), this.content.audioResources.push(d), this.audio.append($("<source src='" + d + "'>")), 0 == c && this.audio.attr("src", d);
        this.content.append(this.audio);
        void 0 != this.audio[0].play && (this.content.addAudioSkin(e), this.audio.removeAttr("controls"))
    }
}
initAudio.prototype.onResize = function(a, b) {
    this.pw = a;
    this.ph = b;
    this.width = this.config.width * this.pw;
    this.height = this.config.height * this.ph;
    this.themeName in this.resizeThemes || void 0 == this.themeName ? (this.content.css({
        width: this.width + "px",
        height: this.height + "px"
    }), this.content.resizeAudioSkin()) : this.resizeAudio(a, b);
    this.setPosition()
};
initAudio.prototype.resizeAudio = function(a) {
    a /= this.originWidth;
    this.content.css({
        "-webkit-transform-origin": "0% 0%",
        "-moz-transform-origin": "0% 0%",
        "-ms-transform-origin": "0% 0%",
        "-o-transform-origin": "0% 0%",
        "-webkit-transform": "scale(" + a + ")",
        "-moz-transform": "scale(" + a + ")",
        "-ms-transform": "scale(" + a + ")",
        "-o-transform": "scale(" + a + ")"
    })
};
initAudio.prototype.setPosition = function() {
    this.x = this.config.x * this.pw;
    this.y = this.config.y * this.ph;
    this.content.css({
        left: this.x + "px",
        top: this.y + "px"
    })
};
initAudio.prototype.play = function() {
    if (null != this.audio) try {
        this.audio[0].play()
    } catch (a) {}
};
initAudio.prototype.pause = function() {
    if (null != this.audio) try {
        this.audio[0].pause()
    } catch (a) {}
};
initAudio.prototype.stop = function() {
    null != this.audio && this.audio[0].stop()
};
initAudio.prototype.getPlayEvt = function() {
    return this.config.soundPlayTriggerEvt
};
initAudio.prototype.getStopEvt = function() {
    return this.config.soundStopTriggerEvt
};

function initAudioEditor(a, b, c) {
    this.background = $("<div class='printBar'></div>");
    this.contentBox = $("<div class='printBG'></div>");
    this.closeButton = $("<div></div>");
    this.showing = !1;
    this.width = windowWidth;
    this.height = windowHeight;
    this.audioSrc = b;
    this.contentWidth = 350;
    this.contentHeight = 63;
    this.themeName = "enjoy";
    this.background.css({
        height: this.height + "px",
        bottom: "0px"
    });
    this.contentBox.css({
        height: this.contentHeight + "px",
        width: this.contentWidth + "px",
        left: (this.width - this.contentWidth) / 2 + "px"
    });
    this.contentBox.css({
        top: (this.height -
            this.contentHeight) / 2 + "px",
        "border-radius": "0px"
    });
    this.audio = $("<audio controls ></audio>");
    this.audio.css({
        position: "absolute",
        width: this.contentWidth + "px",
        height: this.contentHeight + "px",
        left: "0px",
        top: "0px"
    });
    this.contentBox.audioResources = [];
    this.audio.attr("src", this.audioSrc);
    this.contentBox.audioResources.push(this.audioSrc);
    this.contentBox.append(this.audio);
    void 0 != this.audio[0].play && (this.contentBox.addAudioSkin(this.themeName), this.audio.removeAttr("controls"), c && (this.audio[0].autoPlay = !0));
    $(a).append(this.background);
    $(a).append(this.contentBox);
    $(a).append(this.closeButton);
    this.closeButton.css({
        top: "30px",
        right: "30px",
        position: "absolute",
        "z-index": "103"
    });
    this.closeButton.append($("<img src='" + uiBaseURL + "close.png'/>").asImageButton());
    this.initEvent();
    $(this.background).css("display", "none");
    $(this.contentBox).css("display", "none");
    $(this.closeButton).css("display", "none");
    void 0 != leftShortcutButton && null != leftShortcutButton && leftShortcutButton.setShow(!1);
    void 0 != rightShortcutButton &&
        null != rightShortcutButton && rightShortcutButton.setShow(!1)
}
initAudioEditor.prototype.onResize = function() {
    this.contentWidth = 360;
    this.contentHeight = 70;
    this.background.css({
        height: windowHeight + "px",
        bottom: "0px"
    });
    this.contentBox.css({
        height: this.contentHeight + "px",
        width: this.contentWidth + "px",
        left: (windowWidth - this.contentWidth) / 2 + "px"
    });
    this.contentBox.css({
        top: (windowHeight - this.contentHeight) / 2 + "px"
    });
    this.closeButton.css({
        top: "30px",
        right: "30px"
    });
    void 0 != this.themeName && (this.contentBox.css({
            width: this.contentWidth + "px",
            height: this.contentHeight + "px"
        }),
        this.contentBox.resizeAudioSkin())
};
initAudioEditor.prototype.setPosition = function(a, b, c) {
    void 0 == c && (c = ["left", "top"]);
    $(this.background).css(c[0], a + "px");
    $(this.background).css(c[1], b + "px")
};
initAudioEditor.prototype.getShowStatu = function() {
    return this.showing
};
initAudioEditor.prototype.setShowStatu = function(a) {
    this.showing = a
};
initAudioEditor.prototype.showshow = function() {
    $(this.background).fadeIn(500);
    $(this.contentBox).fadeIn(500);
    $(this.closeButton).fadeIn(500);
    this.showing = !0
};
initAudioEditor.prototype.hideBox = function() {
    var a = this;
    $(this.background).fadeOut(500, function() {
        a.contentBox.remove();
        a.closeButton.remove()
    });
    void 0 != leftShortcutButton && null != leftShortcutButton && leftShortcutButton.setShow(!0);
    void 0 != rightShortcutButton && null != rightShortcutButton && rightShortcutButton.setShow(!0);
    this.showing = !1
};
initAudioEditor.prototype.initEvent = function() {
    var a = this;
    this.background.bind(_event._down, function() {
        a.hideBox();
        a.showing = !1
    });
    this.closeButton.bind(_event._end, function() {
        a.hideBox();
        a.showing = !1
    });
    this.closeButton.bind("mouseover", function() {
        a.closeButton.css({
            cursor: "pointer"
        })
    })
};
initAudioEditor.prototype.play = function() {
    if (null != this.audio) try {
        this.audio[0].play()
    } catch (a) {}
};
initAudioEditor.prototype.pause = function() {
    if (null != this.audio) try {
        this.audio[0].pause()
    } catch (a) {}
};
initAudioEditor.prototype.stop = function() {
    null != this.audio && this.audio[0].stop()
};
initAudioEditor.prototype.getPlayEvt = function() {
    return this.config.soundPlayTriggerEvt
};
initAudioEditor.prototype.getStopEvt = function() {
    return this.config.soundStopTriggerEvt
};

function initImage(a, b, c, d) {
    this.config = $.extend({
        width: 0.2,
        height: 0.2,
        x: 0.2,
        y: 0.2,
        alpha: 1,
        src: null
    }, b);
    this.img = $("<img>");
    this.imgBorder = $('<div class = "bubble expose-square-solid"></div>');
    null != this.config.src && (this.pw = c, this.ph = d, this.width = this.config.width * c, this.height = this.config.height * d, !0 == isFlipPdf && (this.config.src = "." + this.config.src), this.img.attr({
        src: this.config.src
    }), this.img.css({
        position: "absolute",
        width: this.width + "px",
        height: this.height + "px",
        left: this.pw * this.config.x + "px",
        top: this.ph * this.config.y + "px",
        opacity: this.config.alpha,
        "z-index": "101"
    }), this.imgBorder.css({
        position: "absolute",
        width: this.width + "px",
        height: this.height + "px",
        left: this.pw * this.config.x + "px",
        top: this.ph * this.config.y + "px",
        opacity: this.config.alpha,
        "z-index": "102"
    }), a.append(this.img), a.append(this.imgBorder), this.imgBorder.css({
        display: "none"
    }), this.father = a, this.initEvt())
}
initImage.prototype.initEvt = function() {
    this.audios = this.slide = this.form = null;
    var a = this;
    this.config.mouseOver == PageEditor.MouseOverType.AddBorder ? (this.img.bind(_event._enter, function() {
        a.imgBorder.css({
            display: "block"
        });
        a.img.animate({
            opacity: "0.8"
        }, 300, function() {})
    }), this.img.bind(_event._down, function() {
        a.imgBorder.css({
            display: "block"
        });
        a.img.animate({
            opacity: "0.8"
        }, 300, function() {})
    }), this.imgBorder.bind(_event._end, function() {
        a.imgBorder.css({
            display: "none"
        });
        a.img.animate({
                opacity: "1"
            }, 300,
            function() {})
    }), this.imgBorder.bind(_event._leave, function() {
        a.imgBorder.css({
            display: "none"
        });
        a.img.animate({
            opacity: "1"
        }, 300, function() {})
    })) : this.config.mouseOver == PageEditor.MouseOverType.Zoom && (this.img.bind(_event._enter, function() {
        a.img.animate({
            left: a.pw * a.config.x - 0.05 * a.width + "px",
            top: a.ph * a.config.y - 0.05 * a.height + "px",
            width: 1.1 * a.width + "px",
            height: 1.1 * a.height + "px"
        }, 300, function() {})
    }), this.img.bind(_event._down, function() {
        a.img.animate({
            left: a.pw * a.config.x - 0.05 * a.width + "px",
            top: a.ph *
                a.config.y - 0.05 * a.height + "px",
            width: 1.1 * a.width + "px",
            height: 1.1 * a.height + "px"
        }, 300, function() {})
    }), this.img.bind(_event._end, function() {
        a.img.animate({
            left: a.pw * a.config.x + "px",
            top: a.ph * a.config.y + "px",
            width: a.width + "px",
            height: a.height + "px"
        }, 300, function() {})
    }), this.img.bind(_event._leave, function() {
        a.img.animate({
            left: a.pw * a.config.x + "px",
            top: a.ph * a.config.y + "px",
            width: a.width + "px",
            height: a.height + "px"
        }, 300, function() {})
    }));
    if (void 0 != this.config.action) {
        this.flag = 0;
        this.linkURL = null;
        try {
            void 0 !=
                this.config.action.length && (this.config.action = this.config.action[0]), this.linkURL = this.config.action.url
        } catch (b) {}
        var c;
        null != this.linkURL && "www" == this.linkURL.substr(0, 3).toLowerCase() && (this.linkURL = "http://" + this.linkURL);
        try {
            c = this.config.action.triggerEventType
        } catch (d) {
            c = null
        }
        a.img.bind(_event._down, function() {
            c == PageEditor.TriggerEventType.MouseDown && actionEvent.call(a);
            browserType == 3 ? event.cancelBubble = true : event.stopPropagation()
        });
        a.img.bind(_event._enter, function() {
            c == PageEditor.TriggerEventType.MouseOver &&
                actionEvent.call(a)
        });
        a.img.bind(isTouch ? _event._end : "mouseout", function() {
            c == PageEditor.TriggerEventType.MouseOut && actionEvent.call(a)
        });
        a.imgBorder.bind(_event._down, function() {
            c == PageEditor.TriggerEventType.MouseDown && actionEvent.call(a);
            browserType == 3 ? event.cancelBubble = true : event.stopPropagation()
        });
        a.imgBorder.bind(_event._enter, function() {
            c == PageEditor.TriggerEventType.MouseOver && actionEvent.call(a)
        });
        a.imgBorder.bind(isTouch ? _event._end : "mouseout", function() {
            c == PageEditor.TriggerEventType.MouseOut &&
                actionEvent.call(a)
        })
    }
};
initImage.prototype.onResize = function(a, b) {
    this.pw = a;
    this.ph = b;
    this.width = a * this.config.width;
    this.height = b * this.config.height;
    this.img.css({
        width: this.width + "px",
        height: this.height + "px"
    });
    this.imgBorder.css({
        width: this.width + "px",
        height: this.height + "px"
    });
    this.setPosition(this.config.x * a, this.config.y * b);
    if (null != this.form) this.form.onResize(bookContainer.width(), bookContainer.height());
    if (null != this.slide) this.slide.onResize(bookContainer.width(), bookContainer.height());
    if (null != this.audios) this.audios.onResize(bookContainer.width(),
        bookContainer.height())
};
initImage.prototype.setPosition = function(a, b) {
    this.img.css({
        left: a + "px",
        top: b + "px"
    });
    this.imgBorder.css({
        left: a + "px",
        top: b + "px"
    })
};

function initArrow(a, b, c, d, e) {
    this.config = $.extend({
        StartX: 0,
        StartY: 0,
        EndX: 100,
        EndY: 100,
        width: 200,
        height: 20,
        x: 0,
        y: 0,
        alpha: 1,
        lineWidth: 1,
        lineType: null,
        dotWidth: 3,
        color: null,
        arrowType: null,
        sh: "false",
        sx: 4,
        sy: 4,
        se: 2,
        sr: null
    }, b);
    this.pw = c;
    this.ph = d;
    this.color = colorTo0x(this.config.color);
    this.bstyle = "Solid line" == this.config.lineType ? "solid" : "dashed";
    this.width = this.config.width * this.pw;
    this.height = this.config.height * this.ph;
    this.x = this.config.x * this.pw;
    this.y = this.config.y * this.ph;
    this.id = "arrow" + e;
    this.x1 = this.x - 10;
    this.y1 = this.y - 10;
    0 > this.x - 10 && (this.x1 = 0);
    0 > this.y - 10 && (this.y1 = 0);
    this.arrow = $("<canvas id=" + this.id + " width=" + (this.width + 20) + " height=" + (this.height + 20) + " style='position: absolute;top:" + this.y1 + "px;left:" + this.x1 + "px'></canvas>");
    a.append(this.arrow);
    this.arrowcan(this.x, this.y, this.config.StartX, this.config.StartY, this.config.EndX, this.config.EndY, this.width, this.height, this.config.lineWidth, this.config.dotWidth, this.color, this.config.alpha, this.bstyle, this.config.sx, this.config.sy,
        this.config.se, this.config.sr, this.config.sh)
}
initArrow.prototype.onResize = function(a, b) {
    this.pw = a;
    this.ph = b;
    this.width = this.config.width * this.pw;
    this.height = this.config.height * this.ph;
    this.arrow.css({
        width: this.width + 20 + "px",
        height: this.height + 20 + "px"
    });
    this.setPosition()
};
initArrow.prototype.setPosition = function() {
    this.x = this.config.x * this.pw - 10;
    this.y = this.config.y * this.ph - 10;
    this.arrow.css({
        left: this.x + "px",
        top: this.y + "px"
    })
};
initArrow.prototype.arrowcan = function(a, b, c, d, e, f, j, g, k, m, n, l, p, q, u, z, s, A) {
    var v = b = a = 0,
        r = 0,
        t = 0,
        x = this.arrow[0].getContext("2d"),
        m = parseFloat(m);
    x.clearRect(0, 0, this.pw, this.ph);
    x.save();
    x.lineWidth = k;
    x.globalAlpha = l;
    x.strokeStyle = n;
    "false" != A && (x.shadowOffsetX = q, x.shadowOffsetY = u, x.shadowBlur = z, x.shadowColor = colorTo0x(s));
    0 == c && 0 == d ? (t = r = 10, a = j + 10, b = g + 10) : 0 == c && 0 != d ? (r = 10, t = 10 + g, a = j + 10, b = 10) : 0 != c && 0 == d ? (r = 10 + j, a = t = 10, b = g + 10) : (r = 10 + j, t = 10 + g, b = a = 10);
    x.translate(0, 0);
    x.beginPath();
    x.moveTo(r, t);
    "Double Arrow" ==
    this.config.arrowType && (0 == f - d ? e > c ? x.moveTo(r + 5, t) : x.moveTo(r - 5, t) : 0 == e - c && (f > d ? x.moveTo(r, t + 5) : x.moveTo(r, t - 5)));
    if ("solid" == p) 0 == f - d ? e > c ? x.lineTo(a - 5, b) : x.lineTo(a + 5, b) : 0 == e - c ? f > d ? x.lineTo(a, b - 5) : x.lineTo(a, b + 5) : x.lineTo(a, b);
    else {
        j = 0;
        p = m + 2;
        g = r;
        l = t;
        p = (0 == f - d ? e > c ? (a - r) / p : (r - a) / p : 0 == e - c ? f > d ? (b - t) / p : (t - b) / p : d < f && c < e ? a - r > b - t ? (a - r) / p : (b - t) / p : d > f && c < e ? a - r > t - b ? (a - r) / p : (t - b) / p : d < f && c > e ? r - a > b - t ? (r - a) / p : (b - t) / p : r - a > t - b ? (r - b) / p : (t - b) / p) - 1;
        for (i = 0; i < p; i++)(x.moveTo(g, l), 0 == f - d ? g = e > c ? g + m : g - m : 0 == e - c ? l = f > d ? l +
                m : l - m : d < f && c < e ? a - r > b - t ? (j = Math.abs((b - t) / (a - r)), g += m, l += m * j) : (j = Math.abs((a - r) / (b - t)), g += m * j, l += m) : d > f && c < e ? a - r > t - b ? (j = Math.abs((b - t) / (a - r)), g += m, l -= m * j) : (j = Math.abs((a - r) / (b - t)), g += m * j, l -= m) : d < f && c > e ? r - a > b - t ? (j = Math.abs((b - t) / (a - r)), g -= m, l += m * j) : (j = Math.abs((a - r) / (b - t)), g -= m * j, l += m) : r - a > t - b ? (j = Math.abs((b - t) / (a - r)), g -= m, l -= m * j) : (j = Math.abs((a - r) / (b - t)), g -= m * j, l -= m), x.lineTo(g, l), 0 == f - d) ? g = e > c ? g + 2 : g - 2 : 0 == e - c ? l = f > d ? l + 2 : l - 2 : d < f && c < e ? a - r > b - t ? (g += 2, l += 2 * j) : (g += 2 * j, l += 2) : d > f && c < e ? a - r > t - b ? (g += 2, l -= 2 * j) :
            (g += 2 * j, l -= 2) : d < f && c > e ? r - a > b - t ? (g -= 2, l += 2 * j) : (g -= 2 * j, l += 2) : r - a > t - b ? (g -= 2, l -= 2 * j) : (g -= 2 * j, l -= 2)
    }
    x.fillStyle = n;
    x.stroke();
    x.save();
    v = 2 < 1 * k ? 15 : 10;
    "Double Arrow" == this.config.arrowType && (x.moveTo(r, t), "Double Arrow" == this.config.arrowType && (0 == f - d ? e > c ? x.moveTo(r - 1, t) : x.moveTo(r + 1, t) : 0 == e - c && (f > d ? x.moveTo(r, t - 1) : x.moveTo(r, t + 1))), x.translate(r, t), 0 <= b - t ? x.rotate(4.7 - Math.atan((a - r) / (b - t))) : x.rotate(4.7 - (Math.PI + Math.atan((a - r) / (b - t)))), x.lineTo(-v, v - 5), x.lineTo(-(v - 5), 0), x.lineTo(-v, -(v - 5)), x.lineTo(0,
        0), x.fill(), x.restore());
    x.moveTo(a, b);
    x.translate(a, b);
    0 <= b - t ? x.rotate(1.5 - Math.atan((a - r) / (b - t))) : x.rotate(1.5 - (Math.PI + Math.atan((a - r) / (b - t))));
    x.lineTo(-v, v - 5);
    x.lineTo(-(v - 5), 0);
    x.lineTo(-v, -(v - 5));
    x.lineTo(0, 0);
    x.fill();
    x.restore()
};

function initLine(a, b, c, d, e) {
    this.config = $.extend({
        StartX: 0,
        StartY: 0,
        EndX: 100,
        EndY: 100,
        width: 200,
        height: 20,
        x: 0,
        y: 0,
        alpha: 1,
        lineAlpha: 1,
        lineWidth: 1,
        lineType: null,
        dotWidth: 3,
        color: null,
        sh: "false",
        sx: 4,
        sy: 4,
        se: 2,
        sr: null
    }, b);
    this.pw = c;
    this.ph = d;
    this.color = colorTo0x(this.config.color);
    this.bstyle = "Solid line" == this.config.lineType ? "solid" : "dashed";
    this.width = this.config.width * this.pw;
    this.height = this.config.height * this.ph;
    this.x = this.config.x * this.pw;
    this.y = this.config.y * this.ph;
    this.id = "line" + e;
    this.x1 =
        this.x - 10;
    this.y1 = this.y - 10;
    0 > this.x - 10 && (this.x1 = 0);
    0 > this.y - 10 && (this.y1 = 0);
    this.line = $("<canvas id=" + this.id + " width=" + (this.width + 20) + " height=" + (this.height + 20) + " style='position: absolute;top:" + this.y1 + "px;left:" + this.x1 + "px'></canvas>");
    a.append(this.line);
    this.linecan(this.x, this.y, this.config.StartX, this.config.StartY, this.config.EndX, this.config.EndY, this.width, this.height, this.config.lineWidth, this.config.dotWidth, this.color, this.config.lineAlpha, this.bstyle, this.config.sx, this.config.sy,
        this.config.se, this.config.sr, this.config.sh)
}
initLine.prototype.onResize = function(a, b) {
    this.pw = a;
    this.ph = b;
    this.width = this.config.width * this.pw;
    this.height = this.config.height * this.ph;
    this.line.css({
        width: this.width + 20 + "px",
        height: this.height + 20 + "px"
    });
    this.setPosition()
};
initLine.prototype.setPosition = function() {
    this.x = this.config.x * this.pw - 10;
    this.y = this.config.y * this.ph - 10;
    this.line.css({
        left: this.x + "px",
        top: this.y + "px"
    })
};
initLine.prototype.linecan = function(a, b, c, d, e, f, j, g, k, m, n, l, p, q, u, z, s, A) {
    var v = b = a = 0,
        r = 0,
        t = this.line[0].getContext("2d"),
        m = parseFloat(m);
    0 == c && 0 == d ? (r = v = 10, a = j + 10, b = g + 10) : 0 == c && 0 != d ? (v = 10, r = 10 + g, a = j + 10, b = 10) : 0 != c && 0 == d ? (v = 10 + j, a = r = 10, b = g + 10) : (v = 10 + j, r = 10 + g, b = a = 10);
    t.moveTo(v, r);
    t.lineWidth = k;
    t.globalAlpha = l;
    t.strokeStyle = n;
    "false" != A && (t.shadowOffsetX = q, t.shadowOffsetY = u, t.shadowBlur = z, t.shadowColor = colorTo0x(s));
    if ("solid" == p) t.lineTo(a, b);
    else {
        j = 0;
        n = m + 2;
        g = v;
        k = r;
        num = 0 == f - d ? e > c ? (a - v) / n : (v - a) / n : 0 ==
            e - c ? f > d ? (b - r) / n : (r - b) / n : d < f && c < e ? a - v > b - r ? (a - v) / n : (b - r) / n : d > f && c < e ? a - v > r - b ? (a - v) / n : (r - b) / n : d < f && c > e ? v - a > b - r ? (v - a) / n : (b - r) / n : v - a > r - b ? (v - b) / n : (r - b) / n;
        n = num - 1;
        for (i = 0; i < n; i++)(t.moveTo(g, k), 0 == f - d ? g = e > c ? g + m : g - m : 0 == e - c ? k = f > d ? k + m : k - m : d < f && c < e ? a - v > b - r ? (j = Math.abs((b - r) / (a - v)), g += m, k += m * j) : (j = Math.abs((a - v) / (b - r)), g += m * j, k += m) : d > f && c < e ? a - v > r - b ? (j = Math.abs((b - r) / (a - v)), g += m, k -= m * j) : (j = Math.abs((a - v) / (b - r)), g += m * j, k -= m) : d < f && c > e ? v - a > b - r ? (j = Math.abs((b - r) / (a - v)), g -= m, k += m * j) : (j = Math.abs((a - v) / (b - r)), g -= m * j,
            k += m) : v - a > r - b ? (j = Math.abs((b - r) / (a - v)), g -= m, k -= m * j) : (j = Math.abs((a - v) / (b - r)), g -= m * j, k -= m), t.lineTo(g, k), 0 == f - d) ? g = e > c ? g + 2 : g - 2 : 0 == e - c ? k = f > d ? k + 2 : k - 2 : d < f && c < e ? a - v > b - r ? (g += 2, k += 2 * j) : (g += 2 * j, k += 2) : d > f && c < e ? a - v > r - b ? (g += 2, k -= 2 * j) : (g += 2 * j, k -= 2) : d < f && c > e ? v - a > b - r ? (g -= 2, k += 2 * j) : (g -= 2 * j, k += 2) : v - a > r - b ? (g -= 2, k -= 2 * j) : (g -= 2 * j, k -= 2)
    }
    t.stroke()
};

function initRe(a, b, c, d, e) {
    this.config = $.extend({
        width: 200,
        height: 20,
        x: 0,
        y: 0,
        alpha: 1,
        fillStyle: null,
        color: null,
        ColorA: null,
        ColorB: null,
        angle: 90,
        spalpha: 1,
        action: null,
        borderWidth: 1,
        borderColor: null,
        borderAlpha: 1,
        sh: "false",
        sx: 4,
        sy: 4,
        se: 2,
        sr: null,
        round: !1,
        roundWidth: 0
    }, b);
    this.pw = c;
    this.ph = d;
    this.father = a;
    this.color = colorTo0x(this.config.color);
    this.width = this.config.width * this.pw;
    this.height = this.config.height * this.ph;
    this.x = this.config.x * this.pw;
    this.y = this.config.y * this.ph;
    this.id = "re" + e;
    this.angle =
        360 - parseInt(this.config.angle);
    this.A = colorTo0x(this.config.ColorA);
    this.B = colorTo0x(this.config.ColorB);
    this.round = b.round;
    this.roundWidth = Math.ceil(b.roundWidth / 2);
    this.Re = $("<div id=" + this.id + " style='overflow: hidden;position:absolute;top:" + this.y + "px;left:" + this.x + "px;border:" + this.config.borderWidth + "px solid " + colorTo0x(this.config.borderColor) + ";background:" + this.color + ";height:" + this.height + "px;width:" + this.width + "px;opacity:" + this.config.spalpha + "'></div>");
    "false" != this.config.sh && this.Re.css({
        "box-shadow": this.config.sx +
            "px " + this.config.sy + "px " + this.config.se + "px " + colorTo0x(this.config.sr),
        "-moz-box-shadow": this.config.sx + "px " + this.config.sy + "px " + this.config.se + "px " + colorTo0x(this.config.sr),
        "-webkit-box-shadow": this.config.sx + "px " + this.config.sy + "px " + this.config.se + "px " + colorTo0x(this.config.sr),
        "-o-box-shadow": this.config.sx + "px " + this.config.sy + "px " + this.config.se + "px " + colorTo0x(this.config.sr)
    });
    !0 == this.round && this.Re.css({
        "border-radius": this.roundWidth + "px"
    });
    if ("gradient" == this.config.fillStyle) switch (b =
        this.A, c = this.B, this.Re.css({
            background: "linear-gradient(" + this.angle + "deg, " + b + ", " + c + ")"
        }), browserType) {
        case 1:
            this.Re.css({
                background: "-webkit-linear-gradient(" + this.angle + "deg, " + b + ", " + c + ")"
            });
            break;
        case 2:
            this.Re.css({
                background: "-moz-linear-gradient(" + this.angle + "deg, " + b + ", " + c + ")"
            });
            break;
        case 3:
            this.Re.css({
                background: "-ms-linear-gradient(" + this.angle + "deg, " + b + ", " + c + ")"
            });
            this.Re.css("filter", "progid:DXImageTransform.Microsoft.Gradient( EndColorStr=" + c + ", StartColorStr=" + b + ")");
            break;
        case 4:
            this.Re.css({
                background: "-o-linear-gradient(" + this.angle + "deg, " + b + ", " + c + ")"
            })
    }
    "none" == this.config.fillStyle && this.Re.css({
        background: ""
    });
    this.initEvent();
    a.append(this.Re)
}
initRe.prototype.initEvent = function() {
    var a = this;
    this.flag = 0;
    this.linkURL = this.audios = this.slide = this.form = null;
    if (null != a.config.action) {
        try {
            void 0 != this.config.action.length && (this.config.action = this.config.action[0]), this.linkURL = this.config.action.url
        } catch (b) {}
        var c;
        null != this.linkURL && "www" == this.linkURL.substr(0, 3).toLowerCase() && (this.linkURL = "http://" + this.linkURL);
        try {
            c = this.config.action.triggerEventType
        } catch (d) {
            c = null
        }
        this.Re.bind(_event._down, function() {
            c == PageEditor.TriggerEventType.MouseDown &&
                actionEvent.call(a);
            browserType == 3 ? event.cancelBubble = true : event.stopPropagation()
        });
        this.Re.bind("mouseover", function() {
            c == PageEditor.TriggerEventType.MouseOver && actionEvent.call(a)
        });
        this.Re.bind(isTouch ? _event._end : "mouseout", function() {
            c == PageEditor.TriggerEventType.MouseOut && actionEvent.call(a)
        })
    }
};
initRe.prototype.onResize = function(a, b) {
    this.pw = a;
    this.ph = b;
    this.width = this.config.width * this.pw;
    this.height = this.config.height * this.ph;
    this.Re.css({
        width: this.width + "px",
        height: this.height + "px"
    });
    this.setPosition();
    if (null != this.form) this.form.onResize(bookContainer.width(), bookContainer.height());
    if (null != this.slide) this.slide.onResize(bookContainer.width(), bookContainer.height());
    if (null != this.audios) this.audios.onResize(bookContainer.width(), bookContainer.height())
};
initRe.prototype.setPosition = function() {
    this.x = this.config.x * this.pw;
    this.y = this.config.y * this.ph;
    this.Re.css({
        left: this.x + "px",
        top: this.y + "px"
    })
};

function initRound(a, b, c, d, e) {
    this.config = $.extend({
        width: 200,
        height: 20,
        x: 0,
        y: 0,
        alpha: 1,
        fillStyle: null,
        color: null,
        ColorA: null,
        ColorB: null,
        angle: "false",
        spalpha: 1,
        action: null,
        borderWidth: 1,
        borderColor: null,
        borderAlpha: 1,
        sh: "false",
        sx: 4,
        sy: 4,
        se: 2,
        sr: null
    }, b);
    this.pw = c;
    this.ph = d;
    this.color = colorTo0x(this.config.color);
    this.father = a;
    this.width = this.config.width * this.pw;
    this.height = this.config.height * this.ph;
    this.x = this.config.x * this.pw;
    this.y = this.config.y * this.ph;
    this.id = "round" + e;
    this.x1 = this.x - 10;
    this.y1 = this.y - 10;
    0 > this.x - 10 && (this.x1 = 0);
    0 > this.y - 10 && (this.y1 = 0);
    this.rounds = $("<canvas id=" + this.id + " width=" + (this.width + 20) + " height=" + (this.height + 20) + " style='position: absolute;top:" + this.y1 + "px;left:" + this.x1 + "px'></canvas>");
    this.father = a;
    this.initEvent();
    a.append(this.rounds);
    this.roundcan(this.x, this.y, this.width, this.height, this.color, this.config.fillStyle, this.config.ColorA, this.config.ColorB, this.config.alpha, this.config.borderWidth, this.config.spalpha, this.config.borderColor, this.config.borderAlpha,
        this.config.sx, this.config.sy, this.config.se, this.config.sr, this.config.sh, 360 - parseInt(this.config.angle))
}
initRound.prototype.initEvent = function() {
    var a = this;
    this.flag = 0;
    this.audios = this.slide = this.form = null;
    this.linkURL;
    if (null != a.config.action) {
        try {
            void 0 != this.config.action.length && (this.config.action = this.config.action[0]), this.linkURL = this.config.action.url
        } catch (b) {}
        var c;
        null != this.linkURL && "www" == this.linkURL.substr(0, 3).toLowerCase() && (this.linkURL = "http://" + this.linkURL);
        try {
            c = this.config.action.triggerEventType
        } catch (d) {
            c = null
        }
        this.rounds.bind(_event._down, function() {
            c == PageEditor.TriggerEventType.MouseDown &&
                actionEvent.call(a);
            browserType == 3 ? event.cancelBubble = true : event.stopPropagation()
        });
        this.rounds.bind("mouseover", function() {
            c == PageEditor.TriggerEventType.MouseOver && actionEvent.call(a)
        });
        this.rounds.bind(isTouch ? _event._end : "mouseout", function() {
            c == PageEditor.TriggerEventType.MouseOut && actionEvent.call(a)
        })
    }
};
initRound.prototype.onResize = function(a, b) {
    this.pw = a;
    this.ph = b;
    this.width = this.config.width * this.pw;
    this.height = this.config.height * this.ph;
    this.rounds.css({
        width: this.width + 20 + "px",
        height: this.height + 20 + "px"
    });
    this.setPosition();
    if (null != this.form) this.form.onResize(bookContainer.width(), bookContainer.height());
    if (null != this.slide) this.slide.onResize(bookContainer.width(), bookContainer.height());
    if (null != this.audios) this.audios.onResize(bookContainer.width(), bookContainer.height())
};
initRound.prototype.setPosition = function() {
    this.x = this.config.x * this.pw - 10;
    this.y = this.config.y * this.ph - 10;
    this.rounds.css({
        left: this.x + "px",
        top: this.y + "px"
    })
};
initRound.prototype.roundcan = function(a, b, c, d, e, f, j, g, k, m, n, l, p, q, u, z, s, A, v) {
    b = p = 0;
    a = this.rounds[0].getContext("2d");
    k = [c / 2 + 10, d / 2 + 10];
    p = c / 2;
    b = d / 2;
    a.save();
    a.beginPath();
    a.strokeStyle = colorTo0x(l);
    a.lineWidth = m;
    a.globalAlpha = n;
    "false" != A && (a.shadowOffsetX = q, a.shadowOffsetY = u, a.shadowBlur = z, a.shadowColor = colorTo0x(s));
    a.closePath();
    a.stroke();
    DrawEllipse(a, k, p, b);
    "gradient" == f && (d = v * Math.PI / 180, c = k[0] + p * Math.cos(d), d = k[1] + b * Math.sin(d), v = (v + 180) * Math.PI / 180, n = k[0] + p * Math.cos(v), v = k[1] + b * Math.sin(v),
        v = a.createLinearGradient(c, d, n, v), v.addColorStop(0, colorTo0x(j)), v.addColorStop(1, colorTo0x(g)), a.fillStyle = v, a.fill());
    "none" == f && (a.fillStyle = e, a.fill());
    0 != m && a.stroke();
    a.closePath()
};

function DrawEllipse(a, b, c, d) {
    var e = b[0] + c,
        f = b[1];
    a.moveTo(e, f);
    for (var j = 0; 360 >= j; j++) f = j * Math.PI / 180, e = b[0] + c * Math.cos(f), f = b[1] - d * Math.sin(f), a.lineTo(e, f)
};

function initText(a, b, c, d, e) {
    this.config = $.extend({
        width: 200,
        height: 20,
        x: 0,
        y: 0,
        alpha: 1,
        textStr: null,
        lineH: 20,
        fontName: null,
        fontSize: 12,
        color: null,
        tbold: "false",
        italic: "false",
        bgalpha: 1,
        action: null,
        fillBg: "false",
        bgcolor: null,
        sh: "false",
        sx: 4,
        sy: 4,
        se: 2,
        sr: null
    }, b);
    this.pw = c;
    this.ph = d;
    this.originWidth = bookConfig.largePageWidth;
    this.originHeight = bookConfig.largePageHeight;
    null != this.config.color && (this.color = colorTo0x(this.config.color));
    this.father = a;
    this.width = this.config.width * this.originWidth;
    this.height =
        this.config.height * this.originHeight;
    this.x = this.config.x * this.pw;
    this.y = this.config.y * this.ph;
    this.id = "text" + e;
    this.pageH = this.config.pageH;
    b = new TextFormatAnalyzer(this.config.textStr);
    this.text = $("<div id=" + this.id + " style='overflow: hidden;position:absolute;left:" + this.x + "px; top:" + this.y + "px;height:" + this.height + "px;width:" + this.width + "px;opacity:" + this.config.bgalpha + "'></div>");
    this.fontSize = 0.75 * this.config.lineH * this.originHeight;
    this.text.append("<div style='word-break: break-word;font-family:" +
        this.config.fontName + ";font-size:" + this.fontSize + "px;color:" + this.color + ";'></div>");
    c = "";
    this.textLine = b.getLines();
    for (d = 0; d < this.textLine.length; d++) c = c + "<br>" + this.textLine[d] + "</br>";
    this.text.html(c);
    c = this.text.children("div:first");
    b.initFont(c);
    c.css({
        "margin-left": b.getLeftMargin() + "px",
        "margin-right": b.getRightMargin() + "px",
        "text-align": b.getAlign()
    });
    "false" != this.config.sh && this.text.css({
        "box-shadow": this.config.sx + "px " + this.config.sy + "px " + this.config.se + "px " + colorTo0x(this.config.sr),
        "-moz-box-shadow": this.config.sx + "px " + this.config.sy + "px " + this.config.se + "px " + colorTo0x(this.config.sr),
        "-webkit-box-shadow": this.config.sx + "px " + this.config.sy + "px " + this.config.se + "px " + colorTo0x(this.config.sr),
        "-o-box-shadow": this.config.sx + "px " + this.config.sy + "px " + this.config.se + "px " + colorTo0x(this.config.sr)
    });
    "false" == this.config.fillBg ? this.text.css({
        background: ""
    }) : null != this.config.bgcolor && this.text.css({
        background: colorTo0x(this.config.bgcolor)
    });
    "false" != this.config.tbold && c.css({
        "font-weight": "bold"
    });
    "false" != this.config.italic && c.css({
        "font-style": "italic"
    });
    this.father = a;
    this.initEvent();
    a.append(this.text);
    this.fontSize = 0.75 * this.config.lineH * this.originHeight;
    this.text.css("font-size", this.fontSize + "px");
    this.resizeText(this.pw, this.ph)
}
initText.prototype.initEvent = function() {
    var a = this;
    this.flag = 0;
    this.linkURL = this.audios = this.slide = this.form = null;
    if (null != a.config.action) {
        try {
            void 0 != this.config.action.length && (this.config.action = this.config.action[0]), this.linkURL = this.config.action.url
        } catch (b) {}
        var c;
        null != this.linkURL && "www" == this.linkURL.substr(0, 3).toLowerCase() && (this.linkURL = "http://" + this.linkURL);
        try {
            c = this.config.action.triggerEventType
        } catch (d) {
            c = null
        }
        this.text.bind(_event._down, function() {
            c == PageEditor.TriggerEventType.MouseDown &&
                actionEvent.call(a);
            browserType == 3 ? event.cancelBubble = true : event.stopPropagation()
        });
        this.text.bind("mouseover", function() {
            c == PageEditor.TriggerEventType.MouseOver && actionEvent.call(a);
            browserType == 3 ? event.cancelBubble = true : event.stopPropagation()
        });
        this.text.bind(isTouch ? _event._end : "mouseout", function() {
            c == PageEditor.TriggerEventType.MouseOut && actionEvent.call(a)
        })
    }
};
initText.prototype.onResize = function(a, b) {
    this.pw = a;
    this.ph = b;
    this.setPosition();
    if (null != this.form) this.form.onResize(bookContainer.width(), bookContainer.height());
    if (null != this.slide) this.slide.onResize(bookContainer.width(), bookContainer.height());
    if (null != this.audios) this.audios.onResize(bookContainer.width(), bookContainer.height());
    this.text.css("font-size", this.fontSize + "px");
    this.resizeText(this.pw, this.ph)
};
initText.prototype.resizeText = function(a, b) {
    var c = b / this.originHeight;
    this.text.css({
        "-webkit-transform-origin": "0% 0%",
        "-moz-transform-origin": "0% 0%",
        "-ms-transform-origin": "0% 0%",
        "-o-transform-origin": "0% 0%",
        "-webkit-transform": "scale(" + c + ")",
        "-moz-transform": "scale(" + c + ")",
        "-ms-transform": "scale(" + c + ")",
        "-o-transform": "scale(" + c + ")"
    })
};
initText.prototype.setPosition = function() {
    this.x = this.config.x * this.pw;
    this.y = this.config.y * this.ph;
    this.text.css({
        left: this.x + "px",
        top: this.y + "px"
    })
};

function TextFormatAnalyzer(a) {
    this.originalFormat = a;
    null != a && (this.analyzedText = a.toLowerCase().replaceAll('"', ""))
}
TextFormatAnalyzer.prototype = {
    getAlign: function() {
        return this.analyzedText.subBetween("align=", ">").trim()
    },
    getLeftMargin: function() {
        var a = this.analyzedText.subBetween("leftmargin=", " ").trim();
        return "" == a ? 0 : parseInt(a)
    },
    getRightMargin: function() {
        var a = this.analyzedText.subBetween("rightmargin=", " ").trim();
        return "" == a ? 0 : parseInt(a)
    },
    getFontFamily: function() {
        var a = this.analyzedText.subBetween("face=", " ").trim();
        "" == a && (a = "Arial");
        return a
    },
    getFontColor: function() {
        var a = this.analyzedText.subBetween("color=",
            " ").trim();
        "" == a && (a = "#000000");
        return a
    },
    getFontSize: function() {
        var a = this.analyzedText.subBetween("size=", " ").trim();
        "" == a && (a = "16");
        return a
    },
    getLetterSpace: function() {
        var a = this.analyzedText.subBetween("letterspacing=", " ").trim();
        "" == a && (a = "0");
        return a
    },
    initFont: function(a) {
        var b = this.getFontFamily(),
            c = this.getFontColor(),
            d = this.getFontSize(),
            e = this.getLetterSpace();
        a.css({
            "font-family": b,
            color: c,
            "font-size": d + "px",
            "letter-spacing": e + "px"
        })
    },
    getText: function() {
        for (var a = [], a = [], b = loadXMLString("<xml>" +
                this.originalFormat + "</xml>").getElementsByTagName("TEXTFORMAT"), c = 0; c < b.length; c++)
            if (null != b[c].getElementsByTagName("FONT")[0].firstChild) {
                var d = b[c].getElementsByTagName("FONT")[0].firstChild.nodeValue;
                b[c].getElementsByTagName("P");
                null == d && (d = b[c].getElementsByTagName("B")[0].firstChild.nodeValue);
                null == d && (d = b[c].getElementsByTagName("I")[0].firstChild.nodeValue);
                null == d && (d = b[c].getElementsByTagName("U")[0].firstChild.nodeValue);
                null != d && a.push(d)
            }
        b = "";
        for (c = 0; c < a.length; c++) b = b + "<br>" + a[c] +
            "</br>";
        return b
    },
    getTextLines: function() {
        for (var a = [], a = [], b = loadXMLString("<xml>" + this.originalFormat + "</xml>").getElementsByTagName("P"), c = 0; c < b.length; c++)
            if (null != b[c].getElementsByTagName("FONT")[0].firstChild) {
                var d = b[c].getElementsByTagName("FONT")[0].firstChild.nodeValue;
                null == d && (d = b[c].getElementsByTagName("B")[0].firstChild.nodeValue);
                null == d && (d = b[c].getElementsByTagName("I")[0].firstChild.nodeValue);
                null == d && (d = b[c].getElementsByTagName("U")[0].firstChild.nodeValue);
                null != d && a.push(d)
            }
        b =
            "";
        for (c = 0; c < a.length; c++) b = b + "<br>" + a[c] + "</br>";
        return b
    },
    getLines: function() {
        for (var a = [], a = [], b = loadXMLString("<xml>" + this.originalFormat + "</xml>").getElementsByTagName("TEXTFORMAT"), c = 0; c < b.length; c++)
            if (null != b[c].getElementsByTagName("FONT")[0].firstChild) {
                var d = b[c].getElementsByTagName("FONT")[0].firstChild.nodeValue;
                b[c].getElementsByTagName("P");
                null == d && (d = b[c].getElementsByTagName("B")[0].firstChild.nodeValue);
                null == d && (d = b[c].getElementsByTagName("I")[0].firstChild.nodeValue);
                null ==
                    d && (d = b[c].getElementsByTagName("U")[0].firstChild.nodeValue);
                null != d && a.push(d)
            }
        return a
    }
};

function initButton(a, b, c, d) {
    this.config = $.extend({
        width: 0.2,
        height: 0.2,
        x: 0.2,
        y: 0.2,
        alpha: 1,
        src: null
    }, b);
    this.pw = c;
    this.ph = d;
    this.width = c * this.config.width;
    this.height = d * this.config.height;
    this.button = null;
    var b = [],
        e = this,
        b = "button_watermark01.swf,button_watermark02.swf,button_watermark03.swf,button_watermark04.swf,button_watermark05.swf,button_watermark06.swf,button_watermark07.swf,button_watermark08.swf,button_watermark09.swf,button_glossy01.swf,button_glossy02.swf,button_glossy03.swf,button_glossy04.swf,button_glossy05.swf,button_glossy06.swf,button_glossy07.swf,button_glossy08.swf,button_glossy09.swf,button_glossy10.swf,button_glossy11.swf,button_glossy12.swf,button_glossy13.swf,button_glossy14.swf,button_glossy15.swf,button_glossy16.swf,button_glossy17.swf,button_push01.swf,button_push02.swf,button_push03.swf,button_push04.swf,button_push05.swf,button_push06.swf,button_lineLight01.swf,button_lineLight02.swf,button_lineLight03.swf,button_lineLight04.swf,button_lineLight05.swf,button_star01.swf,button_star02.swf,button_star03.swf,button_star04.swf,button_star05.swf,button_glitter01.swf,button_glitter02.swf,button_glitter03.swf,button_glitter04.swf,button_glitter05.swf,button_glitter06.swf,button_shadow01.swf,button_shadow02.swf,button_shadow03.swf,button_shadow04.swf,button_shadow05.swf,button_shadow06.swf,button_bottomLight01.swf,button_bottomLight02.swf,button_bottomLight03.swf,button_bottomLight04.swf,button_bottomLight05.swf,button_bottomLight06.swf,button_bottomLight07.swf,button_bottomLight08.swf,button_bottomLight09.swf,button_bottomLight10.swf,button_other01.swf,button_other02.swf,button_other03.swf".split(",");
    null == this.config.src || "null" == this.config.src ? this.button = $("<button type = 'button'></button>") : (!0 == isFlipPdf && (this.config.src = "." + this.config.src), c = this.config.src.substring(this.config.src.lastIndexOf("/") + 1, this.config.src.length), this.swfButton = 0 <= b.indexOf(c)) ? (this.config.Format.color = colorTo0x(this.config.Format.color), this.button = $("<div></div>"), this.buttonEvt = $("<div></div>"), isTouchDevice() ? (this.button.css({
            "-webkit-border-radius": "8px",
            "-moz-border-radius": "5px",
            "border-radius": "8px",
            "background-image": getBrowserPre() + "linear-gradient(top,rgba(185,185,185,1) 0%, rgba(122,122,122,1) 45%, rgba(80, 80, 80, 1) 46%, rgba(53,53,53,1) 100%)",
            "-webkit-box-shadow": "0 0 10px rgba(40, 0, 0, 0.7)",
            "-moz-box-shadow": "0 0 10px rgba(40, 0, 0, 0.7)",
            "box-shadow": "0 0 10px rgba(40, 0, 0, 0.7)"
        }), this.buttonEvt.css({
            "-webkit-border-radius": "8px",
            "-moz-border-radius": "5px",
            "border-radius": "8px",
            "background-color": "#333333",
            opacity: 0.2,
            display: "none",
            width: this.width + "px",
            height: this.height + "px"
        })) :
        (this.button.flash({
            swf: this.config.src,
            width: this.width + "px",
            height: this.height + "px",
            wmode: "transparent"
        }), this.buttonEvt.css({
            display: "none",
            width: this.width + "px",
            height: this.height + "px"
        })), this.buttonCaption = new label(this.config.buttonCaption, this.button), this.buttonCaption.setFont(1 * this.config.HRate * this.ph / 2, bookConfig.iconColor, this.config.Format.font), this.buttonCaption.setLabelPosition(this.buttonCaption.getWidth() > this.width ? 0 : (this.width - this.buttonCaption.getWidth()) / 2, this.config.captionY *
            this.height / 100), this.button.append(this.buttonEvt), this.button.bind(_event._down, function() {
            e.buttonEvt.css({
                display: "block"
            })
        }), this.button.bind(_event._end, function() {
            e.buttonEvt.css({
                display: "none"
            })
        }), this.button.bind("mouseleave", function() {
            e.buttonEvt.css({
                display: "none"
            })
        })) : ".swf" == this.config.src.substr(this.config.src.length - 4, 4) ? this.button = $("<div></div>") : (this.button = $("<img />"), this.button.attr({
        src: this.config.src
    }));
    this.button.css({
        position: "absolute",
        width: this.width + "px",
        height: this.height +
            "px",
        left: this.pw * this.config.x + "px",
        top: this.ph * this.config.y + "px",
        opacity: this.config.alpha
    });
    a.append(this.button);
    this.father = a;
    this.initEvt()
}
initButton.prototype.onResize = function(a, b) {
    this.pw = a;
    this.ph = b;
    this.width = this.config.width * a;
    this.height = this.config.height * b;
    this.button.css({
        width: this.width + "px",
        height: this.height + "px"
    });
    this.setPosition(this.config.x * a, this.config.y * b);
    if (null != this.form) this.form.onResize(bookContainer.width(), bookContainer.height());
    if (null != this.slide) this.slide.onResize(bookContainer.width(), bookContainer.height());
    if (null != this.audios) this.audios.onResize(bookContainer.width(), bookContainer.height());
    this.swfButton && (isTouchDevice() ? (this.buttonCaption.setFont(2 * this.config.HRate * this.height / 3, bookConfig.iconColor, this.config.Format.font), this.buttonCaption.setLabelPosition(this.buttonCaption.getWidth() > this.width ? 0 : (this.width - this.buttonCaption.getWidth()) / 2, this.config.captionY * this.height / 100), this.buttonEvt.css({
        width: this.width + "px",
        height: this.height + "px"
    })) : (this.hide(), this.show()))
};
initButton.prototype.hide = function() {
    isTouchDevice() || this.button.html("")
};
initButton.prototype.show = function() {
    var a = this;
    !isTouchDevice() && this.swfButton && (this.buttonEvt = $("<div></div>"), this.button.flash({
        swf: this.config.src,
        width: this.width + "px",
        height: this.height + "px",
        wmode: "transparent"
    }), this.buttonEvt.css({
        display: "none",
        width: this.width + "px",
        height: this.height + "px"
    }), this.buttonCaption = new label(this.config.buttonCaption, this.button), this.buttonCaption.setFont(1 * this.config.HRate * this.ph / 2, bookConfig.iconColor, this.config.Format.font), this.buttonCaption.setLabelPosition(this.buttonCaption.getWidth() >
        this.width ? 0 : (this.width - this.buttonCaption.getWidth()) / 2, this.config.captionY * this.height / 100), this.button.append(this.buttonEvt), this.button.bind(_event._down, function() {
        a.buttonEvt.css({
            display: "block"
        })
    }), this.button.bind(_event._end, function() {
        a.buttonEvt.css({
            display: "none"
        })
    }), this.button.bind("mouseleave", function() {
        a.buttonEvt.css({
            display: "none"
        })
    }))
};
initButton.prototype.setPosition = function(a, b) {
    this.button.css({
        left: a + "px",
        top: b + "px"
    })
};
initButton.prototype.initEvt = function() {
    this.audios = this.slide = this.form = null;
    if (void 0 != this.config.action) {
        var a = this;
        this.flag = 0;
        this.linkURL = null;
        try {
            void 0 != this.config.action.length && (this.config.action = this.config.action[0]), this.linkURL = this.config.action.url
        } catch (b) {}
        var c;
        null != this.linkURL && "www" == this.linkURL.substr(0, 3).toLowerCase() && (this.linkURL = "http://" + this.linkURL);
        try {
            c = this.config.action.triggerEventType
        } catch (d) {
            c = null
        }
        this.button.bind(_event._down, function() {
            c == PageEditor.TriggerEventType.MouseDown &&
                actionEvent.call(a);
            browserType == 3 ? event.cancelBubble = true : event.stopPropagation()
        });
        this.button.bind("mouseover", function() {
            c == PageEditor.TriggerEventType.MouseOver && actionEvent.call(a)
        });
        this.button.bind(isTouch ? _event._end : "mouseout", function() {
            c == PageEditor.TriggerEventType.MouseOut && actionEvent.call(a)
        })
    }
};

function initArea(a, b, c, d, e) {
    this.config = $.extend({
        width: 200,
        height: 20,
        x: 0,
        y: 0,
        alpha: 1,
        color: null,
        rounds: "false",
        ellipseWidth: 5,
        ellipseHeight: 5,
        action: null,
        sh: "false",
        sx: 4,
        sy: 4,
        se: 2,
        sr: null
    }, b);
    this.pw = c;
    this.ph = d;
    this.father = a;
    this.color = colorTo0x(this.config.color);
    this.width = this.config.width * this.pw;
    this.height = this.config.height * this.ph;
    this.x = this.config.x * this.pw;
    this.y = this.config.y * this.ph;
    this.id = "Area" + e;
    this.Area = "false" != this.config.sh ? $("<div id=" + this.id + " style='overflow: hidden;position:absolute;top:" +
        this.y + "px;left:" + this.x + "px;background:" + this.color + ";height:" + this.height + "px;width:" + this.width + "px;box-shadow:" + this.config.sx + "px " + this.config.sy + "px " + this.config.se + "px " + colorTo0x(this.config.sr) + ";opacity:" + this.config.alpha + "'></div>") : $("<div id=" + this.id + " style='overflow: hidden;position:absolute;top:" + this.y + "px;left:" + this.x + "px;background:" + this.color + ";height:" + this.height + "px;width:" + this.width + "px;opacity:" + this.config.alpha + "'></div>");
    "false" != this.config.rounds && this.Area.css({
        "border-radius": this.config.ellipseWidth +
            "px " + this.config.ellipseHeight + "px"
    });
    this.father = a;
    this.initEvent();
    a.append(this.Area)
}
initArea.prototype.initEvent = function() {
    var a = this;
    this.flag = 0;
    this.audios = this.slide = this.form = null;
    this.linkURL;
    if (null != a.config.action) {
        try {
            void 0 != this.config.action.length && (this.config.action = this.config.action[0]), this.linkURL = this.config.action.url
        } catch (b) {}
        var c;
        null != this.linkURL && "www" == this.linkURL.substr(0, 3).toLowerCase() && (this.linkURL = "http://" + this.linkURL);
        try {
            c = this.config.action.triggerEventType
        } catch (d) {
            c = null
        }
        this.Area.bind(_event._down, function() {
            c == PageEditor.TriggerEventType.MouseDown &&
                actionEvent.call(a);
            browserType == 3 ? event.cancelBubble = true : event.stopPropagation()
        });
        this.Area.bind("mouseover", function() {
            c == PageEditor.TriggerEventType.MouseOver && actionEvent.call(a)
        });
        this.Area.bind(isTouch ? _event._end : "mouseout", function() {
            c == PageEditor.TriggerEventType.MouseOut && actionEvent.call(a)
        })
    }
};
initArea.prototype.onResize = function(a, b) {
    this.pw = a;
    this.ph = b;
    this.width = this.config.width * this.pw;
    this.height = this.config.height * this.ph;
    this.Area.css({
        width: this.width + "px",
        height: this.height + "px"
    });
    this.setPosition();
    if (null != this.form) this.form.onResize(bookContainer.width(), bookContainer.height());
    if (null != this.slide) this.slide.onResize(bookContainer.width(), bookContainer.height());
    if (null != this.audios) this.audios.onResize(bookContainer.width(), bookContainer.height())
};
initArea.prototype.setPosition = function() {
    this.x = this.config.x * this.pw;
    this.y = this.config.y * this.ph;
    this.Area.css({
        left: this.x + "px",
        top: this.y + "px"
    })
};

function initVideoForm(a, b, c, d) {
    this.config = $.extend({
        width: 400,
        height: 300,
        src: null,
        alpha: 0.3,
        caption: "",
        closeIconURL: uiBaseURL + "close.png"
    }, b);
    this.father = a;
    null != this.config.src && (this.config.width = parseInt(this.config.width), this.config.height = parseInt(this.config.height), this.sw = c, this.sh = d, this.th = 28, this.background = new grayBackground(a, "#333333", this.config.alpha, c, d), this.form = $("<div></div>"), this.titleBar = $("<div></div>"), !0 == isFlipPdf && (this.config.src = "../" + this.config.src), "" != this.config.closeIconURL &&
        (this.closeButton = new button(1, this.titleBar, {
            iconURL: this.config.closeIconURL
        }, !0), this.closeButton.setButtonPosition(this.config.width - 28, 0)), "" != this.config.caption && (this.captionLabel = new label(this.config.caption, this.titleBar), this.captionLabel.setLabelPosition(5, 3, ["left", "top"]), this.captionLabel.setFont(14, "#dddddd", "Tahoma")), this.video = $("<video src='" + this.config.src + "' controls='controls'></video>"), this.form.css({
            width: this.config.width + 4 + "px",
            height: this.config.height + 4 + "px",
            left: (c -
                this.config.width) / 2 + "px",
            top: (d - this.config.height) / 2 + "px",
            "background-color": "#dddddd",
            "-webkit-border-radius": "5px",
            "-moz-border-radius": "5px",
            "-ms-border-radius": "5px",
            "border-radius": "5px",
            position: "absolute",
            "z-index": 201
        }), this.titleBar.css({
            width: this.config.width + "px",
            height: this.th + "px",
            left: "2px",
            top: "2px",
            "border-top-left-radius": "5px",
            "border-top-right-radius": "5px",
            position: "absolute",
            "background-color": "#111111"
        }), this.video.css({
            width: this.config.width + "px",
            height: this.config.height -
                this.th + "px",
            top: this.th + 2 + "px",
            left: "2px",
            position: "absolute"
        }), a.append(this.form), this.form.append(this.titleBar), this.form.append(this.video), this.initEvent())
}
initVideoForm.prototype.onResize = function(a, b) {
    this.sw = a;
    this.sh = b;
    this.background.onResize(a, b);
    this.setPosition()
};
initVideoForm.prototype.setPosition = function() {
    this.form.css({
        left: (this.sw - this.config.width) / 2 + "px",
        top: (this.sh - this.config.height) / 2 + "px"
    })
};
initVideoForm.prototype.initEvent = function() {
    var a = this;
    this.closeButton.onMouseUp(this, this.closeForm);
    var b = !1,
        c, d;
    this.titleBar.bind(_event._down, function(e) {
        e = isTouch ? e.originalEvent.touches : [e];
        b = !0;
        c = Point(e[0].pageX, e[0].pageY);
        d = Point(a.form.offset().left, a.form.offset().top);
        return !1
    });
    this.titleBar.bind(_event._move, function(e) {
        e = isTouch ? e.originalEvent.touches : [e];
        b && a.form.css({
            top: d.y + (e[0].pageY - c.y) + "px",
            left: d.x + (e[0].pageX - c.x) + "px"
        });
        return !1
    });
    this.titleBar.bind(_event._end, function() {
        return b = !1
    });
    this.titleBar.bind("mouseleave", function() {
        return b = !1
    })
};
initVideoForm.prototype.closeForm = function() {
    var a = this;
    this.form.animate({
        width: 20,
        height: 20,
        left: this.sw / 2 - 10,
        top: this.sh / 2 - 10
    }, 200, function() {
        a.background.hide();
        a.form.remove()
    })
};

function grayBackground(a, b, c, d, e) {
    this.sw = d;
    this.sh = e;
    this.background = $("<div ></div>");
    this.background.css({
        width: d + "px",
        height: e + "px",
        background: b,
        opacity: c,
        "z-index": 200,
        position: "absolute",
        left: "0px",
        top: "0px"
    });
    a.append(this.background)
}
grayBackground.prototype.onResize = function(a, b) {
    this.sw = a;
    this.sh = b;
    this.background.css({
        width: a + "px",
        height: b + "px"
    })
};
grayBackground.prototype.setPosition = function(a, b, c) {
    void 0 == c && (c = ["left", "top"]);
    this.background.css(c[0], a + "px");
    this.background.css(c[1], b + "px")
};
grayBackground.prototype.show = function() {
    this.father.append(this.background)
};
grayBackground.prototype.hide = function() {
    this.background.remove()
};
grayBackground.prototype.setZindex = function(a) {
    this.background.css({
        "z-index": a
    })
};
grayBackground.prototype.onMouseUp = function(a, b) {
    $(this.background).bind(_event._down, function() {
        b.call(a)
    })
};

function initSlideShow(a, b, c, d) {
    this.photos = $.extend([], b);
    if (0 == this.photos.length) {
        if (void 0 == this.photos.url) return;
        this.photos = [this.photos]
    }
    this.father = a;
    this.sw = c - 8;
    this.sh = d - 8;
    this.imgIndex = -1;
    this.imgWidth = 200;
    this.imgHeight = 300;
    this.boxWidth = 200;
    this.boxHeight = 300;
    this.loadingImageHeight = this.loadingImageWidth = 32;
    this.slideShowBG = new grayBackground(a, "#333333", 0.3, c, d);
    this.photoBox = $("<div></div>");
    this.leftBar = $("<div></div>");
    this.rightBar = $("<div></div>");
    this.img = $("<img style='position : absolute;' />");
    a.append(this.photoBox);
    a.append(this.leftBar);
    a.append(this.rightBar);
    this.leftButton = new button(1, this.leftBar, {
        iconURL: uiBaseURL + "previous_down.png"
    });
    this.rightButton = new button(1, this.rightBar, {
        iconURL: uiBaseURL + "next_down.png"
    });
    this.closeButton = new button(1, a, {
        iconURL: uiBaseURL + "close.png"
    }, !0);
    this.leftButton.setButtonPosition(0, 29, ["left", "top"]);
    this.rightButton.setButtonPosition(0, 29, ["right", "top"]);
    this.closeButton.setButtonPosition(this.sw - 45, 5);
    this.closeButton.setCSS({
        "z-index": 210
    });
    this.rightBar.css({
        "z-index": 202,
        width: "100px",
        height: "100px",
        right: "0px",
        top: (this.sh - 100) / 2 + "px",
        position: "absolute"
    });
    this.leftBar.css({
        "z-index": 203,
        width: "100px",
        height: "100px",
        left: "0px",
        top: (this.sh - 100) / 2 + "px",
        position: "absolute"
    });
    this.photoBox.css({
        width: this.boxWidth + "px",
        height: this.boxHeight + "px",
        left: (this.sw - this.boxWidth) / 2 + "px",
        top: (this.sh - this.boxHeight) / 2 + "px",
        position: "absolute",
        "background-color": "#eeeeee",
        "z-index": 201,
        "-webkit-box-shadow": "0 0 10px rgba(255, 255, 255, 0.7)",
        "-moz-box-shadow": "0 0 10px rgba(255, 255, 255, 0.7)",
        "-ms-box-shadow": "0 0 10px rgba(255, 255, 255, 0.7)",
        "box-shadow": "0 0 10px rgba(255, 255, 255, 0.7)"
    });
    this.loadingImage = $("<div><img src='" + uiBaseURL + "progress.gif' style='position:absolute;'/></div>");
    this.loadingImage.css({
        "z-index": -1,
        left: (this.boxWidth - this.loadingImageWidth) / 2 + "px",
        top: (this.boxHeight - this.loadingImageHeight) / 2 + "px"
    });
    this.loadingImage.css({
        width: this.loadingImageWidth + "px",
        height: this.loadingImageHeight + "px",
        position: "absolute"
    });
    this.photoBox.append(this.loadingImage);
    this.changeImage(0);
    var e = this;
    this.photoBox.bind(_event._down, function() {
        e.nextPage()
    });
    this.closeButton.onMouseUp(this, this.hide);
    this.slideShowBG.onMouseUp(this, this.hide);
    this.leftButton.onMouseDown(this, this.prePage);
    this.rightButton.onMouseDown(this, this.nextPage);
    this.leftButton.mouseEnterJump();
    this.rightButton.mouseEnterJump();
    void 0 != leftShortcutButton && null != leftShortcutButton && leftShortcutButton.setShow(!1);
    void 0 != rightShortcutButton && null != rightShortcutButton &&
        rightShortcutButton.setShow(!1)
}
initSlideShow.prototype.nextPage = function() {
    var a = this.imgIndex + 1;
    a >= this.photos.length && (a = 0);
    this.changeImage(a)
};
initSlideShow.prototype.prePage = function() {
    var a = this.imgIndex - 1;
    0 > a && (a = this.photos.length - 1);
    this.changeImage(a)
};
initSlideShow.prototype.onResize = function(a, b) {
    this.sw = a - 8;
    this.sh = b - 8;
    this.slideShowBG.onResize(a, b);
    this.setPosition()
};
initSlideShow.prototype.setPosition = function() {
    this.photoBox.css({
        left: (this.sw - this.boxWidth) / 2 + "px",
        top: (this.sh - this.boxHeight) / 2 + "px"
    });
    this.leftButton.setButtonPosition(0, 29, ["left", "top"]);
    this.rightButton.setButtonPosition(0, 29, ["right", "top"]);
    this.rightBar.css({
        right: "0px",
        top: (this.sh - 100) / 2 + "px",
        position: "absolute"
    });
    this.leftBar.css({
        left: "0px",
        top: (this.sh - 100) / 2 + "px",
        position: "absolute"
    });
    this.closeButton.setButtonPosition(this.sw - 45, 5)
};
initSlideShow.prototype.changeImage = function(a) {
    if (this.imgIndex != a) {
        this.imgIndex = a;
        this.img.remove();
        a = this.photos[a].url;
        !0 == isFlipPdf && (a = "." + a);
        var b = this;
        this.img.attr("src", a);
        this.img.load(function() {
            b.imgWidth = b.img[0].naturalWidth;
            b.imgHeight = b.img[0].naturalHeight;
            var a = b.imgWidth,
                d = b.imgHeight;
            if (b.imgWidth > b.sw || b.imgHeight > b.sh) a = b.imgWidth / b.imgHeight, a > b.sw / b.sh ? (a = b.sw, d = b.sw * b.imgHeight / b.imgWidth) : (d = b.sh, a *= b.sh);
            b.img.css({
                width: a + "px",
                height: d + "px"
            });
            b.boxWidth != a || b.boxHeight !=
                d ? (b.photoBox.animate({
                    width: a + 8,
                    height: d + 8,
                    left: (b.sw - a) / 2,
                    top: (b.sh - d) / 2
                }, 300, function() {
                    b.photoBox.append(b.img)
                }), b.loadingImage.css({
                    left: (a + 8 - b.loadingImageWidth) / 2,
                    top: (d + 8 - b.loadingImageHeight) / 2
                })) : b.photoBox.append(b.img);
            b.boxWidth = a;
            b.boxHeight = d;
            b.img.css({
                left: "4px",
                top: "4px"
            })
        })
    }
};
initSlideShow.prototype.setImagePosition = function() {};
initSlideShow.prototype.show = function() {};
initSlideShow.prototype.hide = function() {
    var a = this;
    this.photoBox.animate({
        width: 20,
        height: 20,
        top: this.sh / 2 - 10,
        left: this.sw / 2 - 10
    }, 200, function() {
        a.leftBar.remove();
        a.rightBar.remove();
        a.closeButton.remove();
        a.photoBox.remove();
        a.slideShowBG.hide()
    });
    void 0 != leftShortcutButton && null != leftShortcutButton && leftShortcutButton.setShow(!0);
    void 0 != rightShortcutButton && null != rightShortcutButton && rightShortcutButton.setShow(!0)
};

function initCallout(a, b, c, d, e) {
    this.config = $.extend({
        width: 200,
        height: 20,
        x: 0,
        y: 0,
        alpha: 1,
        textStr: null,
        pageH: 812,
        lineH: 20,
        fontName: null,
        fontSize: 12,
        color: null,
        tbold: "false",
        italic: "false",
        bgalpha: 1,
        action: null,
        fillBg: "false",
        bgcolor: null,
        direct: "Down",
        cx1: 0,
        cy1: 0,
        cx2: 0,
        cy2: 0,
        pointx: 0,
        pointy: 0,
        cornerRadiut: 5,
        borderWidth: 3,
        borderColor: null,
        bordreAlpha: 1,
        sh: "false",
        sx: 4,
        sy: 4,
        se: 2,
        sr: null
    }, b);
    this.pw = c;
    this.ph = d;
    this.father = a;
    this.originWidth = bookConfig.largePageWidth;
    this.originHeight = bookConfig.largePageHeight;
    this.width = this.config.width * bookConfig.largePageWidth;
    this.height = this.config.height * bookConfig.largePageHeight;
    this.x = this.config.x * c;
    this.y = this.config.y * d;
    this.cx1 = this.config.cx1 * this.width;
    this.cy1 = this.config.cy1 * this.height;
    this.cx2 = this.config.cx2 * this.width;
    this.cy2 = this.config.cy2 * this.height;
    this.pointx = this.config.pointx * this.width;
    this.pointy = this.config.pointy * this.height;
    this.fontSize = 0.75 * this.config.lineH * this.originHeight;
    this.id = "callout" + e;
    this.cl = this.ct = this.hl = this.wl = this.canl =
        this.cant = this.canh = this.canw = 0;
    b = new TextFormatAnalyzer(this.config.textStr);
    this.text = b.getLines();
    null == this.config.fontName && (this.config.fontName = b.getFontFamily().split(",")[0], this.config.fontSize = b.getFontSize(), this.config.color = b.getFontColor(), this.color = colorTo0x(this.config.color));
    switch (this.config.direct) {
        case "Down":
            if (0 > this.pointx) {
                this.canw = this.width - this.pointx + 20;
                this.canh = this.pointy + 20;
                this.cant = this.y - 10;
                this.canl = this.x - (this.canw - this.width - 10);
                break
            }
            this.canw = this.pointx >
                this.width ? this.pointx + 20 : this.width + 20;
            this.canh = this.pointy + 20;
            this.cant = this.y - 10;
            this.canl = this.x - 10;
            break;
        case "left":
            if (0 > this.pointy) {
                this.canw = this.width - this.pointx + 20;
                this.canh = this.height - this.pointy + 20;
                this.cant = this.y - (this.canh - this.height - 10);
                this.canl = this.x - (this.canw - this.width - 10);
                break
            }
            this.pointy > this.height ? (this.canw = this.width - this.pointx + 20, this.canh = this.pointy + 20) : (this.canw = this.width - this.pointx + 20, this.canh = this.height + 20);
            this.cant = this.y - 10;
            this.canl = this.x - (this.canw -
                this.width - 10);
            break;
        case "Up":
            if (0 > this.pointx) {
                this.canw = this.width - this.pointx + 20;
                this.canh = this.height - this.pointy + 20;
                this.cant = this.y - (this.canh - this.height - 10);
                this.canl = this.x - (this.canw - this.width - 10);
                break
            }
            this.canw = this.pointx > this.width ? this.pointx + 20 : this.width + 20;
            this.canh = this.height - this.pointy + 20;
            this.cant = this.y - (this.canh - this.height - 10);
            this.canl = this.x - 10;
            break;
        case "Right":
            if (0 > this.pointy) {
                this.canw = this.pointx + 20;
                this.canh = this.height - this.pointy + 20;
                this.cant = this.y - (this.canh -
                    this.height - 10);
                this.canl = this.x - 10;
                break
            }
            this.pointy > this.height ? (this.canw = this.pointx + 20, this.canh = this.pointy + 20) : (this.canw = this.pointx + 20, this.canh = this.height + 20);
            this.cant = this.y - 10;
            this.canl = this.x - 10
    }
    this.wl = this.canw / this.pw;
    this.hl = this.canh / this.ph;
    this.ct = this.cant / this.ph;
    this.cl = this.canl / this.pw;
    this.callout = $("<canvas id=" + this.id + " width=" + this.canw + " height=" + this.canh + " style='position: absolute;top:" + this.cant + "px;left:" + this.canl + "px'></canvas>");
    a.append(this.callout);
    this.calloutDown();
    this.resizeCallout(d);
    this.father = a;
    this.initEvent()
}
initCallout.prototype.resizeCallout = function(a) {
    a /= bookConfig.largePageHeight;
    this.callout.css({
        "-webkit-transform-origin": "0% 0%",
        "-moz-transform-origin": "0% 0%",
        "-ms-transform-origin": "0% 0%",
        "-o-transform-origin": "0% 0%",
        "-webkit-transform": "scale(" + a + ")",
        "-moz-transform": "scale(" + a + ")",
        "-ms-transform": "scale(" + a + ")",
        "-o-transform": "scale(" + a + ")"
    })
};
initCallout.prototype.calloutDown = function() {
    var a = [],
        b = [],
        c, d, e = this.callout[0].getContext("2d"),
        f, j, g, k, m, n, l, p, q, u, z, s, A, v, r, t, x, J, B, C, K, w, H, D, h, G, L, M;
    switch (this.config.direct) {
        case "Down":
            if (0 > this.pointx) {
                f = this.canw - this.width - 10;
                j = 20;
                g = this.canw - this.width - 10;
                k = 10;
                c = this.canw - this.width;
                d = 10;
                m = this.canw - 20;
                n = 10;
                l = this.canw - 10;
                p = 10;
                q = this.canw - 10;
                u = 20;
                z = this.canw - 10;
                s = this.height;
                A = this.canw - 10;
                v = this.height + 10;
                r = this.canw - 20;
                t = this.height + 10;
                x = this.canw - (this.width - this.cx2) - 10;
                J = this.height +
                    10;
                B = 10;
                C = this.pointy + 10;
                K = this.canw - (this.width - this.cx1) - 10;
                w = this.height + 10;
                H = this.canw - this.width;
                D = this.height + 10;
                h = this.canw - (this.width + 10);
                G = this.height + 10;
                L = this.canw - (this.width + 10);
                M = this.height;
                break
            }
            f = 10;
            j = 20;
            k = g = 10;
            c = 20;
            d = 10;
            m = this.width;
            n = 10;
            l = this.width + 10;
            p = 10;
            q = this.width + 10;
            u = 20;
            z = this.width + 10;
            s = this.height;
            A = this.width + 10;
            v = this.height + 10;
            r = this.width;
            t = this.height + 10;
            x = this.cx2 + 10;
            J = this.height + 10;
            B = this.pointx + 10;
            C = this.pointy + 10;
            K = this.cx1 + 10;
            w = this.height + 10;
            H = 20;
            D = this.height +
                10;
            h = 10;
            G = 10 + this.height;
            L = 10;
            M = this.height;
            break;
        case "left":
            if (0 > this.pointy) {
                f = this.canw - this.width - 10;
                j = this.canh - this.height;
                g = this.canw - this.width - 10;
                k = this.canh - this.height - 10;
                c = this.canw - this.width;
                d = this.canh - this.height - 10;
                m = this.canw - 20;
                n = this.canh - this.height - 10;
                l = this.canw - 10;
                p = this.canh - this.height - 10;
                q = this.canw - 10;
                u = this.canh - this.height;
                z = this.canw - 10;
                s = this.canh - 20;
                A = this.canw - 10;
                v = this.canh - 10;
                r = this.canw - 20;
                t = this.canh - 10;
                x = this.canw - this.width - 10;
                J = this.canh - 20;
                B = this.canw - this.width -
                    10;
                C = this.canh - 10;
                K = this.canw - this.width;
                w = this.canh - 10;
                H = this.canw - this.width - 10;
                D = this.canh - (this.height - this.cy2 + 10);
                G = h = 10;
                L = this.canw - this.width - 10;
                M = this.canh - (this.height - this.cy1 + 10);
                break
            }
            g = this.canw - this.width - 10;
            k = 10;
            l = this.canw - 10;
            p = 10;
            A = this.canw - 10;
            v = this.height + 10;
            B = this.canw - this.width - 10;
            C = this.height + 10;
            H = this.canw - this.width - 10;
            D = this.cy2 + 10;
            h = 10;
            G = this.canh - 10;
            L = this.canw - this.width - 10;
            M = this.cy1 + 10;
            f = g;
            j = k + 10;
            c = g + 10;
            d = k;
            m = l - 10;
            n = p;
            q = l;
            u = p + 10;
            z = A;
            s = v - 10;
            r = A - 10;
            t = v;
            x = B + 10;
            J = C;
            K =
                B;
            w = C - 10;
            break;
        case "Up":
            if (0 > this.pointx) {
                g = this.canw - this.width - 10;
                k = this.canh - this.height - 10;
                m = this.canw - (this.width - this.cx2) - 10;
                n = this.canh - this.height - 10;
                p = l = 10;
                q = this.canw - (this.width - this.cx1) - 10;
                u = this.canh - this.height - 10;
                A = this.canw - 10;
                v = this.canh - this.height - 10;
                B = this.canw - 10;
                C = this.canh - 10;
                h = this.canw - this.width - 10;
                G = this.canh - 10;
                f = g;
                j = k + 10;
                c = g + 10;
                d = k;
                z = A - 10;
                s = v;
                r = A;
                t = v + 10;
                x = B;
                J = C - 10;
                K = B - 10;
                w = C;
                H = h + 10;
                D = G;
                L = h;
                M = G - 10;
                break
            }
            g = 10;
            k = this.canh - this.height - 10;
            m = this.cx2 + 10;
            n = this.canh - this.height -
                10;
            l = this.pointx + 10;
            p = 10;
            q = this.cx1 + 10;
            u = this.canh - this.height - 10;
            A = this.width + 10;
            v = this.canh - this.height - 10;
            B = this.width + 10;
            C = this.canh - 10;
            h = 10;
            G = this.canh - 10;
            f = g;
            j = k + 10;
            c = g + 10;
            d = k;
            z = A - 10;
            s = v;
            r = A;
            t = v + 10;
            x = B;
            J = C - 10;
            K = B - 10;
            w = C;
            H = h + 10;
            D = G;
            L = h;
            M = G - 10;
            break;
        case "Right":
            if (0 > this.pointy) {
                l = this.width + 10;
                p = this.canh - this.height - 10;
                z = this.width + 10;
                s = this.canh - (this.height - this.cy2 + 10);
                A = this.canw - 10;
                v = 10;
                r = this.width + 10;
                t = this.canh - (this.height - this.cy1 + 10);
                B = this.width + 10;
                C = this.canh - 10;
                h = 10;
                G = this.canh -
                    10;
                f = g;
                j = k + 10;
                c = g + 10;
                d = k;
                m = l - 10;
                n = p;
                q = l;
                u = p + 10;
                x = B;
                J = C - 10;
                K = B - 10;
                w = C;
                H = h + 10;
                D = G;
                L = h;
                M = G - 10;
                break
            }
            l = this.width + 10;
            p = 10;
            z = this.width + 10;
            s = this.cy2 + 10;
            A = this.canw - 10;
            v = this.canh - 10;
            r = this.width + 10;
            t = this.cy1 + 10;
            B = this.width + 10;
            C = this.height + 10;
            h = 10;
            G = this.height + 10;
            f = g;
            j = k + 10;
            c = g + 10;
            d = k;
            m = l - 10;
            n = p;
            q = l;
            u = p + 10;
            x = B;
            J = C - 10;
            K = B - 10;
            w = C;
            H = h + 10;
            D = G;
            L = h;
            M = G - 10
    }
    switch (this.config.direct) {
        case "Down":
            e.beginPath();
            e.lineWidth = "0";
            e.globalAlpha = this.config.bgalpha;
            e.strokeStyle = this.color;
            e.fillStyle = colorTo0x(this.config.bgcolor);
            e.moveTo(f, j);
            e.quadraticCurveTo(g, k, c, d);
            e.lineTo(m, n);
            e.quadraticCurveTo(l, p, q, u);
            e.lineTo(z, s);
            e.quadraticCurveTo(A, v, r, t);
            e.lineTo(x, J);
            e.lineTo(B, C);
            e.lineTo(K, w);
            e.lineTo(H, D);
            e.quadraticCurveTo(h, G, L, M);
            break;
        case "left":
            e.beginPath();
            e.lineWidth = "0";
            e.globalAlpha = this.config.bgalpha;
            e.strokeStyle = this.color;
            e.fillStyle = colorTo0x(this.config.bgcolor);
            e.moveTo(f, j);
            e.quadraticCurveTo(g, k, c, d);
            e.lineTo(m, n);
            e.quadraticCurveTo(l, p, q, u);
            e.lineTo(z, s);
            e.quadraticCurveTo(A, v, r, t);
            e.lineTo(x, J);
            e.quadraticCurveTo(B,
                C, K, w);
            e.lineTo(H, D);
            e.lineTo(h, G);
            e.lineTo(L, M);
            break;
        case "Up":
            e.beginPath();
            e.lineWidth = "0";
            e.globalAlpha = this.config.bgalpha;
            e.strokeStyle = this.color;
            e.fillStyle = colorTo0x(this.config.bgcolor);
            e.moveTo(f, j);
            e.quadraticCurveTo(g, k, c, d);
            e.lineTo(m, n);
            e.lineTo(l, p);
            e.lineTo(q, u);
            e.lineTo(z, s);
            e.quadraticCurveTo(A, v, r, t);
            e.lineTo(x, J);
            e.quadraticCurveTo(B, C, K, w);
            e.lineTo(H, D);
            e.quadraticCurveTo(h, G, L, M);
            break;
        case "Right":
            e.beginPath(), e.lineWidth = "0", e.globalAlpha = this.config.bgalpha, e.strokeStyle =
                this.color, e.fillStyle = colorTo0x(this.config.bgcolor), e.moveTo(f, j), e.quadraticCurveTo(g, k, c, d), e.lineTo(m, n), e.quadraticCurveTo(l, p, q, u), e.lineTo(z, s), e.lineTo(A, v), e.lineTo(r, t), e.lineTo(x, J), e.quadraticCurveTo(B, C, K, w), e.lineTo(H, D), e.quadraticCurveTo(h, G, L, M)
    }
    e.strokeStyle = colorTo0x(this.config.borderColor);
    e.lineWidth = 5;
    e.closePath();
    e.fill();
    "false" != this.config.sh && (e.shadowOffsetX = this.config.sx, e.shadowOffsetY = this.config.sy, e.shadowBlur = this.config.se, e.shadowColor = colorTo0x(this.config.sr),
        e.strokeStyle = colorTo0x(this.config.borderColor));
    e.stroke();
    e.fill();
    e.shadowOffsetX = 0;
    e.shadowOffsetY = 0;
    e.shadowBlur = 100;
    e.shadowColor = 0;
    e.fillStyle = "#000000";
    e.font = this.fontSize + "px " + this.config.fontName;
    for (k = g = 0; k < this.text.length; k++)
        if (b = [], a = this.text[k], e.measureText(a).width <= this.width - 3.5) e.fillText(a, f + 5, j + (k + g) * (this.fontSize + this.fontSize / 2) + 2 * this.fontSize / 3);
        else {
            a = a.split(" ");
            d = a[0];
            for (m = 0; m < a.length; m++) m == a.length - 1 ? b.push(d) : (c = d + " " + a[m + 1], e.measureText(c).width <= this.width -
                3.5 ? d = c : (b.push(d), d = a[m + 1]));
            for (a = 0; a < b.length; a++) e.fillText(b[a], f + 5, j + (k + g + a) * (this.fontSize + this.fontSize / 2) + 2 * this.fontSize / 3);
            g += b.length - 1
        }
    e.globalCompositeOperation = "source-atop";
    e.strokeStyle = colorTo0x(this.config.borderColor);
    e.shadowColor = colorTo0x(this.config.borderColor);
    e.shadowBlur = 50;
    e.shadowOffsetX = 0;
    e.shadowOffsetY = 0;
    e.stroke()
};
initCallout.prototype.initEvent = function() {
    var a = this;
    this.flag = 0;
    this.linkURL = this.form = this.form = null;
    if (null != a.config.action) {
        try {
            void 0 != this.config.action.length && (this.config.action = this.config.action[0]), this.linkURL = this.config.action.url
        } catch (b) {}
        var c;
        null != this.linkURL && "www" == this.linkURL.substr(0, 3).toLowerCase() && (this.linkURL = "http://" + this.linkURL);
        try {
            c = this.config.action.triggerEventType
        } catch (d) {
            c = null
        }
        this.callout.bind(_event._down, function() {
            c == PageEditor.TriggerEventType.MouseDown &&
                actionEvent.call(a);
            browserType == 3 ? event.cancelBubble = true : event.stopPropagation()
        });
        this.callout.bind("mouseover", function() {
            c == PageEditor.TriggerEventType.MouseOver && actionEvent.call(a)
        });
        this.callout.bind(isTouch ? _event._end : "mouseout", function() {
            c == PageEditor.TriggerEventType.MouseOut && actionEvent.call(a)
        })
    }
};
initCallout.prototype.onResize = function(a, b) {
    this.pw = a;
    this.ph = b;
    this.width = this.wl * bookConfig.largePageWidth;
    this.height = this.hl * bookConfig.largePageHeight;
    this.setPosition();
    this.resizeCallout(b);
    if (null != this.form) this.form.onResize(bookContainer.width(), bookContainer.height());
    if (null != this.slide) this.slide.onResize(bookContainer.width(), bookContainer.height());
    if (null != this.audios) this.audios.onResize(bookContainer.width(), bookContainer.height())
};
initCallout.prototype.setPosition = function() {
    this.x = this.cl * this.pw;
    this.y = this.ct * this.ph;
    this.callout.css({
        left: this.x + "px",
        top: this.y + "px"
    })
};

function initAText(a, b, c, d, e) {
    this.config = $.extend({
        width: 200,
        height: 20,
        x: 0,
        y: 0,
        alpha: 1,
        textStr: null,
        fontName: null,
        fontSize: 12,
        color: null,
        tbold: "false",
        italic: "false",
        align: "left",
        action: null,
        repeat: "false",
        moveSpeed: 1,
        sh: "false",
        sx: 4,
        sy: 4,
        se: 2,
        sr: null
    }, b);
    this.pw = c;
    this.ph = d;
    this.originWidth = bookConfig.largePageWidth;
    this.originHeight = bookConfig.largePageHeight;
    this.father = a;
    this.speed = 12E3 * (1 / this.config.moveSpeed);
    this.width = this.config.width * this.originWidth;
    this.height = this.config.height * this.originHeight;
    this.x = this.config.x * this.pw;
    this.y = this.config.y * this.ph;
    this.id = "text" + e;
    this.scrollid = "scroll" + this.id;
    b = new TextFormatAnalyzer(this.config.textStr);
    this.text = b.getTextLines();
    null == this.config.fontName && (this.config.fontName = b.getFontFamily().split(",")[0], this.config.fontSize = b.getFontSize(), this.config.align = b.getAlign(), this.config.color = b.getFontColor(), this.color = colorTo0x(this.config.color));
    this.atext = $("<div id=" + this.id + " style='overflow: hidden;position:absolute;left:" + this.x + "px; top:" +
        this.y + "px;height:" + this.height + "px;width:" + this.width + "px;opacity:" + this.config.alpha + "'></div>");
    "false" != this.config.sh && this.atext.css({
        "box-shadow": this.config.sx + "px " + this.config.sy + "px " + this.config.se + "px " + colorTo0x(this.config.sr),
        "-moz-box-shadow": this.config.sx + "px " + this.config.sy + "px " + this.config.se + "px " + colorTo0x(this.config.sr),
        "-webkit-box-shadow": this.config.sx + "px " + this.config.sy + "px " + this.config.se + "px " + colorTo0x(this.config.sr),
        "-o-box-shadow": this.config.sx + "px " + this.config.sy +
            "px " + this.config.se + "px " + colorTo0x(this.config.sr)
    });
    this.atext2 = $("<div id=" + this.scrollid + " style='word-break: break-word;font-family:" + this.config.fontName + ";width:100%;font-size:" + this.config.fontSize + "px;color:" + this.color + ";text-align:" + this.config.align + ";'>" + this.text + "</div>");
    "false" != this.config.tbold && this.atext2.css({
        "font-weight": "bold"
    });
    "false" != this.config.italic && this.atext2.css({
        "font-style": "italic"
    });
    this.father = a;
    this.initEvent();
    a.append(this.atext);
    this.atext.append(this.atext2);
    this.initScroll();
    this.onResize(c, d)
}
initAText.prototype.initScroll = function() {
    this._wrap = this.atext2;
    this.initScrollText()
};
initAText.prototype.initScrollText = function() {
    var a = this,
        b = a._wrap,
        c = b.height();
    b.animate({
        marginTop: -c + "px"
    }, a.speed, function() {
        "true" == a.config.repeat ? (b.css("marginTop", a.height), a.initScrollText()) : b.css("marginTop", 0)
    })
};
initAText.prototype.initEvent = function() {
    var a = this;
    this.flag = 0;
    this.linkURL;
    if (null != a.config.action) {
        try {
            void 0 != this.config.action.length && (this.config.action = this.config.action[0]), this.linkURL = this.config.action.url
        } catch (b) {}
        var c;
        null != this.linkURL && "www" == this.linkURL.substr(0, 3).toLowerCase() && (this.linkURL = "http://" + this.linkURL);
        try {
            c = this.config.action.triggerEventType
        } catch (d) {
            c = null
        }
        this.atext.bind(_event._down, function() {
            c == PageEditor.TriggerEventType.MouseDown && actionEvent.call(a);
            browserType == 3 ? event.cancelBubble = true : event.stopPropagation()
        });
        this.atext.bind(_event._move, function() {
            c == PageEditor.TriggerEventType.MouseOver && actionEvent.call(a)
        });
        this.atext.bind(_event._end, function() {
            c == PageEditor.TriggerEventType.MouseOut && actionEvent.call(a)
        })
    }
};
initAText.prototype.onResize = function(a, b) {
    this.pw = a;
    this.ph = b;
    this.setPosition();
    if (null != this.form) this.form.onResize(bookContainer.width(), bookContainer.height());
    if (null != this.slide) this.slide.onResize(bookContainer.width(), bookContainer.height());
    if (null != this.audios) this.audios.onResize(bookContainer.width(), bookContainer.height());
    this.fontSize = 0.75 * this.config.lineH * this.originHeight;
    this.atext.css("font-size", this.fontSize + "px");
    this.atext2.css("font-size", this.fontSize + "px");
    this.resizeText(a)
};
initAText.prototype.resizeText = function(a) {
    a /= this.originWidth;
    this.atext.css({
        "-webkit-transform-origin": "0% 0%",
        "-moz-transform-origin": "0% 0%",
        "-ms-transform-origin": "0% 0%",
        "-o-transform-origin": "0% 0%",
        "-webkit-transform": "scale(" + a + ")",
        "-moz-transform": "scale(" + a + ")",
        "-ms-transform": "scale(" + a + ")",
        "-o-transform": "scale(" + a + ")"
    })
};
initAText.prototype.setPosition = function() {
    this.x = this.config.x * this.pw;
    this.y = this.config.y * this.ph;
    this.atext.css({
        left: this.x + "px",
        top: this.y + "px"
    })
};

function initFlashShow(a, b, c, d) {
    this.pw = c;
    this.ph = d;
    this.config = $.extend({
        width: 0.2,
        height: 0.2,
        x: 0.2,
        y: 0.2,
        photo: null,
        repeatPlay: !0,
        customSize: !1
    }, b);
    null != this.config.photo && (this.showingA = !0, this.showingIndex = 1, this.background = $("<div></div>"), this.totalImage = this.config.photo.Image.length, this.moveTo = 1, this.width = this.pw * this.config.width, this.height = this.ph * this.config.height, this.background.css({
        width: this.width + "px",
        height: this.height + "px",
        left: this.config.x * this.pw + "px",
        top: this.config.y * this.ph +
            "px",
        position: "absolute",
        overflow: "hidden"
    }), this.photoA = new animateImage(this.background, this.config.photo, this.width, this.height, this.config.repeatPlay, this.config.customSize, this.config.photo.width, this.config.photo.width), this.photoB = new animateImage(this.background, this.config.photo, this.width, this.height, this.config.repeatPlay, this.config.customSize, this.config.photo.width, this.config.photo.width), a.append(this.background), this.photoB.fillImage(2), this.photoA.fillImage(1), this.initChangeImageEvent(!0))
}
initFlashShow.prototype = {
    onResize: function(a, b) {
        this.pw = a;
        this.ph = b;
        this.width = this.pw * this.config.width;
        this.height = this.ph * this.config.height;
        this.background.css({
            width: this.width + "px",
            height: this.height + "px"
        });
        this.photoA.onResize(a, b);
        this.photoB.onResize(a, b);
        this.setPosition()
    },
    setPosition: function() {
        this.background.css({
            left: this.pw * this.config.x + "px",
            top: this.ph * this.config.y + "px"
        })
    },
    initChangeImageEvent: function(a) {
        var b = this,
            c = this.photoA.getImage(),
            d = this.photoB.getImage(),
            e, f;
        a || (c = this.photoB.getImage(),
            d = this.photoA.getImage());
        switch (this.moveTo) {
            case 1:
                e = f = 1;
                break;
            case 2:
                e = f = -1;
                break;
            case 3:
                f = 1;
                e = -1;
                break;
            case 4:
                f = -1, e = 1
        }
        this.moveTo = 4 == this.moveTo ? 1 : this.moveTo + 1;
        var j = c.position().left + 66 * f,
            g = c.position().top + 66 * e,
            k = c.position().left + 77 * f,
            m = c.position().top + 77 * e;
        c.animate({
            left: j,
            top: g
        }, {
            queue: !1,
            duration: 3E3,
            complete: function() {
                b.showingIndex++;
                if (!(b.showingInde > b.totalImage) || b.config.repeatPlay) {
                    if (b.showingIndex > b.totalImage) b.showingIndex = 0;
                    c.animate({
                        opacity: 0,
                        left: k,
                        top: m
                    }, 500, function() {
                        a ?
                            b.photoA.fillImage(b.showingIndex + 1) : b.photoB.fillImage(b.showingIndex + 1);
                        c.css({
                            "z-index": 0
                        });
                        d.css({
                            "z-index": 1
                        })
                    });
                    b.initChangeImageEvent(!a)
                }
            }
        }).animate({
            opacity: 1
        }, 500)
    }
};

function animateImage(a, b, c, d, e, f, j, g) {
    this.img = $("<img />");
    this.imgIndex = -1;
    this.imageArr = b;
    this.bw = c;
    this.bh = d;
    this.repeat = e;
    a.append(this.img);
    this.img.css({
        position: "absolute"
    });
    f && void 0 != j && void 0 != g && this.img.css({
        width: j + "px",
        height: g + "px"
    })
}
animateImage.prototype.fillImage = function(a) {
    if (this.imgIndex == a) this.img.css({
        left: (this.bw - this.img[0].width) / 2 + "px",
        top: (this.bh - this.img[0].height) / 2 + "px"
    });
    else if (!(a > this.imageArr.Image.length) || this.repeat) {
        a > this.imageArr.Image.length && (a = 1);
        this.imgIndex == a;
        var b = this;
        this.img.attr("src", b.getImageDiv(a));
        this.img.load(function() {
            b.img.css({
                left: (b.bw - this.width) / 2 + "px",
                top: (b.bh - this.height) / 2 + "px"
            })
        })
    }
};
animateImage.prototype.getImageDiv = function(a) {
    return this.imageArr.Image[a - 1].photo
};
animateImage.prototype.setZIndex = function(a) {
    this.img.css("z-index", a)
};
animateImage.prototype.onResize = function(a, b) {
    this.bw = a;
    this.bh = b;
    this.img.css({
        left: (this.bw - this.img[0].width) / 2 + "px",
        top: (this.bh - this.img[0].height) / 2 + "px"
    })
};
animateImage.prototype.setPosition = function(a, b) {
    this.img.css({
        left: a + "px",
        top: b + "px"
    })
};
animateImage.prototype.animate = function() {};
animateImage.prototype.getImage = function() {
    return this.img
};

function initSound(a, b, c, d, e) {
    this.config = $.extend({
        width: 80,
        height: 30,
        x: 20,
        y: 20,
        src: null,
        alpha: 1,
        soundPlay: null,
        skinType: null
    }, b);
    this.sound = null;
    null != this.config.src && (this.arr = null, this.arr = "undefined" != typeof this.config.src.path ? this.config.src.path : this.config.src[0].path, this.pw = c, this.ph = d, this.width = this.config.width * this.pw, this.height = this.config.height * this.ph, this.x = this.config.x * this.pw, this.y = this.config.y * this.ph, this.h1 = this.height / 6, this.h2 = this.height / 3, this.c = this.nflay = this.flay =
        0, this.st = null, this.id = "AdvancedSound" + e, this.sounddiv = $("<div style='position:absolute; width:" + this.width + "px;height:" + this.height + "px;top:" + this.y + "px;left:" + this.x + "px;background:url(style/icon/audio.png);background-size:" + this.width + "px " + this.height + "px;background-repeat:no-repeat;'></div>"), this.sound = $("<audio id='" + this.id + "' src='" + this.arr + "'></audio>"), this.preimg = $("<img src='style/icon/Pre_down.png' style='position:absolute; left:10px;bottom:5px;cursor:pointer;' />"), this.playimg = $("<img src='style/icon/Play_down.png' style='position:absolute; left:50px;bottom:5px;cursor:pointer;'/>"),
        this.nextimg = $("<img src='style/icon/Nextpage_down.png' style='position:absolute; left:90px;bottom:5px;cursor:pointer;' />"), this.soundname = $("<div style='position:absolute; right:10px;top:" + this.h2 + "px;color:#389ac2;font-size:10px;'></div>"), this.soundtime = $("<div style='position:absolute; right:10px;top:" + this.h1 + "px;color:#389ac2;font-size:10px;'></div>"), a.append(this.sounddiv), this.sounddiv.append(this.sound), this.sounddiv.append(this.preimg), this.sounddiv.append(this.playimg), this.sounddiv.append(this.nextimg),
        this.sounddiv.append(this.soundname), this.sounddiv.append(this.soundtime), null != this.config.src && this.initEvent())
}
initSound.prototype.initEvent = function() {
    var a = this;
    a.nflay = 0;
    var b = a.playimg[0],
        c = a.sound[0],
        d = a.config.src[0].path,
        e = typeof a.config.src.path;
    "undefined" != e ? a.soundname.html(this.getname(a.config.src.path)) : a.soundname.html(this.getname(d));
    a.soundtime.html("00:00 / 00:00");
    this.playimg.bind(_event._down, function() {
        0 == a.flay ? (b.src = "style/icon/Pause_down.png", c.play(), a.flay = 1, a.gettime(c.duration)) : (b.src = "style/icon/Play_down.png", c.pause(), a.flay = 0, clearTimeout(a.st))
    });
    this.preimg.bind(_event._down,
        function() {
            c.pause();
            clearTimeout(a.st);
            "undefined" != e ? c.src = a.config.src.path : 0 < a.nflay && a.nflay < a.config.src.length ? (c.src = a.config.src[a.nflay - 1].path, a.soundname.html(a.getname(a.config.src[a.nflay].path)), a.nflay -= 1) : (c.src = d, a.soundname.html(a.getname(d)));
            c.play();
            b.src = "style/icon/Pause_down.png";
            a.flay = 1;
            setTimeout(function() {
                a.c = 0;
                a.gettime(c.duration)
            }, 1E3)
        });
    this.nextimg.bind(_event._down, function() {
        c.pause();
        clearTimeout(a.st);
        "undefined" != e ? c.src = a.config.src.path : a.nflay < a.config.src.length ?
            (a.nflay += 1, c.src = a.config.src[a.nflay].path, a.soundname.html(a.getname(a.config.src[a.nflay].path)), a.nflay += 1) : (c.src = d, a.soundname.html(a.getname(d)), a.nflay = 0);
        c.play();
        b.src = "style/icon/Pause_down.png";
        a.flay = 1;
        setTimeout(function() {
            a.c = 0;
            a.gettime(c.duration)
        }, 1E3)
    })
};
initSound.prototype.gettime = function(a) {
    var b = this,
        c = null,
        d = 0,
        e = null,
        c = b.c % 60,
        e = parseInt(a % 60),
        e = 10 > e ? "0" + e : e,
        f = parseInt(a / 60);
    b.c < a && (b.c += 1, 60 > b.c ? c = 10 > b.c ? "00:0" + b.c : "00:" + b.c : (d = parseInt(b.c / 60), c = 10 > d ? 10 > c ? "0" + d + ":0" + c : "0" + d + ":" + c : 10 > c ? d + ":0" + c : d + ":" + c), 10 > f ? b.soundtime.html(c + " / 0" + f + ":" + e) : b.soundtime.html(c + " / " + f + ":" + e), b.st = setTimeout(function() {
        b.gettime(a)
    }, 1E3))
};
initSound.prototype.getname = function(a) {
    var b = [],
        b = a.split("/");
    return b[b.length - 1].split(".")[0]
};
initSound.prototype.onResize = function(a, b) {
    this.pw = a;
    this.ph = b;
    this.width = this.config.width * this.pw;
    this.height = this.config.height * this.ph;
    this.sounddiv.css({
        width: this.width + "px",
        height: this.height + "px"
    });
    this.sounddiv.css("background-size", this.width + "px " + this.height + "px");
    this.soundname.css("top", this.height / 3 + "px");
    this.soundtime.css("top", this.height / 6 + "px");
    this.setPosition()
};
initSound.prototype.setPosition = function() {
    this.x = this.config.x * this.pw;
    this.y = this.config.y * this.ph;
    this.sounddiv.css({
        left: this.x + "px",
        top: this.y + "px"
    })
};

function initEffText(a, b, c, d, e) {
    this.config = $.extend({
        width: 200,
        height: 20,
        x: 0,
        y: 0,
        alpha: 1,
        textStr: null,
        fontName: null,
        fontSize: 12,
        color: null,
        tbold: "false",
        italic: "false",
        moveSpeed: 0,
        action: null,
        sh: "false",
        sx: 4,
        sy: 4,
        se: 2,
        sr: null
    }, b);
    this.pw = c;
    this.ph = d;
    this.originWidth = bookConfig.largePageWidth;
    this.originHeight = bookConfig.largePageHeight;
    this.color = colorTo0x(this.config.color);
    "#0" == this.color && (this.color = "#000");
    this.father = a;
    this.speed = this.pos = 0;
    this.speed = "ChangeSpeed" == this.config.moveSpeed ?
        250 : 50;
    this.width = this.config.width * this.originWidth;
    this.height = this.config.height * this.originHeight;
    this.x = this.config.x * this.pw;
    this.y = this.config.y * this.ph;
    this.id = "efftext" + e;
    this.scrollid = "efftext" + this.id;
    this.config.textStr = (new TextFormatAnalyzer(this.config.textStr)).getTextLines();
    this.efftext = "false" != this.config.sh ? $("<div id=" + this.id + " style='overflow: hidden;position:absolute;left:" + this.x + "px; top:" + this.y + "px;height:" + this.height + "px;width:" + this.width + "px;box-shadow:" + this.config.sx +
        "px " + this.config.sy + "px " + this.config.se + "px " + colorTo0x(this.config.sr) + ";opacity:" + this.config.alpha + "'></div>") : $("<div id=" + this.id + " style='overflow: hidden;position:absolute;left:" + this.x + "px; top:" + this.y + "px;height:" + this.height + "px;width:" + this.width + "px;opacity:" + this.config.alpha + "'></div>");
    this.efftext2 = $("<div id=" + this.scrollid + " style='word-break: break-word;font-family:" + this.config.fontName + ";width:" + this.width + "px;font-size:" + this.config.fontSize + "px;color:" + this.color + ";'></div>");
    "false" != this.config.tbold && this.efftext.css({
        "font-weight": "bold"
    });
    "false" != this.config.italic && this.efftext.css({
        "font-style": "italic"
    });
    this.father = a;
    this.initEvent();
    a.append(this.efftext);
    this.efftext.append(this.efftext2);
    this.initeffAmin();
    this.onResize(c, d)
}
initEffText.prototype.initeffAmin = function() {
    var a = this,
        b, c = a.config.textStr;
    this.efftext2.html(c.substring(0, a.pos));
    a.pos++ == c.length ? (a.pos = 0, clearTimeout(b)) : b = setTimeout(function() {
        a.initeffAmin()
    }, a.speed)
};
initEffText.prototype.initEvent = function() {
    var a = this;
    this.flag = 0;
    this.linkURL = null;
    if (null != a.config.action) {
        try {
            void 0 != this.config.action.length && (this.config.action = this.config.action[0]), this.linkURL = this.config.action.url
        } catch (b) {}
        var c;
        null != this.linkURL && "www" == this.linkURL.substr(0, 3).toLowerCase() && (this.linkURL = "http://" + this.linkURL);
        try {
            c = this.config.action.triggerEventType
        } catch (d) {
            c = null
        }
        this.efftext.bind(_event._down, function() {
            c == PageEditor.TriggerEventType.MouseDown && actionEvent.call(a);
            browserType == 3 ? event.cancelBubble = true : event.stopPropagation()
        });
        this.efftext.bind("mouseover", function() {
            c == PageEditor.TriggerEventType.MouseOver && actionEvent.call(a)
        });
        this.efftext.bind(isTouch ? _event._end : "mouseout", function() {
            c == PageEditor.TriggerEventType.MouseOut && actionEvent.call(a)
        })
    }
};
initEffText.prototype.onResize = function(a, b) {
    this.pw = a;
    this.ph = b;
    this.setPosition();
    if (null != this.form) this.form.onResize(bookContainer.width(), bookContainer.height());
    if (null != this.slide) this.slide.onResize(bookContainer.width(), bookContainer.height());
    if (null != this.audios) this.audios.onResize(bookContainer.width(), bookContainer.height());
    this.fontSize = 0.75 * this.config.lineH * this.originHeight;
    this.resizeText(a)
};
initEffText.prototype.resizeText = function(a) {
    a /= this.originWidth;
    this.efftext.css({
        "-webkit-transform-origin": "0% 0%",
        "-moz-transform-origin": "0% 0%",
        "-ms-transform-origin": "0% 0%",
        "-o-transform-origin": "0% 0%",
        "-webkit-transform": "scale(" + a + ")",
        "-moz-transform": "scale(" + a + ")",
        "-ms-transform": "scale(" + a + ")",
        "-o-transform": "scale(" + a + ")"
    })
};
initEffText.prototype.setPosition = function() {
    this.x = this.config.x * this.pw;
    this.y = this.config.y * this.ph;
    this.efftext.css({
        left: this.x + "px",
        top: this.y + "px"
    })
};

function initPngImage(a, b, c, d) {
    this.config = $.extend({
        width: 0.2,
        height: 0.2,
        x: 0.2,
        y: 0.2,
        alpha: 1,
        src: null
    }, b);
    this.img = $("<img>");
    if (null != this.config.src) {
        this.pw = c;
        this.ph = d;
        this.width = this.config.width * c;
        this.height = this.config.height * d;
        this.left = this.pw * this.config.x;
        this.top = this.ph * this.config.y;
        var e = this;
        this.img.load(function() {
            initPngImage.prototype.onImageLoad.apply(e, arguments)
        });
        this.img.css({
            position: "absolute",
            width: "0px",
            height: "0px",
            left: this.left + "px",
            top: this.top + "px",
            opacity: this.config.alpha
        });
        this.img.attr({
            src: this.config.src
        });
        a.append(this.img);
        this.father = a;
        this.initEvt()
    }
}
initPngImage.prototype.onImageLoad = function() {
    var a = this.img[0];
    this.imageWidth = a.naturalWidth;
    this.imageHeight = a.naturalHeight;
    this.fitImage()
};
initPngImage.prototype.fitImage = function() {
    var a = this.imageWidth / this.imageHeight,
        b, c, d;
    a > this.width / this.height ? (c = this.width, d = c / a, a = this.left, b = (this.height - d) / 2 + this.top) : (d = this.height, c = d * a, a = (this.width - c) / 2 + this.left, b = this.top);
    this.img.css({
        left: a + "px",
        top: b + "px",
        width: c + "px",
        height: d + "px"
    })
};
initPngImage.prototype.initEvt = function() {
    this.audios = this.slide = this.form = null;
    if (void 0 != this.config.action) {
        var a = this;
        this.flag = 0;
        this.linkURL;
        try {
            void 0 != this.config.action.length && (this.config.action = this.config.action[0]), this.linkURL = this.config.action.url
        } catch (b) {}
        var c;
        null != this.linkURL && "www" == this.linkURL.substr(0, 3).toLowerCase() && (this.linkURL = "http://" + this.linkURL);
        try {
            c = this.config.action.triggerEventType
        } catch (d) {
            c = null
        }
        this.img.bind(_event._down, function() {
            c == PageEditor.TriggerEventType.MouseDown &&
                actionEvent.call(a);
            browserType == 3 ? event.cancelBubble = true : event.stopPropagation()
        });
        this.img.bind("mouseover", function() {
            c == PageEditor.TriggerEventType.MouseOver && actionEvent.call(a)
        });
        this.img.bind(isTouch ? _event._end : "mouseout", function() {
            c == PageEditor.TriggerEventType.MouseOut && actionEvent.call(a)
        })
    }
};
initPngImage.prototype.onResize = function(a, b) {
    this.pw = a;
    this.ph = b;
    this.width = a * this.config.width;
    this.height = b * this.config.height;
    this.left = this.pw * this.config.x;
    this.top = this.ph * this.config.y;
    this.fitImage();
    this.width > this.height ? this.img.css({
        height: this.height + "px",
        left: this.pw * this.config.x + "px",
        top: this.ph * this.config.y + "px"
    }) : this.img.css({
        width: this.width + "px",
        left: this.pw * this.config.x + "px",
        top: this.ph * this.config.y + "px"
    });
    this.setPosition(this.config.x * a, this.config.y * b);
    if (null != this.form) this.form.onResize(bookContainer.width(),
        bookContainer.height());
    if (null != this.slide) this.slide.onResize(bookContainer.width(), bookContainer.height());
    if (null != this.audios) this.audios.onResize(bookContainer.width(), bookContainer.height())
};
initPngImage.prototype.setPosition = function(a, b) {
    this.img.css({
        left: a + "px",
        top: b + "px"
    })
};

function initAminText(a, b, c, d, e) {
    this.config = $.extend({
        width: 200,
        height: 20,
        x: 0,
        y: 0,
        alpha: 1,
        effectType: null,
        textStr: null,
        fontName: null,
        fontSize: 12,
        color: null,
        tbold: "false",
        italic: "false",
        align: "left",
        action: null,
        sh: "false",
        sx: 4,
        sy: 4,
        se: 2,
        sr: null
    }, b);
    this.pw = c;
    this.ph = d;
    this.originWidth = bookConfig.largePageWidth;
    this.originHeight = bookConfig.largePageHeight;
    this.father = a;
    this.pos = 0;
    this.width = this.config.width * this.originWidth;
    this.height = this.config.height * this.originHeight;
    this.x = this.config.x * this.pw;
    this.y = this.config.y * this.ph;
    this.id = "amintext" + e;
    this.scrollid = "animscroll" + this.id;
    b = new TextFormatAnalyzer(this.config.textStr);
    this.config.textStr = b.getTextLines();
    null == this.config.fontName && (this.config.fontName = b.getFontFamily().split(",")[0], this.config.fontSize = b.getFontSize(), this.config.align = b.getAlign(), this.config.color = b.getFontColor(), this.color = colorTo0x(this.config.color));
    this.amintext = $("<div style='overflow: hidden;position:absolute;left:" + this.x + "px; top:" + this.y + "px;height:" +
        this.height + "px;width:" + this.width + "px;opacity:" + this.config.alpha + "'></div>");
    "false" != this.config.sh && this.amintext.css({
        "box-shadow": this.config.sx + "px " + this.config.sy + "px " + this.config.se + "px " + colorTo0x(this.config.sr),
        "-moz-box-shadow": this.config.sx + "px " + this.config.sy + "px " + this.config.se + "px " + colorTo0x(this.config.sr),
        "-o-box-shadow": this.config.sx + "px " + this.config.sy + "px " + this.config.se + "px " + colorTo0x(this.config.sr),
        "-webkit-box-shadow": this.config.sx + "px " + this.config.sy + "px " + this.config.se +
            "px " + colorTo0x(this.config.sr)
    });
    this.amintext2 = $("<div style='word-break: break-word;font-family:" + this.config.fontName + ";width:100%;font-size:" + this.config.fontSize + "px;color:" + this.color + ";text-align:" + this.config.align + ";'></div>");
    "false" != this.config.tbold && this.amintext2.css({
        "font-weight": "bold"
    });
    "false" != this.config.italic && this.amintext2.css({
        "font-style": "italic"
    });
    this.father = a;
    this.initEvent();
    a.append(this.amintext);
    this.amintext.append(this.amintext2);
    switch (this.config.effectType) {
        case "Default":
            this.initAmin();
            break;
        case "Letter Spacing":
            this.litterText(this.config.textStr);
            break;
        case "Scale Word":
            this.amintext2.css("text-align", "center");
            a = Array(this.config.textStr);
            this.RightText(a[0], 0, this.amintext2, "PText2", "#365933", "#9daF33", 50, 0);
            break;
        case "Right To Left":
            this.amintext2.css("text-align", "center");
            a = Array(this.config.textStr);
            this.RightText(a[0], 0, this.amintext2, "PText2", "#365933", "#9daF33", 50, 0);
            break;
        case "Center To Edges":
            this.initAmin()
    }
    this.resizeText(c)
}
initAminText.prototype.initAmin = function() {
    var a = this,
        b, c = a.config.textStr;
    a.pos < c.length ? this.amintext2.html(c.substr(0, a.pos) + "I") : this.amintext2.html(c);
    a.pos++ == c.length ? (a.pos = 0, clearTimeout(b)) : b = setTimeout(function() {
        a.initAmin()
    }, 100)
};
initAminText.prototype.RightText = function(a, b, c, d, e, f, j, g) {
    var k = this,
        m = tmp1 = "";
    if (b <= a.length) {
        if ("<" == a.charAt(b)) {
            for (;
                ">" != a.charAt(b);) b++;
            b++
        }
        if ("&" == a.charAt(b) && " " != a.charAt(b + 1)) {
            for (;
                ";" != a.charAt(b);) b++;
            b++
        }
        m = a.slice(0, b);
        tmp1 = a.charAt(b++);
        c.html("<span class=" + d + " style='text-align:center;'><font color='" + e + "'>" + m + "</font><font color='" + f + "'>" + tmp1 + "</font></span>");
        setTimeout(function() {
            k.RightText(a, b, c, d, e, f, j, g)
        }, j)
    }
};
initAminText.prototype.litterText = function(a) {
    for (var b = "", c = a.length, d = 0; d < c; d++) b += "<span id='" + (this.scrollid + "d" + d) + "' style='position: relative;left:0;top:0; display:none;top:-30px;'>" + a.charAt(d) + "</span>";
    idTObject.html(b);
    this.ScrollText(0, c - 1)
};
initAminText.prototype.ScrollText = function(a, b) {
    var c = this,
        d = c.amintext2;
    d.css("display", "inline");
    d.animate({
        top: "0px"
    }, 50, function() {
        a < b && c.ScrollText(a + 1, b)
    })
};
initAminText.prototype.initEvent = function() {
    var a = this;
    this.flag = 0;
    this.linkURL = null;
    if (null != a.config.action) {
        try {
            void 0 != this.config.action.length && (this.config.action = this.config.action[0]), this.linkURL = this.config.action.url
        } catch (b) {}
        var c;
        null != this.linkURL && "www" == this.linkURL.substr(0, 3).toLowerCase() && (this.linkURL = "http://" + this.linkURL);
        try {
            c = this.config.action.triggerEventType
        } catch (d) {
            c = null
        }
        this.amintext.bind(_event._down, function() {
            c == PageEditor.TriggerEventType.MouseDown && actionEvent.call(a);
            browserType == 3 ? event.cancelBubble = true : event.stopPropagation()
        });
        this.amintext.bind("mouseover", function() {
            c == PageEditor.TriggerEventType.MouseOver && actionEvent.call(a)
        });
        this.amintext.bind(isTouch ? _event._end : "mouseout", function() {
            c == PageEditor.TriggerEventType.MouseOut && actionEvent.call(a)
        })
    }
};
initAminText.prototype.onResize = function(a, b) {
    this.pw = a;
    this.ph = b;
    this.setPosition();
    if (null != this.form) this.form.onResize(bookContainer.width(), bookContainer.height());
    if (null != this.slide) this.slide.onResize(bookContainer.width(), bookContainer.height());
    if (null != this.audios) this.audios.onResize(bookContainer.width(), bookContainer.height());
    this.amintext.css("font-size", this.fontSize + "px");
    this.amintext2.css("font-size", this.fontSize + "px");
    this.resizeText(this.pw)
};
initAminText.prototype.resizeText = function(a) {
    a /= this.originWidth;
    this.amintext.css({
        "-webkit-transform-origin": "0% 0%",
        "-moz-transform-origin": "0% 0%",
        "-ms-transform-origin": "0% 0%",
        "-o-transform-origin": "0% 0%",
        "-webkit-transform": "scale(" + a + ")",
        "-moz-transform": "scale(" + a + ")",
        "-ms-transform": "scale(" + a + ")",
        "-o-transform": "scale(" + a + ")"
    })
};
initAminText.prototype.setPosition = function() {
    this.x = this.config.x * this.pw;
    this.y = this.config.y * this.ph;
    this.amintext.css({
        left: this.x + "px",
        top: this.y + "px"
    })
};

function initStarText(a, b, c, d, e) {
    this.config = $.extend({
        width: 200,
        height: 20,
        x: 0,
        y: 0,
        alpha: 1,
        textStr: null,
        fontName: null,
        fontSize: 12,
        color: null,
        tbold: "false",
        italic: "false",
        align: "left",
        action: null,
        repeat: "false",
        moveSpeed: 1,
        sh: "false",
        sx: 4,
        sy: 4,
        se: 2,
        sr: null
    }, b);
    this.pw = c;
    this.ph = d;
    this.originWidth = bookConfig.largePageWidth;
    this.originHeight = bookConfig.largePageHeight;
    this.father = a;
    this.speed = 22E3 * (1 / this.config.moveSpeed);
    this.width = this.config.width * this.originWidth;
    this.height = this.config.height *
        this.originHeight;
    this.x = this.config.x * this.pw;
    this.y = this.config.y * this.ph;
    this.id = "startext" + e;
    this.scrollid = "starwars" + this.id;
    this.textli = "";
    this.offset = 0;
    this.stepping = 0.2;
    b = new TextFormatAnalyzer(this.config.textStr);
    this.text = b.getTextLines().split("<br/>");
    null == this.config.fontName && (this.config.fontName = b.getFontFamily().split(",")[0], this.config.fontSize = b.getFontSize(), this.config.align = b.getAlign(), this.config.color = b.getFontColor(), this.color = colorTo0x(this.config.color));
    for (b = 0; b <
        this.text.length; b++) this.textli = this.textli + "<li style='list-style-type:none;'>" + this.text[b] + "</li>";
    this.startext = $("<div style='overflow: hidden;position:absolute;left:" + this.x + "px; top:" + this.y + "px;height:" + this.height + "px;width:" + this.width + "px;opacity:" + this.config.alpha + "'></div>");
    "false" != this.config.sh && this.startext.css({
        "box-shadow": this.config.sx + "px " + this.config.sy + "px " + this.config.se + "px " + colorTo0x(this.config.sr),
        "-moz-box-shadow": this.config.sx + "px " + this.config.sy + "px " + this.config.se +
            "px " + colorTo0x(this.config.sr),
        "-webkit-box-shadow": this.config.sx + "px " + this.config.sy + "px " + this.config.se + "px " + colorTo0x(this.config.sr),
        "-o-box-shadow": this.config.sx + "px " + this.config.sy + "px " + this.config.se + "px " + colorTo0x(this.config.sr)
    });
    this.startext2 = $("<div style='word-break: break-word;font-family:" + this.config.fontName + ";width:100%;font-size:" + this.config.fontSize + "px;color:" + this.color + ";text-align:" + this.config.align + ";'></div>");
    "false" != this.config.tbold && this.startext2.css({
        "font-weight": "bold"
    });
    "false" != this.config.italic && this.startext2.css({
        "font-style": "italic"
    });
    this.father = a;
    this.initEvent();
    a.append(this.startext);
    this.startext.append(this.startext2);
    this.startext2.append(this.textli);
    this.initScroll();
    this.onResize(c, d)
}
initStarText.prototype.initScroll = function() {
    this._wrap = this.startext2;
    var a = this.text.length;
    this._wrap.height();
    for (var b = a; 0 <= b; b--) $(a[b]).css("fontSize", this.config.fontSize - this.offset + "px"), this.offset += this.stepping;
    this._wrap.css("marginTop", this.height);
    this.initScrollText()
};
initStarText.prototype.initScrollText = function() {
    var a = this,
        b = a._wrap,
        c = a.tid,
        d = b.height();
    b.animate({
        marginTop: -d + "px"
    }, a.speed, function() {
        if ("true" == a.config.repeat) {
            for (var d = c; 0 <= d; d--) $(c[d]).css("fontSize", a.config.fontSize - a.offset + "pt"), a.offset += a.stepping;
            b.css("marginTop", a.height);
            a.offset = 0;
            a.stepping = 0.2;
            a.initScrollText()
        } else b.css("marginTop", 0)
    })
};
initStarText.prototype.initEvent = function() {
    var a = this;
    this.flag = 0;
    this.linkURL = null;
    if (null != a.config.action) {
        try {
            void 0 != this.config.action.length && (this.config.action = this.config.action[0]), this.linkURL = this.config.action.url
        } catch (b) {}
        var c;
        null != this.linkURL && "www" == this.linkURL.substr(0, 3).toLowerCase() && (this.linkURL = "http://" + this.linkURL);
        try {
            c = this.config.action.triggerEventType
        } catch (d) {
            c = null
        }
        this.startext.bind(_event._down, function() {
            c == PageEditor.TriggerEventType.MouseDown && actionEvent.call(a);
            browserType == 3 ? event.cancelBubble = true : event.stopPropagation()
        });
        this.startext.bind("mouseover", function() {
            c == PageEditor.TriggerEventType.MouseOver && actionEvent.call(a)
        });
        this.startext.bind(isTouch ? _event._end : "mouseout", function() {
            c == PageEditor.TriggerEventType.MouseOut && actionEvent.call(a)
        })
    }
};
initStarText.prototype.onResize = function(a, b) {
    this.pw = a;
    this.ph = b;
    this.setPosition();
    if (null != this.form) this.form.onResize(bookContainer.width(), bookContainer.height());
    if (null != this.slide) this.slide.onResize(bookContainer.width(), bookContainer.height());
    if (null != this.audios) this.audios.onResize(bookContainer.width(), bookContainer.height());
    this.fontSize = 0.75 * this.config.lineH * this.originHeight;
    this.startext.css("font-size", this.fontSize + "px");
    this.startext2.css("font-size", this.fontSize + "px");
    this.resizeText(a)
};
initStarText.prototype.resizeText = function(a) {
    a /= this.originWidth;
    this.startext.css({
        "-webkit-transform-origin": "0% 0%",
        "-moz-transform-origin": "0% 0%",
        "-ms-transform-origin": "0% 0%",
        "-o-transform-origin": "0% 0%",
        "-webkit-transform": "scale(" + a + ")",
        "-moz-transform": "scale(" + a + ")",
        "-ms-transform": "scale(" + a + ")",
        "-o-transform": "scale(" + a + ")"
    })
};
initStarText.prototype.setPosition = function() {
    this.x = this.config.x * this.pw;
    this.y = this.config.y * this.ph;
    this.startext.css({
        left: this.x + "px",
        top: this.y + "px"
    })
};

function initBanner(a, b, c, d, e) {
    this.config = $.extend({
        width: 200,
        height: 20,
        x: 0,
        y: 0,
        alpha: 1,
        action: null,
        banners: null
    }, b);
    this.pw = c;
    this.ph = d;
    this.father = a;
    this.width = this.config.width * this.pw;
    this.height = this.config.height * this.ph;
    this.x = this.config.x * this.pw;
    this.y = this.config.y * this.ph;
    this.a = this.config.banners.banner;
    this.id = "banner" + e;
    this.image = null;
    if ("string" == typeof this.a.imageUrl) this.image = "<li><img src='" + this.a.imageUrl + "' /></li>";
    else
        for (b = 0; b < this.a.length; b++) this.image = null != this.image ?
            this.image + "<li><img src='" + this.a[b].imageUrl + "' /></li>" : "<li><img src='" + this.a[b].imageUrl + "' /></li>";
    this.banner = $("<div style='left:" + this.x + "px;top:" + this.y + "px;'></div>");
    this.bannerul = $("<ul></ul>");
    this.bannerli = $(this.image);
    a.append(this.banner);
    this.banner.append(this.bannerul);
    this.bannerul.append(this.bannerli);
    this.imageamin();
    this.father = a;
    this.initEvent()
}
initBanner.prototype.imageamin = function() {
    this.banner.jFlip(this.width, this.height, {
        background: "white",
        cornersTop: !1,
        scale: "fill"
    }, this.x, this.y)
};
initBanner.prototype.initEvent = function() {
    var a = this;
    this.flag = 0;
    this.linkURL;
    if (null != a.config.action) {
        try {
            void 0 != this.config.action.length && (this.config.action = this.config.action[0]), this.linkURL = this.config.action.url
        } catch (b) {}
        var c;
        null != this.linkURL && "www" == this.linkURL.substr(0, 3).toLowerCase() && (this.linkURL = "http://" + this.linkURL);
        try {
            c = this.config.action.triggerEventType
        } catch (d) {
            c = null
        }
        this.banner.bind(_event._down, function() {
            c == PageEditor.TriggerEventType.MouseDown && actionEvent.call(a);
            browserType == 3 ? event.cancelBubble = true : event.stopPropagation()
        });
        this.banner.bind(_event._move, function() {
            c == PageEditor.TriggerEventType.MouseOver && actionEvent.call(a)
        });
        this.banner.bind(_event._end, function() {
            c == PageEditor.TriggerEventType.MouseOut && actionEvent.call(a)
        })
    }
};
initBanner.prototype.onResize = function(a, b) {
    this.pw = a;
    this.ph = b;
    this.width = this.config.width * this.pw;
    this.height = this.config.height * this.ph;
    $(".bannerdiv canvas").css({
        width: this.width + "px",
        height: this.height + "px"
    });
    this.setPosition()
};
initBanner.prototype.setPosition = function() {
    this.x = this.config.x * this.pw;
    this.y = this.config.y * this.ph;
    $(".bannerdiv").css({
        left: this.x + "px",
        top: this.y + "px"
    })
};

function initPrint(a, b, c, d, e) {
    this.config = $.extend({
        width: 0.2,
        height: 0.2,
        x: 0.2,
        y: 0.2,
        alpha: 1,
        src: null
    }, b);
    this.background = $("<div style = 'z-index:100;'></div>");
    this.overArea = $("<div></div>");
    this.img = $("<div></div>");
    this.imageIndex = e;
    this.pw = c;
    this.ph = d;
    this.width = this.config.width * c;
    this.height = this.config.height * d;
    this.background.css({
        position: "absolute",
        width: this.width + "px",
        height: this.height + "px",
        left: this.pw * this.config.x + "px",
        top: this.ph * this.config.y + "px",
        opacity: this.config.alpha,
        "z-index": "101",
        border: this.config.borderWidth + "px solid " + colorTo0x(this.config.borderColor)
    });
    this.backcolor = colorTo0x(this.config.overColor);
    this.overArea.css({
        position: "absolute",
        width: this.width + "px",
        height: this.height + "px",
        left: "0px",
        top: "0px",
        opacity: this.config.overAlpha,
        background: this.backcolor,
        "z-index": "101"
    });
    this.img.css({
        position: "absolute",
        right: "10px",
        top: "10px",
        "z-index": "102"
    });
    a.append(this.background);
    this.background.append(this.overArea);
    this.overArea.append(this.img);
    this.image = $("<img src = 'style/icon/print_icon.png'>");
    this.img.append(this.image);
    this.printArea = $("<canvas></canvas>");
    this.printw = this.config.width * bookConfig.largePageWidth;
    this.printh = this.config.height * bookConfig.largePageHeight;
    this.printArea.css({
        left: 0,
        top: -windowHeight + "px",
        width: this.printw + "px",
        height: this.printh + "px",
        position: "absolute"
    });
    this.printImageA = $("<div></div>");
    this.father = a;
    this.initEvt();
    this.overArea.hide()
}
initPrint.prototype.initEvt = function() {
    this.audios = this.slide = this.form = null;
    var a = this;
    this.background.mouseEnterZoom();
    this.background.bind(_event._enter, function() {
        a.overArea.show()
    });
    this.background.bind(_event._down, function() {
        a.overArea.show()
    });
    this.background.bind(_event._end, function() {
        a.overArea.hide()
    });
    this.background.bind(_event._leave, function() {
        a.overArea.hide()
    });
    this.img.bind("mouseover", function() {
        a.img.css({
            cursor: "pointer"
        })
    });
    this.image.bind(_event._enter, function() {
        a.img.css({
            background: colorDiv(a.backcolor,
                30)
        })
    });
    this.image.bind(_event._down, function() {
        a.img.css({
            background: colorDiv(a.backcolor, 30)
        })
    });
    this.image.bind(_event._end, function() {
        a.img.css({
            background: ""
        })
    });
    this.image.bind(_event._leave, function() {
        a.img.css({
            background: ""
        })
    });
    this.image.click(function() {
        sendvisitinfo(5, getShownPageString());
        a.printImageA.empty();
        a.printArea.empty();
        var b = a.printArea[0].getContext("2d"),
            c = a.printArea.width(),
            d = a.printArea.height(),
            e = a.printArea[0].getContext("2d");
        b.canvas.width = c;
        b.canvas.height = d;
        e.canvas.width =
            c;
        e.canvas.height = d;
        var f = new Image;
        f.src = "files/large/" + a.imageIndex + ".jpg";
        var j = new Image;
        $(f).load(function() {
            e.drawImage(f, -a.config.x * bookConfig.largePageWidth, -a.config.y * bookConfig.largePageHeight);
            b.drawImage(e.canvas, 0, 0);
            j.src = $(a.printArea)[0].toDataURL("image/png");
            $(j).load(function() {
                a.printImageA.printArea()
            })
        });
        a.printImageA.append(j)
    })
};
initPrint.prototype.onResize = function(a, b) {
    this.pw = a;
    this.ph = b;
    this.width = a * this.config.width;
    this.height = b * this.config.height;
    this.setPosition(this.config.x * a, this.config.y * b);
    this.background.css({
        position: "absolute",
        width: this.width + "px",
        height: this.height + "px",
        left: this.pw * this.config.x + "px",
        top: this.ph * this.config.y + "px"
    });
    this.overArea.css({
        position: "absolute",
        width: this.width + "px",
        height: this.height + "px",
        left: "0px",
        top: "0px"
    });
    this.img.css({
        position: "absolute",
        right: "10px",
        top: "10px"
    });
    this.background.mouseEnterZoom()
};
initPrint.prototype.setPosition = function() {};

function initAlphaTransitionBanner(a, b, c, d) {
    function e() {
        f.timer0 = setInterval(function() {
            if (0 < f.alpha) {
                f.alpha -= 1;
                $(f.currentImageHolder).css({
                    opacity: f.alpha / 100
                });
                var a = 0,
                    a = 0 < f.currentImage ? (f.currentImage - 1) % f.images.length : f.images.length - 1;
                f.imgTitle.html(f.photos[a].imageName)
            } else clearInterval(f.timer0), f.currentImageHolder == f.image0Holder ? ($(f.image0Holder).css({
                    "z-index": "207"
                }), $(f.image1Holder).css({
                    "z-index": "208"
                }), f.alpha = 100, $(f.currentImageHolder).css({
                    opacity: f.alpha / 100
                }), f.currentImageHolder =
                f.image1Holder, f.image0Holder.empty().append(f.images[f.currentImage])) : ($(f.image0Holder).css({
                "z-index": "208"
            }), $(f.image1Holder).css({
                "z-index": "207"
            }), f.alpha = 100, $(f.currentImageHolder).css({
                opacity: f.alpha / 100
            }), f.currentImageHolder = f.image0Holder, f.image1Holder.empty().append(f.images[f.currentImage])), f.currentImage = (f.currentImage + 1) % f.images.length, f.timer1 = setTimeout(e, f.interval)
        }, 20)
    }
    this.config = $.extend({
        width: 0.2,
        height: 0.2,
        x: 0.2,
        y: 0.2,
        alpha: 1,
        src: null
    }, b);
    this.photos = $.extend([], b.images);
    if (!(1 > this.photos.length)) {
        this.father = a;
        this.pw = c;
        this.ph = d;
        this.imgIndex = -1;
        this.imgWidth = this.config.width * c;
        this.imgHeight = this.config.height * d;
        this.boxWidth = this.imgWidth - 8;
        this.boxHeight = this.imgHeight - 8;
        this.x = this.config.x * this.pw;
        this.y = this.config.y * this.ph;
        this.interval = 3E3;
        this.fadeTime = 10;
        this.alpha = 100;
        this.images = [];
        this.background = $("<div></div>");
        this.background.css({
            "z-index": "199",
            border: "1px solid #333333"
        });
        this.background.css({
            width: this.imgWidth,
            height: this.imgHeight
        });
        this.slideShowBG =
            new grayBackground(this.background, "#ffffff", 1, this.imgWidth, this.imgHeight);
        this.toolBar = $("<div></div>");
        this.toolBar.css({
            width: this.boxWidth,
            height: "35px",
            position: "relative"
        });
        this.toolBar.css({
            "z-index": "209"
        });
        this.toolBG = new grayBackground(this.toolBar, "#000000", 0.3, this.boxWidth, 35);
        this.toolBG.setZindex("210");
        this.toolBG.setPosition(0, 0);
        this.imgTitle = $("<div></div>");
        this.imgTitle.css({
            width: this.boxWidth - 20 + "px",
            height: "20px",
            position: "absolute",
            "z-index": "211",
            background: "",
            left: "10px",
            top: "7px",
            color: "#ffffff"
        });
        this.image0Holder = $("<div></div>");
        this.image1Holder = $("<div></div>");
        this.img = $("<img style='position : absolute;' />");
        this.leftButton = new button(1, this.toolBar, {
            iconURL: uiBaseURL + "previous_down.png"
        });
        this.rightButton = new button(1, this.toolBar, {
            iconURL: uiBaseURL + "next_down.png"
        });
        a.append(this.background);
        this.background.append(this.image1Holder);
        this.background.append(this.image0Holder);
        this.background.append(this.toolBar);
        this.toolBar.css({
            left: (this.imgWidth - this.boxWidth) /
                2 + "px",
            top: (this.imgHeight - this.boxHeight) / 2 + "px"
        });
        this.toolBar.append(this.imgTitle);
        this.rightButton.setCSS({
            "z-index": 212,
            right: "0px",
            top: "13px"
        });
        this.leftButton.setCSS({
            "z-index": 212,
            right: "20px",
            top: "13px"
        });
        this.background.css({
            left: this.x + "px",
            top: this.y + "px",
            position: "relative",
            "-webkit-box-shadow": "0 0 10px rgba(40, 0, 0, 0.7)",
            "-moz-box-shadow": "0 0 10px rgba(40, 0, 0, 0.7)",
            "box-shadow": "0 0 10px rgba(40, 0, 0, 0.7)"
        });
        this.image0Holder.css({
            width: this.boxWidth + "px",
            height: this.boxHeight +
                "px",
            left: (this.imgWidth - this.boxWidth) / 2 + "px",
            top: (this.imgHeight - this.boxHeight) / 2 + "px",
            position: "absolute",
            "z-index": 202
        });
        this.image1Holder.css({
            width: this.boxWidth + "px",
            height: this.boxHeight + "px",
            left: (this.imgWidth - this.boxWidth) / 2 + "px",
            top: (this.imgHeight - this.boxHeight) / 2 + "px",
            position: "absolute",
            "z-index": 202
        });
        this.addItem();
        var f = this;
        this.leftButton.onMouseDown(this, this.prePage);
        this.rightButton.onMouseDown(this, this.nextPage);
        this.currentImageHolder = this.image0Holder;
        this.currentImage =
            2 % this.images.length;
        this.image0Holder.append(this.images[0]);
        this.image1Holder.append(this.images[1]);
        this.imgTitle.html(this.photos[0].imageName);
        f = this;
        this.timer1 = setTimeout(e, this.interval);
        this.toolBar.show();
        this.leftButton.remove();
        this.rightButton.remove()
    }
}
initAlphaTransitionBanner.prototype.nextPage = function() {
    clearInterval(this.timer0);
    var a = 0,
        a = 0 < this.currentImage ? (this.currentImage - 1) % this.images.length : this.images.length - 1;
    this.imgTitle.html(this.photos[a].imageName);
    this.currentImageHolder == this.image0Holder ? ($(this.image0Holder).css({
            "z-index": "207"
        }), $(this.image1Holder).css({
            "z-index": "208"
        }), this.alpha = 100, $(this.currentImageHolder).css({
            opacity: this.alpha / 100
        }), this.currentImageHolder = this.image1Holder, this.image0Holder.empty().append(this.images[this.currentImage])) :
        ($(this.image0Holder).css({
            "z-index": "208"
        }), $(this.image1Holder).css({
            "z-index": "207"
        }), this.alpha = 100, $(this.currentImageHolder).css({
            opacity: this.alpha / 100
        }), this.currentImageHolder = this.image0Holder, this.image1Holder.empty().append(this.images[this.currentImage]));
    this.currentImage = (this.currentImage + 1) % this.images.length
};
initAlphaTransitionBanner.prototype.prePage = function() {
    var a = 0,
        a = 2 < this.currentImage ? (this.currentImage - 3) % this.images.length : 1 == this.currentImage ? this.images.length - 2 : this.images.length - 3;
    this.imgTitle.html(this.photos[a].imageName);
    this.currentImageHolder == this.image0Holder ? ($(this.image0Holder).css({
            "z-index": "207"
        }), $(this.image1Holder).css({
            "z-index": "208"
        }), this.alpha = 100, $(this.currentImageHolder).css({
            opacity: this.alpha / 100
        }), this.currentImageHolder = this.image1Holder, this.image1Holder.empty().append(this.images[a])) :
        ($(this.image0Holder).css({
            "z-index": "208"
        }), $(this.image1Holder).css({
            "z-index": "207"
        }), this.alpha = 100, $(this.currentImageHolder).css({
            opacity: this.alpha / 100
        }), this.currentImageHolder = this.image0Holder, this.image0Holder.empty().append(this.images[this.index]));
    this.currentImage = (this.currentImage - 1) % this.images.length
};
initAlphaTransitionBanner.prototype.addItem = function() {
    for (var a = 0; a < this.photos.length; a++) {
        var b = $("<div></div>");
        b.css({
            width: this.boxWidth + "px",
            height: this.boxHeight + "px"
        });
        image = $("<img style='position : absolute;' />");
        image.remove();
        var c = this.photos[a].url;
        !0 == isFlipPdf && (c = "." + c);
        image.attr("src", c);
        image.css({
            width: this.boxWidth + "px",
            height: this.boxHeight + "px"
        });
        b.append(image);
        this.images[a] = b
    }
};
initAlphaTransitionBanner.prototype.onResize = function(a, b) {
    this.pw = a;
    this.ph = b;
    this.imgWidth = this.config.width * this.pw;
    this.imgHeight = this.config.height * this.ph;
    this.boxWidth = this.imgWidth - 8;
    this.boxHeight = this.imgHeight - 8;
    this.background.css({
        width: this.imgWidth,
        height: this.imgHeight
    });
    this.toolBar.css({
        width: this.boxWidth,
        height: "35px"
    });
    this.toolBG.onResize(this.boxWidth, 35);
    this.toolBG.setPosition(0, 0);
    this.imgTitle.css({
        width: this.boxWidth - 20 + "px",
        height: "20px",
        left: "10px",
        top: "7px"
    });
    this.slideShowBG.onResize(this.imgWidth,
        this.imgHeight);
    for (var c = 0; c < this.images.length; c++) this.images[c].children().css({
        width: this.boxWidth + "px",
        height: this.boxHeight + "px"
    });
    this.setPosition()
};
initAlphaTransitionBanner.prototype.setPosition = function() {
    this.x = this.config.x * this.pw;
    this.y = this.config.y * this.ph;
    this.background.css({
        left: this.x + "px",
        top: this.y + "px",
        position: "relative"
    });
    this.image0Holder.css({
        width: this.boxWidth + "px",
        height: this.boxHeight + "px",
        left: (this.imgWidth - this.boxWidth) / 2 + "px",
        top: (this.imgHeight - this.boxHeight) / 2 + "px",
        position: "absolute"
    });
    this.image1Holder.css({
        width: this.boxWidth + "px",
        height: this.boxHeight + "px",
        left: (this.imgWidth - this.boxWidth) / 2 + "px",
        top: (this.imgHeight -
            this.boxHeight) / 2 + "px",
        position: "absolute"
    })
};
initAlphaTransitionBanner.prototype.changeImage = function(a) {
    this.imgIndex = a;
    this.img.remove();
    a = this.photos[a].url;
    !0 == isFlipPdf && (a = "." + a);
    var b = this;
    this.img.attr("src", a);
    this.img.load(function() {
        var a = b.boxWidth,
            d = b.boxHeight;
        b.img.css({
            width: a + "px",
            height: d + "px"
        });
        b.boxWidth != a || b.boxHeight != d ? b.image0Holder.animate({
            width: a + 8,
            height: d + 8,
            left: (b.pw - a) / 2,
            top: (b.ph - d) / 2
        }, 300, function() {
            b.image0Holder.append(b.img)
        }) : (b.image0Holder.append(b.img), b.image1Holder.append(b.img))
    })
};
initAlphaTransitionBanner.prototype.setImagePosition = function() {};
initAlphaTransitionBanner.prototype.show = function() {};
initAlphaTransitionBanner.prototype.hide = function() {};

function initEmbeddedSlideshow(a, b, c, d) {
    function e() {
        f.timer0 = setInterval(function() {
            0 < f.fadeTime ? (f.fadeTime -= 1, 300 < f.fadeTime && 400 >= f.fadeTime ? 0 < f.nextAlpha && 100 >= f.alpha && (f.alpha += 1, f.nextAlpha -= 1, $(f.image0Holder).css({
                opacity: f.alpha / 100
            }), $(f.image3Holder).css({
                opacity: f.nextAlpha / 100
            }), f.left = parseInt($(f.image0Holder.children().children()).css("left").replace("px", "")) + 1, f.top = parseInt($(f.image0Holder.children().children()).css("top").replace("px", "")) + 1, f.nextLeft = parseInt($(f.image3Holder.children().children()).css("left").replace("px",
                "")) + 1, f.nextTop = parseInt($(f.image3Holder.children().children()).css("top").replace("px", "")) - 1, $(f.image0Holder.children().children()).css({
                left: f.left,
                top: f.top
            }), $(f.image1Holder.children().children()).css({
                left: 0,
                top: -200
            }), $(f.image2Holder.children().children()).css({
                left: 0,
                top: 0
            }), $(f.image3Holder.children().children()).css({
                left: f.nextLeft,
                top: f.nextTop
            }), 301 == f.fadeTime && (f.currentImage = (f.currentImage + 1) % f.images.length, f.nextImage = (f.nextImage + 1) % f.images.length, f.image1Holder.empty().append(f.images[f.currentImage]),
                f.image2Holder.empty().append(f.images[f.nextImage]), f.image1Holder.css({
                    opacity: "0"
                }), f.image2Holder.css({
                    opacity: "0"
                }), $(f.image1Holder.children().children()).css({
                    left: 0,
                    top: -200
                }), $(f.image2Holder.children().children()).css({
                    left: 0,
                    top: 0
                }))) : 200 < f.fadeTime && 300 >= f.fadeTime ? 0 < f.alpha && 100 >= f.nextAlpha && (f.nextAlpha += 1, f.alpha -= 1, $(f.image0Holder).css({
                opacity: f.alpha / 100
            }), $(f.image1Holder).css({
                opacity: f.nextAlpha / 100
            }), f.left = parseInt($(f.image0Holder.children().children()).css("left").replace("px",
                "")) + 1, f.top = parseInt($(f.image0Holder.children().children()).css("top").replace("px", "")) + 1, f.nextLeft = parseInt($(f.image1Holder.children().children()).css("left").replace("px", "")) - 1, f.nextTop = parseInt($(f.image1Holder.children().children()).css("top").replace("px", "")) + 1, $(f.image0Holder.children().children()).css({
                left: f.left,
                top: f.top
            }), $(f.image1Holder.children().children()).css({
                left: f.nextLeft,
                top: f.nextTop
            }), $(f.image2Holder.children().children()).css({
                left: 0,
                top: 0
            }), $(f.image3Holder.children().children()).css({
                left: -200,
                top: 0
            }), 202 == f.fadeTime && (f.currentImage = (f.currentImage + 1) % f.images.length, f.nextImage = (f.nextImage + 1) % f.images.length, f.image2Holder.empty().append(f.images[f.currentImage]), f.image3Holder.empty().append(f.images[f.nextImage]), f.image3Holder.css({
                opacity: "0"
            }), f.image2Holder.css({
                opacity: "0"
            }), $(f.image2Holder.children().children()).css({
                left: 0,
                top: 0
            }), $(f.image3Holder.children().children()).css({
                left: -200,
                top: 0
            }))) : 100 < f.fadeTime && 200 >= f.fadeTime ? 0 < f.nextAlpha && 100 >= f.alpha && (f.alpha += 1, f.nextAlpha -=
                1, $(f.image2Holder).css({
                    opacity: f.alpha / 100
                }), $(f.image1Holder).css({
                    opacity: f.nextAlpha / 100
                }), f.left = parseInt($(f.image2Holder.children().children()).css("left").replace("px", "")) - 1, f.top = parseInt($(f.image2Holder.children().children()).css("top").replace("px", "")) - 1, f.nextLeft = parseInt($(f.image1Holder.children().children()).css("left").replace("px", "")) - 1, f.nextTop = parseInt($(f.image1Holder.children().children()).css("top").replace("px", "")) + 1, $(f.image0Holder.children().children()).css({
                    left: -200,
                    top: -200
                }), $(f.image1Holder.children().children()).css({
                    left: f.nextLeft,
                    top: f.nextTop
                }), $(f.image2Holder.children().children()).css({
                    left: f.left,
                    top: f.top
                }), $(f.image3Holder.children().children()).css({
                    left: -200,
                    top: 0
                }), 101 == f.fadeTime && (f.currentImage = (f.currentImage + 1) % f.images.length, f.nextImage = (f.nextImage + 1) % f.images.length, f.image3Holder.empty().append(f.images[f.currentImage]), f.image0Holder.empty().append(f.images[f.nextImage]), f.image3Holder.css({
                        opacity: "0"
                    }), f.image0Holder.css({
                        opacity: "0"
                    }),
                    $(f.image0Holder.children().children()).css({
                        left: -200,
                        top: -200
                    }), $(f.image3Holder.children().children()).css({
                        left: -200,
                        top: 0
                    }))) : 0 < f.fadeTime && 100 >= f.fadeTime && 0 < f.alpha && 100 >= f.nextAlpha && (f.nextAlpha += 1, f.alpha -= 1, $(f.image2Holder).css({
                opacity: f.alpha / 100
            }), $(f.image3Holder).css({
                opacity: f.nextAlpha / 100
            }), f.left = parseInt($(f.image2Holder.children().children()).css("left").replace("px", "")) - 1, f.top = parseInt($(f.image2Holder.children().children()).css("top").replace("px", "")) - 1, f.nextLeft = parseInt($(f.image3Holder.children().children()).css("left").replace("px",
                "")) + 1, f.nextTop = parseInt($(f.image3Holder.children().children()).css("top").replace("px", "")) - 1, $(f.image0Holder.children().children()).css({
                left: -200,
                top: -200
            }), $(f.image1Holder.children().children()).css({
                left: 0,
                top: -200
            }), $(f.image2Holder.children().children()).css({
                left: f.left,
                top: f.top
            }), $(f.image3Holder.children().children()).css({
                left: f.nextLeft,
                top: f.nextTop
            }), 1 == f.fadeTime && (f.currentImage = (f.currentImage + 1) % f.images.length, f.nextImage = (f.nextImage + 1) % f.images.length, f.image0Holder.css({
                    opacity: "0"
                }),
                f.image1Holder.css({
                    opacity: "0"
                }), $(f.image0Holder.children().children()).css({
                    left: -200,
                    top: -200
                }), $(f.image1Holder.children().children()).css({
                    left: 0,
                    top: -200
                })))) : (clearInterval(f.timer0), f.fadeTime = 400, f.timer1 = setTimeout(e, f.interval))
        }, 20)
    }
    this.config = $.extend({
        width: 0.2,
        height: 0.2,
        x: 0.2,
        y: 0.2,
        alpha: 1,
        src: null
    }, b);
    this.photos = $.extend([], b.images);
    if (!(1 > this.photos.length)) {
        this.father = a;
        this.pw = c;
        this.ph = d;
        this.imgIndex = -1;
        this.imgWidth = this.config.width * c;
        this.imgHeight = this.config.height *
            d;
        this.boxWidth = this.imgWidth - 8;
        this.boxHeight = this.imgHeight - 8;
        this.x = this.config.x * this.pw;
        this.y = this.config.y * this.ph;
        this.interval = 0;
        this.fadeTime = 400;
        this.alpha = 0;
        this.nextAlpha = 100;
        this.nextTop = this.nextLeft = this.top = this.left = 0;
        this.images = [];
        this.background = $("<div></div>");
        this.background.css({
            "z-index": "199"
        });
        this.background.css({
            width: this.imgWidth,
            height: this.imgHeight
        });
        this.image0Holder = $("<div class='type3'></div>");
        this.image1Holder = $("<div class='type3'></div>");
        this.image2Holder =
            $("<div class='type3'></div>");
        this.image3Holder = $("<div class='type3'></div>");
        this.img = $("<img style='position : absolute;' />");
        a.append(this.background);
        this.background.append(this.image3Holder);
        this.background.append(this.image2Holder);
        this.background.append(this.image1Holder);
        this.background.append(this.image0Holder);
        this.background.css({
            left: this.x + "px",
            top: this.y + "px",
            position: "relative",
            overflow: "hidden"
        });
        this.image0Holder.css({
            width: this.boxWidth + "px",
            height: this.boxHeight + "px",
            left: (this.imgWidth -
                this.boxWidth) / 2 + "px",
            top: (this.imgHeight - this.boxHeight) / 2 + "px",
            "-webkit-mask-size": this.boxWidth + "px " + this.boxHeight + "px",
            position: "absolute",
            "z-index": 202
        });
        this.image1Holder.css({
            width: this.boxWidth + "px",
            height: this.boxHeight + "px",
            left: (this.imgWidth - this.boxWidth) / 2 + "px",
            top: (this.imgHeight - this.boxHeight) / 2 + "px",
            "-webkit-mask-size": this.boxWidth + "px " + this.boxHeight + "px",
            position: "absolute",
            "z-index": 202
        });
        this.image2Holder.css({
            width: this.boxWidth + "px",
            height: this.boxHeight + "px",
            left: (this.imgWidth -
                this.boxWidth) / 2 + "px",
            top: (this.imgHeight - this.boxHeight) / 2 + "px",
            "-webkit-mask-size": this.boxWidth + "px " + this.boxHeight + "px",
            position: "absolute",
            "z-index": 202
        });
        this.image3Holder.css({
            width: this.boxWidth + "px",
            height: this.boxHeight + "px",
            left: (this.imgWidth - this.boxWidth) / 2 + "px",
            top: (this.imgHeight - this.boxHeight) / 2 + "px",
            "-webkit-mask-size": this.boxWidth + "px " + this.boxHeight + "px",
            position: "absolute",
            "z-index": 202
        });
        this.addItem();
        var f = this;
        this.currentImageHolder = this.image0Holder;
        this.nextImageHolder =
            this.image1Holder;
        this.currentImage = 0;
        this.nextImage = 1;
        this.image0Holder.append(this.images[0]);
        this.image1Holder.append(this.images[(this.currentImage + 1) % this.images.length]);
        this.image2Holder.append(this.images[(this.currentImage + 2) % this.images.length]);
        this.image3Holder.append(this.images[(this.currentImage + 3) % this.images.length]);
        $(this.image0Holder.children().children()).css({
            left: -200,
            top: -200
        });
        $(this.image1Holder.children().children()).css({
            left: 0,
            top: -200
        });
        $(this.image2Holder.children().children()).css({
            left: 0,
            top: 0
        });
        $(this.image3Holder.children().children()).css({
            left: -100,
            top: 0
        });
        this.image0Holder.css({
            opacity: "0"
        });
        this.image1Holder.css({
            opacity: "0"
        });
        this.image2Holder.css({
            opacity: "0"
        });
        this.image3Holder.css({
            opacity: "1"
        });
        f = this;
        this.timer1 = setTimeout(e, this.interval)
    }
}
initEmbeddedSlideshow.prototype.addItem = function() {
    for (var a = 0; a < this.photos.length; a++) {
        var b = $("<div></div>");
        b.css({
            width: this.boxWidth + "px",
            height: this.boxHeight + "px"
        });
        image = $("<img style='position : absolute;' class = 'mask' data-mask=\"../style/icon/centerblur.png\"/>");
        image.remove();
        var c = this.photos[a].Image;
        !0 == isFlipPdf && (c = "." + c);
        image.attr("src", c);
        image.css({
            left: "0px",
            top: "0px"
        });
        b.append(image);
        this.images[a] = b
    }
};
initEmbeddedSlideshow.prototype.onResize = function(a, b) {
    this.pw = a;
    this.ph = b;
    this.imgWidth = this.config.width * this.pw;
    this.imgHeight = this.config.height * this.ph;
    this.boxWidth = this.imgWidth - 8;
    this.boxHeight = this.imgHeight - 8;
    this.background.css({
        width: this.imgWidth,
        height: this.imgHeight
    });
    this.setPosition()
};
initEmbeddedSlideshow.prototype.setPosition = function() {
    this.x = this.config.x * this.pw;
    this.y = this.config.y * this.ph;
    this.background.css({
        left: this.x + "px",
        top: this.y + "px",
        position: "relative"
    });
    this.image0Holder.css({
        width: this.boxWidth + "px",
        height: this.boxHeight + "px",
        left: (this.imgWidth - this.boxWidth) / 2 + "px",
        top: (this.imgHeight - this.boxHeight) / 2 + "px",
        "-webkit-mask-size": this.boxWidth + "px " + this.boxHeight + "px",
        position: "absolute"
    });
    this.image1Holder.css({
        width: this.boxWidth + "px",
        height: this.boxHeight +
            "px",
        left: (this.imgWidth - this.boxWidth) / 2 + "px",
        top: (this.imgHeight - this.boxHeight) / 2 + "px",
        "-webkit-mask-size": this.boxWidth + "px " + this.boxHeight + "px",
        position: "absolute"
    });
    this.image2Holder.css({
        width: this.boxWidth + "px",
        height: this.boxHeight + "px",
        left: (this.imgWidth - this.boxWidth) / 2 + "px",
        top: (this.imgHeight - this.boxHeight) / 2 + "px",
        "-webkit-mask-size": this.boxWidth + "px " + this.boxHeight + "px",
        position: "absolute"
    });
    this.image3Holder.css({
        width: this.boxWidth + "px",
        height: this.boxHeight + "px",
        left: (this.imgWidth -
            this.boxWidth) / 2 + "px",
        top: (this.imgHeight - this.boxHeight) / 2 + "px",
        "-webkit-mask-size": this.boxWidth + "px " + this.boxHeight + "px",
        position: "absolute"
    })
};
initEmbeddedSlideshow.prototype.setImagePosition = function() {};
initEmbeddedSlideshow.prototype.show = function() {};
initEmbeddedSlideshow.prototype.hide = function() {};

function initCarousel(a, b, c, d, e) {
    this.config = $.extend({
        width: 200,
        height: 20,
        x: 0,
        y: 0,
        alpha: 1,
        images: null
    }, b);
    this.pw = c;
    this.ph = d;
    this.father = a;
    this.width = this.config.width * this.pw;
    this.height = this.config.height * this.ph;
    this.x = this.config.x * this.pw;
    this.y = this.config.y * this.ph;
    this.id = "carousel" + e;
    this.config.images != {} && (this.images = this.config.images.node, this.content = $("<div></div>"), this.content.css({
        position: "absolute",
        left: this.x + "px",
        top: this.y + "px",
        width: this.width + "px",
        height: this.height + "px",
        border: "0px solid red"
    }), this.currentIndex = 0, this.father.append(this.content), this.initImages(), this.startMove())
}
initCarousel.prototype.initImages = function() {
    if (!(void 0 == this.images || null == this.images || 0 == this.images.length)) {
        this.refreshImageAndPosition();
        this.carouselList = new CarouselImageList;
        this.carouselList.setResources(this.aImages);
        this.carouselList.setPositions(this.aPositions);
        for (var a = 0; a < this.aPositions.length; a++) this.carouselList.addInstance(new CarouselImage(this.content, this.aPositions[a]));
        this.carouselList.loadResources();
        this.carouselList.blurAll()
    }
};
initCarousel.prototype.refreshImageAndPosition = function() {
    if (!(void 0 == this.images || null == this.images || 0 == this.images.length)) {
        var a = this.width / 5;
        this.aImages = [];
        this.aPositions = [];
        var b = 5;
        5 > this.images.length && (b = Math.min(this.images.length, 3));
        switch (b) {
            case 1:
                this.aImages.push(this.images[0].url);
                this.aPositions.push(new CarouselPosition(0, 0, this.width, this.height, 1));
                break;
            case 2:
                this.aImages.push(this.images[0].url);
                this.aImages.push(this.images[(this.currentIndex + 1) % this.images.length].url);
                b = Math.ceil((this.width - a) / 2);
                this.aPositions.push(new CarouselPosition(b, 0, a, a, 2));
                b = Math.ceil((this.width - 3 * a + 5) / 2) + (2 * a - 5);
                this.aPositions.push(new CarouselPosition(b, 5, a - 5, a - 5, 1));
                break;
            case 3:
                this.aImages.push(this.images[(this.currentIndex - 1 + this.images.length) % this.images.length].url);
                this.aImages.push(this.images[this.currentIndex % this.images.length].url);
                this.aImages.push(this.images[(this.currentIndex + 1) % this.images.length].url);
                b = Math.ceil((this.width - 3 * a + 10) / 2);
                this.aPositions.push(new CarouselPosition(b,
                    5, a - 5, a - 5, 0));
                b = Math.ceil((this.width - a) / 2);
                this.aPositions.push(new CarouselPosition(b, 0, a, a, 2));
                b = Math.ceil((this.width - 3 * a + 10) / 2) + (2 * a - 5);
                this.aPositions.push(new CarouselPosition(b, 5, a - 5, a - 5, 1));
                break;
            case 5:
                this.aImages.push(this.images[(this.currentIndex - 2 + this.images.length) % this.images.length].url), this.aImages.push(this.images[(this.currentIndex - 1 + this.images.length) % this.images.length].url), this.aImages.push(this.images[this.currentIndex % this.images.length].url), this.aImages.push(this.images[(this.currentIndex +
                    1) % this.images.length].url), this.aImages.push(this.images[(this.currentIndex + 2) % this.images.length].url), b = Math.ceil((this.width - 5 * a + 20) / 2), this.aPositions.push(new CarouselPosition(b, 5, a - 5, a - 5, 0)), b = Math.ceil((this.width - 3 * a + 10) / 2), this.aPositions.push(new CarouselPosition(b, 5, a - 5, a - 5, 2)), b = Math.ceil((this.width - a) / 2), this.aPositions.push(new CarouselPosition(b, 0, a, a, 3)), b = Math.ceil((this.width - 3 * a + 10) / 2) + (2 * a - 5), this.aPositions.push(new CarouselPosition(b, 5, a - 5, a - 5, 2)), b = Math.ceil((this.width - 5 *
                    a + 20) / 2) + (4 * a - 15), this.aPositions.push(new CarouselPosition(b, 5, a - 5, a - 5, 1))
        }
    }
};
initCarousel.prototype.startMove = function() {
    var a = this;
    this.timer = window.setInterval(function() {
        a.move(1)
    }, 2E3)
};
initCarousel.prototype.stopMove = function() {
    window.clearInterval(this.timer)
};
initCarousel.prototype.move = function(a) {
    this.currentIndex += a;
    0 > this.currentIndex && (this.currentIndex += this.images.length);
    this.currentIndex %= this.images.length;
    var b = [];
    switch (this.carouselList.instanceCount()) {
        case 1:
            b.push(this.images[0].url);
            break;
        case 2:
            b.push(this.images[this.currentIndex % this.images.length].url);
            b.push(this.images[(this.currentIndex + 1) % this.images.length].url);
            break;
        case 3:
            b.push(this.images[(this.currentIndex - 1 + this.images.length) % this.images.length].url);
            b.push(this.images[this.currentIndex %
                this.images.length].url);
            b.push(this.images[(this.currentIndex + 1) % this.images.length].url);
            break;
        case 5:
            b.push(this.images[(this.currentIndex - 2 + this.images.length) % this.images.length].url), b.push(this.images[(this.currentIndex - 1 + this.images.length) % this.images.length].url), b.push(this.images[this.currentIndex % this.images.length].url), b.push(this.images[(this.currentIndex + 1) % this.images.length].url), b.push(this.images[(this.currentIndex + 2) % this.images.length].url)
    }
    this.carouselList.setResources(b);
    this.carouselList.move(a)
};
initCarousel.prototype.onResize = function(a, b) {
    this.pw = a;
    this.ph = b;
    this.width = this.config.width * this.pw;
    this.height = this.config.height * this.ph;
    this.content.css({
        width: this.width + "px",
        height: this.height + "px"
    });
    this.setPosition();
    this.refreshImageAndPosition();
    this.carouselList.setResources(this.aImages);
    this.carouselList.setPositions(this.aPositions);
    this.carouselList.resizeAll()
};
initCarousel.prototype.setPosition = function() {
    this.x = this.config.x * this.pw;
    this.y = this.config.y * this.ph;
    this.content.css({
        left: this.x + "px",
        top: this.y + "px"
    })
};

function CarouselImage(a, b) {
    this.father = a;
    this.instance = $('<img style="position:absolute"></img');
    this.father.append(this.instance);
    this.imageHeight = this.imageWidth = 0;
    var c = this;
    this.instance.load(function() {
        CarouselImage.prototype.onImageLoad.apply(c, arguments)
    });
    this.setArea(b.left, b.top, b.width, b.height);
    this.setZindex(b.zindex)
}
CarouselImage.prototype = {
    blur: function(a) {
        !0 == a ? this.instance.css({
            "-webkit-filter": "blur(2px)",
            "-moz-filter": "blur(2px)",
            "-o-filter": "blur(2px)",
            "-ms-filter": "blur(2px)",
            filter: "blur(2px)"
        }) : this.instance.css({
            "-webkit-filter": "blur(0px)",
            "-moz-filter": "blur(0px)",
            "-o-filter": "blur(0px)",
            "-ms-filter": "blur(0px)",
            filter: "blur(0px)"
        })
    },
    setSrc: function(a) {
        this.instance[0].src = a
    },
    getSrc: function() {
        return this.instance[0].src
    },
    onImageLoad: function() {
        var a = this.instance[0];
        this.imageWidth = a.naturalWidth;
        this.imageHeight = a.naturalHeight;
        this.instance.css({
            height: Math.ceil(this.imageHeight * this.instance.width() / this.imageWidth) + "px"
        })
    },
    move: function(a, b) {
        this.instance.css({
            left: a + "px",
            top: b + "px"
        })
    },
    resize: function(a, b) {
        var c = b;
        0 < this.imageWidth && 0 < this.imageHeight && (c = Math.ceil(this.imageHeight * this.instance.width() / this.imageWidth));
        this.instance.css({
            width: a + "px",
            height: c + "px"
        })
    },
    setArea: function(a, b, c, d) {
        this.move(a, b);
        this.resize(c, d)
    },
    setZindex: function(a) {
        this.instance.css({
            "z-index": a
        })
    },
    gotoPosition: function(a) {
        var b =
            a.height;
        0 < this.imageWidth && 0 < this.imageHeight && (b = Math.ceil(this.imageHeight * a.width / this.imageWidth));
        var c = this;
        this.instance.animate({
            left: a.left,
            top: a.top,
            width: a.width,
            height: b
        }, 500, function() {
            c.setZindex(a.zindex)
        })
    }
};

function CarouselPosition(a, b, c, d, e) {
    this.left = Math.ceil(a);
    this.top = Math.ceil(b);
    this.width = Math.ceil(c);
    this.height = Math.ceil(d);
    this.zindex = e
}
CarouselPosition.prototype = {
    asString: function() {
        return "left:" + this.left + ",top:" + this.top + ",width:" + this.width + ",height:" + this.height + ",z-index:" + this.zindex
    }
};

function CarouselImageList() {
    this.imageResources = [];
    this.imagePositions = [];
    this.imageInstances = []
}
CarouselImageList.prototype = {
    setResources: function(a) {
        for (; 0 < this.imageResources.length;) this.imageResources.pop();
        for (var b = 0; b < a.length; b++) this.imageResources.push(a[b])
    },
    setPositions: function(a) {
        for (; 0 < this.imagePositions.length;) this.imagePositions.pop();
        for (var b = 0; b < a.length; b++) this.imagePositions.push(a[b])
    },
    addInstance: function(a) {
        this.imageInstances.push(a)
    },
    instanceCount: function() {
        return this.imageInstances.length
    },
    loadResources: function() {
        for (var a = this.imageInstances.length, b = 0; b < a; b++) {
            var c =
                this.imageInstances[b];
            c.getSrc() != this.imageResources[b] && c.setSrc(this.imageResources[b])
        }
    },
    move: function(a) {
        var b = this.imageInstances.length;
        if (0 != b) {
            for (var c = this.imageInstances[0], d = 0; d < b; d++) {
                var e = d + a;
                0 > e && (e += b);
                e >= b && (e %= b);
                var f = this.imageInstances[e];
                this.imageInstances[d] = 0 == e ? c : f
            }
            for (d = 0; d < b; d++) this.imageInstances[d].gotoPosition(this.imagePositions[d]);
            this.loadResources();
            this.blurAll()
        }
    },
    resizeAll: function() {
        var a = this.imageInstances.length;
        if (0 != a)
            for (var b = 0; b < a; b++) this.imageInstances[b].gotoPosition(this.imagePositions[b])
    },
    blurAll: function() {
        for (var a = this.imageInstances.length, b = Math.floor((a + 1) / 2) - 1, c = 0; c < a; c++) {
            var d = this.imageInstances[c];
            c != b ? d.blur(!0) : d.blur(!1)
        }
    }
};

function initDynamicShow(a, b, c, d, e) {
    this.config = $.extend({
        width: 200,
        height: 20,
        x: 0,
        y: 0,
        alpha: 1,
        images: null
    }, b);
    this.pw = c;
    this.ph = d;
    this.father = a;
    this.width = this.config.width * this.pw;
    this.childWidth = Math.ceil(this.width / 4);
    this.height = this.config.height * this.ph;
    this.x = this.config.x * this.pw;
    this.y = this.config.y * this.ph;
    this.borderWidth = this.config.borderWidth;
    this.id = "dynshow" + e;
    this.config.images != {} && (this.images = this.config.images.Image, this.maxZindex = this.images.length + 1, this.content = $("<div></div>"),
        this.content.css({
            position: "absolute",
            left: this.x + "px",
            top: this.y + "px",
            width: this.width + "px",
            height: this.height + "px",
            border: "0px solid red"
        }), this.currentIndex = 0, this.father.append(this.content), this.init())
}
initDynamicShow.prototype = {
    init: function() {
        this.imageInstances = [];
        if (0 != this.images.length) {
            for (var a = 0; a < this.images.length; a++) {
                var b = new ImageInstance(this, a);
                b.setImage(this.images[a].Image);
                this.content.append(b);
                this.imageInstances.push(b)
            }
            this.currentIndex = -1;
            this.initButtons()
        }
    },
    initButtons: function() {
        this.leftButton = $('<img src="' + uiBaseURL + 'pre_image.png" style="position:absolute;z-index:1000"></img>');
        this.rightButton = $('<img src="' + uiBaseURL + 'next_image.png" style="position:absolute;z-index:1000"></img>');
        this.setButtonPosition();
        var a = this;
        this.leftButton.bind(_event._click, function() {
            initDynamicShow.prototype.preImage.apply(a, arguments)
        });
        this.rightButton.bind(_event._click, function() {
            initDynamicShow.prototype.nextImage.apply(a, arguments)
        });
        isTouchDevice() || (this.leftButton.css({
            display: "none"
        }), this.rightButton.css({
            display: "none"
        }));
        this.content.append(this.leftButton);
        this.content.append(this.rightButton);
        this.content.bind(_event._enter, function() {
            a.leftButton.css({
                display: "block"
            });
            a.rightButton.css({
                display: "block"
            })
        });
        this.content.bind(_event._leave, function() {
            a.leftButton.css({
                display: "none"
            });
            a.rightButton.css({
                display: "none"
            })
        })
    },
    preImage: function() {
        -1 != this.currentIndex && this.imageInstances[this.currentIndex].hide();
        this.currentIndex = (this.currentIndex - 1 + this.images.length) % this.images.length;
        this.imageInstances[this.currentIndex].show()
    },
    nextImage: function() {
        -1 != this.currentIndex && this.imageInstances[this.currentIndex].hide();
        this.currentIndex = (this.currentIndex + 1) % this.images.length;
        this.imageInstances[this.currentIndex].show()
    },
    showImage: function(a) {
        -1 != a && (-1 != this.currentIndex && this.imageInstances[this.currentIndex].hide(), this.currentIndex = a, this.imageInstances[this.currentIndex].show())
    },
    setButtonPosition: function() {
        var a = (this.height - 32) / 2;
        this.leftButton.css({
            left: "0px",
            top: a + "px"
        });
        this.rightButton.css({
            right: "0px",
            top: a + "px"
        })
    },
    onResize: function(a, b) {
        this.pw = a;
        this.ph = b;
        this.width = this.config.width * this.pw;
        this.height = this.config.height * this.ph;
        this.content.css({
            width: this.width + "px",
            height: this.height + "px"
        });
        this.setPosition();
        this.setButtonPosition();
        this.childWidth = Math.ceil(this.width / 4);
        for (var c = 0; c < this.imageInstances.length; c++) this.imageInstances[c].onResize()
    },
    setPosition: function() {
        this.x = this.config.x * this.pw;
        this.y = this.config.y * this.ph;
        this.content.css({
            left: this.x + "px",
            top: this.y + "px"
        })
    }
};

function ImageInstance(a, b) {
    var c = this;
    this.father = a;
    this.zIndex = b;
    this.imageHeight = this.imageWidth = 0;
    this.height = this.width = this.father.childWidth;
    this.borderWidth = Math.ceil(this.father.borderWidth / 2);
    this.maxLeft = this.father.width - this.width;
    this.maxTop = this.father.height - this.height;
    var d = randomPosition(this.maxLeft, this.maxTop);
    this.rotation = d.rotation;
    this.animate = [];
    this.instance = $("<img></img>");
    this.instance.css({
        position: "absolute",
        left: d.left + "px",
        top: d.top + "px",
        width: this.width + "px",
        height: this.height +
            "px"
    });
    this.instance.rotate(this.rotation);
    this.setBorderWidth(this.borderWidth);
    this.initShadow();
    this.instance.load(function() {
        ImageInstance.prototype.onImageLoad.apply(c, arguments)
    });
    this.instance.bind(_event._click, function() {
        c.father.currentIndex == c.zIndex ? (c.hide(), c.father.currentIndex = -1) : c.father.showImage(c.zIndex)
    });
    a.content.append(this.instance)
}
ImageInstance.prototype = {
    initShadow: function() {
        this.instance.css({
            "-moz-box-shadow": "2px 2px 4px #252525",
            "box-shadow": "2px 2px 4px #252525",
            "-webkit-box-shadow": "2px 2px 4px #252525",
            "-o-box-shadow": "2px 2px 4px #252525"
        })
    },
    onImageLoad: function() {
        var a = this.instance[0];
        this.imageWidth = a.naturalWidth;
        this.imageHeight = a.naturalHeight;
        this.height = Math.ceil(this.imageHeight * this.width / this.imageWidth);
        this.maxTop = this.father.height - this.height;
        this.instance.css({
            height: this.height + "px"
        })
    },
    setImage: function(a) {
        this.instance.attr("src",
            a)
    },
    onResize: function() {
        this.width = this.father.childWidth;
        this.height = 0 < this.imageWidth && 0 < this.imageHeight ? Math.ceil(this.imageHeight * this.width / this.imageWidth) : this.width;
        this.maxLeft = this.father.width - this.width;
        this.maxTop = this.father.height - this.height;
        if (this.zIndex != this.father.currentIndex) {
            var a = this.getPosition(),
                b = this.width / a.width;
            a.left = Math.floor(a.left * b);
            a.top = Math.floor(a.top * b);
            a.width = this.width;
            a.height = this.height
        } else a = this.getTopPosition();
        this.moveTo(a)
    },
    resize: function(a,
        b) {
        this.width = a;
        this.height = b;
        this.instance.css({
            width: this.width + "px",
            height: this.height + "px"
        })
    },
    move: function() {
        this.instance.css({
            left: this.left + "px",
            top: this.top + "px"
        })
    },
    setZindex: function(a) {
        this.instance.css({
            "z-index": a
        })
    },
    setBorderWidth: function(a) {
        this.instance.css({
            border: a + "px solid white"
        })
    },
    getTopPosition: function() {
        if (this.imageWidth / this.imageHeight > this.father.width / this.father.height) var a = this.father.width,
            b = a * this.imageHeight / this.imageWidth,
            c = (this.father.height - b) / 2 - this.father.borderWidth,
            d = 0,
            e = 0;
        else b = this.father.height, a = b * this.imageWidth / this.imageHeight, e = c = 0, d = (this.father.width - a) / 2 - this.father.borderWidth;
        return new DynImagePostion(d, c, a, b, e)
    },
    show: function() {
        if (!(0 == this.imageWidth || 0 == this.imageHeight)) {
            var a = this.getTopPosition();
            a.borderWidth = this.father.borderWidth;
            this.setZindex(this.father.maxZindex);
            this.moveTo(a, function() {
                this.setZindex(this.father.maxZindex)
            })
        }
    },
    hide: function() {
        if (!(0 == this.imageWidth || 0 == this.imageHeight)) {
            var a = randomPosition(this.maxLeft, this.maxTop),
                a = new DynImagePostion(a.left, a.top, this.width, this.height, a.rotation);
            this.setZindex(this.father.maxZindex - 1);
            a.borderWidth = this.borderWidth;
            this.moveTo(a, function() {
                this.setZindex(this.zIndex)
            })
        }
    },
    moveTo: function(a, b) {
        var c = null,
            d = 0,
            e = this,
            f = window.setInterval(function() {
                !1 == e.isInAnimate(f) && e.animate.push(f);
                if (!1 != e.isRunning(f)) {
                    null == c && (c = e.getPosition());
                    var j = $.easing.swing(null, d, c.left, a.left - c.left, 20),
                        g = $.easing.swing(null, d, c.top, a.top - c.top, 20),
                        k = $.easing.swing(null, d, c.width, a.width -
                            c.width, 20),
                        m = $.easing.swing(null, d, c.height, a.height - c.height, 20),
                        n = $.easing.swing(null, d, c.rotation, a.rotation - c.rotation, 20),
                        l = $.easing.swing(null, d, c.borderWidth, a.borderWidth - c.borderWidth, 20);
                    e.instance.css({
                        left: j + "px",
                        top: g + "px",
                        width: k + "px",
                        height: m + "px"
                    });
                    e.instance.rotate(n);
                    e.setBorderWidth(l);
                    e.rotation = n;
                    20 == d++ && (window.clearInterval(f), e.animate.shift(), void 0 != b && b.apply(e, arguments))
                }
            }, 20)
    },
    isInAnimate: function(a) {
        for (var b = 0; b < this.animate.length; b++)
            if (a == this.animate[b]) return !0;
        return !1
    },
    isRunning: function(a) {
        return a == this.animate[0]
    },
    getPosition: function() {
        var a = parseInt(this.instance.css("left").replace("px", "")),
            b = parseInt(this.instance.css("top").replace("px", "")),
            c = this.instance.width(),
            d = this.instance.height(),
            a = new DynImagePostion(a, b, c, d, this.rotation),
            b = this.instance.css("border"),
            b = parseInt(b.replace("px solid white"));
        a.borderWidth = b;
        return a
    }
};

function DynImagePostion(a, b, c, d, e) {
    this.left = a;
    this.top = b;
    this.width = c;
    this.height = d;
    this.rotation = e
}
DynImagePostion.prototype = {
    asString: function() {
        return "left:" + this.left + ",top:" + this.top + ",width:" + this.width + ",height:" + this.height + ",rotation:" + this.rotation
    }
};

function randomPosition(a, b) {
    var c = Math.floor(Math.random() * a),
        d = Math.floor(Math.random() * b),
        e = 90 - Math.floor(180 * Math.random());
    return {
        left: c,
        top: d,
        rotation: e
    }
};

function initFlipJump(a, b, c, d, e) {
    this.config = $.extend({
        width: 200,
        height: 20,
        x: 0,
        y: 0,
        images: null
    }, b);
    this.pw = c;
    this.ph = d;
    this.father = a;
    this.width = this.config.width * this.pw;
    this.height = this.config.height * this.ph;
    this.x = this.config.x * this.pw;
    this.y = this.config.y * this.ph;
    this.id = "jump" + e;
    this.itemHeight = Math.floor(0.7 * this.height);
    this.config.images != {} && (this.images = this.config.images.Image, this.imageCount = this.images.length, this.minZindex = 0, this.maxZindex = this.images.length + 1, a = !0 == this.config.addBorder ?
        1 : 0, this.content = $("<div></div>"), this.content.css({
            position: "absolute",
            left: this.x + "px",
            top: this.y + "px",
            width: this.width + "px",
            height: this.height + "px",
            border: a + "px solid " + colorTo0x(this.config.borderColor)
        }), !0 == this.config.addBackground && this.content.css({
            background: colorTo0x(this.config.backgroundColor),
            opacity: this.config.backgroundAlpha
        }), this.father.append(this.content), this.init())
}
initFlipJump.prototype = {
    init: function() {
        this.busy = !1;
        this.imageItems = [];
        for (var a = 0; a < this.imageCount; a++) {
            var b = new FlipJumpItem(this, 0 == a ? !1 : !0);
            b.setImage(this.images[a].Image);
            this.imageItems.push(b)
        }
        this.resetZindex();
        this.resetJumpEvent();
        1 < this.imageCount && this.initButtons()
    },
    initButtons: function() {
        this.leftButton = $('<img src="' + uiBaseURL + 'pre_image.png" style="position:absolute;z-index:1000"></img>');
        this.rightButton = $('<img src="' + uiBaseURL + 'next_image.png" style="position:absolute;z-index:1000"></img>');
        this.setButtonPosition();
        var a = this;
        this.leftButton.bind(_event._click, function() {
            initFlipJump.prototype.preImage.apply(a, arguments)
        });
        this.rightButton.bind(_event._click, function() {
            initFlipJump.prototype.nextImage.apply(a, arguments)
        });
        isTouchDevice() || (this.leftButton.css({
            display: "none"
        }), this.rightButton.css({
            display: "none"
        }));
        this.content.append(this.leftButton);
        this.content.append(this.rightButton);
        this.content.bind(_event._enter, function() {
            a.leftButton.css({
                display: "block"
            });
            a.rightButton.css({
                display: "block"
            })
        });
        this.content.bind(_event._leave, function() {
            a.leftButton.css({
                display: "none"
            });
            a.rightButton.css({
                display: "none"
            })
        })
    },
    preImage: function() {
        if (!0 != this.busy) {
            this.busy = !0;
            var a = this.imageItems[this.imageCount - 1],
                b = this;
            this.imageItems[0].randomRotate();
            a.rotateTo(0, 40);
            a.jumpUp(function() {
                a.setZindex(b.maxZindex);
                a.jumpDown(function() {
                    b.imageItems.pop();
                    b.imageItems.unshift(a);
                    b.resetZindex();
                    b.busy = !1
                })
            })
        }
    },
    nextImage: function() {
        if (!0 != this.busy) {
            this.busy = !0;
            var a = this.imageItems[0],
                b = this;
            this.imageItems[1].rotateTo(0);
            a.randomRotate(40);
            a.jumpUp(function() {
                a.setZindex(b.minZindex);
                a.jumpDown(function() {
                    b.imageItems.shift();
                    b.imageItems.push(a);
                    b.resetZindex();
                    b.busy = !1
                })
            })
        }
    },
    resetZindex: function() {
        for (var a = 0; a < this.imageItems.length; a++) this.imageItems[a].setZindex(this.imageItems.length - a)
    },
    resetJumpEvent: function() {
        for (var a = this, b = 0; b < this.imageItems.length; b++) this.imageItems[b].instance.bind(_event._click, function() {
            initFlipJump.prototype.nextImage.apply(a, arguments)
        })
    },
    setButtonPosition: function() {
        var a =
            (this.height - 32) / 2;
        this.leftButton.css({
            left: "0px",
            top: a + "px"
        });
        this.rightButton.css({
            right: "0px",
            top: a + "px"
        })
    },
    onResize: function(a, b) {
        this.pw = a;
        this.ph = b;
        this.width = this.config.width * this.pw;
        this.height = this.config.height * this.ph;
        this.content.css({
            width: this.width + "px",
            height: this.height + "px"
        });
        this.setPosition();
        this.setButtonPosition();
        this.itemHeight = Math.floor(0.7 * this.height);
        for (var c = 0; c < this.imageItems.length; c++) this.imageItems[c].resize()
    },
    setPosition: function() {
        this.x = this.config.x * this.pw;
        this.y = this.config.y * this.ph;
        this.content.css({
            left: this.x + "px",
            top: this.y + "px"
        })
    }
};

function FlipJumpItem(a, b) {
    var c = this;
    this.father = a;
    this.initRotate = b;
    this.rotation = 0;
    this.height = this.width = a.itemHeight;
    this.imageHeight = this.imageWidth = 0;
    this.instance = $("<img></img>");
    this.instance.css({
        position: "absolute",
        left: "0px",
        top: "0px",
        width: this.width + "px",
        height: this.height + "px",
        border: "2px solid white"
    });
    this.instance.load(function() {
        FlipJumpItem.prototype.onImageLoad.apply(c, arguments)
    });
    this.initShadow();
    a.content.append(this.instance)
}
FlipJumpItem.prototype = {
    initShadow: function() {
        this.instance.css({
            "-moz-box-shadow": "2px 2px 4px #252525",
            "box-shadow": "2px 2px 4px #252525",
            "-webkit-box-shadow": "2px 2px 4px #252525",
            "-o-box-shadow": "2px 2px 4px #252525"
        })
    },
    getRandomRotation: function() {
        return 60 - Math.ceil(120 * Math.random())
    },
    onImageLoad: function() {
        var a = this.instance[0];
        this.imageWidth = a.naturalWidth;
        this.imageHeight = a.naturalHeight;
        this.width = Math.ceil(this.height * this.imageWidth / this.imageHeight);
        this.left = Math.ceil((this.father.width -
            this.width) / 2);
        this.top = Math.ceil((this.father.height - this.height) / 2);
        this.instance.css({
            left: this.left + "px",
            top: this.top + "px",
            width: this.width + "px",
            height: this.height + "px"
        });
        !0 == this.initRotate && (a = this.getRandomRotation(), this.instance.rotate(a), this.rotation = a)
    },
    setImage: function(a) {
        this.instance.attr("src", a)
    },
    setZindex: function(a) {
        this.instance.css({
            "z-index": a
        })
    },
    randomRotate: function(a) {
        this.rotateTo(this.getRandomRotation(), a)
    },
    rotateTo: function(a, b) {
        var c = this.rotation,
            d = 20;
        void 0 != b && (d =
            b);
        var e = this,
            f = 0,
            j = window.setInterval(function() {
                var b = $.easing.swing(null, f, c, a - c, d);
                e.instance.rotate(b);
                e.rotation = b;
                f++ >= d && window.clearInterval(j)
            }, 20)
    },
    jumpUp: function(a) {
        this.instance.animate({
            top: Math.floor(1.3 * -this.height)
        }, 400, a)
    },
    jumpDown: function(a) {
        this.instance.animate({
            top: this.top
        }, 400, a)
    },
    resize: function() {
        0 == this.imageWith && 0 == this.imageHeight || (this.height = this.father.itemHeight, this.width = Math.ceil(this.height * this.imageWidth / this.imageHeight), this.left = Math.ceil((this.father.width -
            this.width) / 2), this.top = Math.ceil((this.father.height - this.height) / 2), this.instance.animate({
            left: this.left,
            top: this.top,
            width: this.width,
            height: this.height
        }, 400))
    }
};

function initRotate3D(a, b, c, d, e) {
    this.config = $.extend({
        width: 200,
        height: 20,
        x: 0,
        y: 0,
        images: null
    }, b);
    this.pw = c;
    this.ph = d;
    this.father = a;
    this.width = this.config.width * this.pw;
    this.height = this.config.height * this.ph;
    this.x = this.config.x * this.pw;
    this.y = this.config.y * this.ph;
    this.id = "3d" + e;
    this.config.images != {} && (this.images = this.config.images.Image, this.topZindex = this.imageCount = this.images.length, a = !0 == this.config.addBorder ? 1 : 0, this.content = $("<div></div>"), this.content.css({
        position: "absolute",
        overflow: "hidden",
        left: this.x + "px",
        top: this.y + "px",
        width: this.width + "px",
        height: this.height + "px",
        border: a + "px solid " + colorTo0x(this.config.borderColor)
    }), !0 == this.config.addBackground && this.content.css({
        background: colorTo0x(this.config.backgroundColor),
        opacity: this.config.backgroundAlpha / 100
    }), this.father.append(this.content), this.init(), this.rotateTimer = -1, this.step = 0)
}
initRotate3D.prototype = {
    init: function() {
        this.imageItems = [];
        for (var a = 0; a < this.imageCount; a++) {
            var b = new Rotate3DItem(this, a);
            b.setImage(this.images[a].Image);
            this.imageItems.push(b)
        }
        this.imageItems[0].show();
        this.currentIndex = 0;
        1 < this.imageCount && this.initButtons()
    },
    initButtons: function() {
        this.leftButton = $('<img src="' + uiBaseURL + 'pre_image.png" style="position:absolute;z-index:1000"></img>');
        this.rightButton = $('<img src="' + uiBaseURL + 'next_image.png" style="position:absolute;z-index:1000"></img>');
        this.setButtonPosition();
        var a = this;
        this.leftButton.bind(_event._down, function() {
            initRotate3D.prototype.preImage.apply(a, arguments)
        });
        this.rightButton.bind(_event._down, function() {
            initRotate3D.prototype.nextImage.apply(a, arguments)
        });
        this.leftButton.bind(_event._end, function() {
            initRotate3D.prototype.stopRotate.apply(a, arguments)
        });
        this.rightButton.bind(_event._end, function() {
            initRotate3D.prototype.stopRotate.apply(a, arguments)
        });
        this.leftButton.bind(_event._leave, function() {
            initRotate3D.prototype.stopRotate.apply(a,
                arguments)
        });
        this.rightButton.bind(_event._leave, function() {
            initRotate3D.prototype.stopRotate.apply(a, arguments)
        });
        isTouchDevice() || (this.leftButton.css({
            display: "none"
        }), this.rightButton.css({
            display: "none"
        }));
        this.content.append(this.leftButton);
        this.content.append(this.rightButton);
        this.content.bind(_event._enter, function() {
            a.leftButton.css({
                display: "block"
            });
            a.rightButton.css({
                display: "block"
            })
        });
        this.content.bind(_event._leave, function() {
            a.leftButton.css({
                display: "none"
            });
            a.rightButton.css({
                display: "none"
            })
        })
    },
    setButtonPosition: function() {
        var a = (this.height - 32) / 2;
        this.leftButton.css({
            left: "0px",
            top: a + "px"
        });
        this.rightButton.css({
            right: "0px",
            top: a + "px"
        })
    },
    onResize: function(a, b) {
        this.pw = a;
        this.ph = b;
        this.width = this.config.width * this.pw;
        this.height = this.config.height * this.ph;
        this.content.css({
            width: this.width + "px",
            height: this.height + "px"
        });
        this.setPosition();
        this.setButtonPosition();
        for (var c = 0; c < this.imageItems.length; c++) this.imageItems[c].resize()
    },
    setPosition: function() {
        this.x = this.config.x * this.pw;
        this.y =
            this.config.y * this.ph;
        this.content.css({
            left: this.x + "px",
            top: this.y + "px"
        })
    },
    preImage: function() {
        this.step = -1;
        this.startRotate()
    },
    nextImage: function() {
        this.step = 1;
        this.startRotate()
    },
    startRotate: function() {
        var a = this;
        this.doRotate();
        window.clearInterval(this.rotateTimer);
        this.rotateTimer = window.setInterval(function() {
            initRotate3D.prototype.doRotate.apply(a, arguments)
        }, 120)
    },
    doRotate: function() {
        var a = this.currentIndex;
        this.currentIndex += this.step;
        0 > this.currentIndex && (this.currentIndex += this.imageCount);
        this.currentIndex >= this.imageCount && (this.currentIndex %= this.imageCount);
        this.imageItems[a].hide();
        this.imageItems[this.currentIndex].show()
    },
    stopRotate: function() {
        window.clearInterval(this.rotateTimer);
        this.step = 0;
        this.rotateTimer = -1
    }
};

function Rotate3DItem(a, b) {
    var c = this;
    this.father = a;
    this.zIndex = b;
    this.height = this.father.height;
    this.width = this.father.width;
    this.imageHeight = this.imageWidth = 0;
    this.instance = $("<img></img>");
    this.instance.css({
        position: "absolute",
        left: "0px",
        top: "0px",
        width: this.width + "px",
        height: this.height + "px"
    });
    this.setZindex(b);
    this.initShadow();
    this.instance.load(function() {
        Rotate3DItem.prototype.onImageLoad.apply(c, arguments)
    });
    a.content.append(this.instance)
}
Rotate3DItem.prototype = {
    initShadow: function() {
        var a = this.father.config;
        !0 == a.sh && this.instance.css({
            "box-shadow": a.sx + "px " + a.sy + "px " + a.se + "px " + colorTo0x(a.sr),
            "-moz-box-shadow": a.sx + "px " + a.sy + "px " + a.se + "px " + colorTo0x(a.sr),
            "-webkit-box-shadow": a.sx + "px " + a.sy + "px " + a.se + "px " + colorTo0x(a.sr),
            "-o-box-shadow": a.sx + "px " + a.sy + "px " + a.se + "px " + colorTo0x(a.sr)
        })
    },
    onImageLoad: function() {
        var a = this.instance[0];
        this.imageWidth = a.naturalWidth;
        this.imageHeight = a.naturalHeight;
        this.height = Math.floor(0.9 *
            this.father.height);
        this.width = Math.ceil(this.height * this.imageWidth / this.imageHeight);
        this.left = Math.ceil((this.father.width - this.width) / 2);
        this.top = Math.ceil((this.father.height - this.height) / 2);
        this.instance.css({
            left: this.left + "px",
            top: this.top + "px",
            width: this.width + "px",
            height: this.height + "px"
        })
    },
    setImage: function(a) {
        this.instance.attr("src", a)
    },
    setZindex: function(a) {
        this.instance.css({
            "z-index": a
        })
    },
    show: function() {
        this.setZindex(this.father.topZindex)
    },
    hide: function() {
        this.setZindex(this.zIndex)
    },
    resize: function() {
        0 == this.imageWidth && 0 == this.imageHeight || (this.height = Math.floor(0.9 * this.father.height), this.width = Math.ceil(this.height * this.imageWidth / this.imageHeight), this.left = Math.ceil((this.father.width - this.width) / 2), this.top = Math.ceil((this.father.height - this.height) / 2), this.instance.animate({
            left: this.left,
            top: this.top,
            width: this.width,
            height: this.height
        }, 400))
    }
};

function initFlashSwf(a, b, c, d) {
    this.config = $.extend({
        width: 0.2,
        height: 0.2,
        x: 0.2,
        y: 0.2,
        alpha: 1,
        src: null
    }, b);
    this.father = a;
    this.pw = c;
    this.ph = d;
    this.width = c * this.config.width;
    this.height = d * this.config.height;
    this.left = c * this.config.x;
    this.top = d * this.config.y;
    this.content = $("<div></div>");
    this.content.css({
        position: "absolute",
        left: this.left,
        top: this.top,
        width: this.width,
        height: this.height
    });
    a.append(this.content);
    isTouchDevice() || (!0 == isFlipPdf && (this.config.src = "." + this.config.src), this.content.flash({
        swf: this.config.src,
        width: this.width + "px",
        height: this.height + "px",
        wmode: "transparent"
    }))
}
initFlashSwf.prototype = {
    onResize: function(a, b) {
        this.pw = a;
        this.ph = b;
        this.width = this.config.width * a;
        this.height = this.config.height * b;
        this.content.css({
            width: this.width + "px",
            height: this.height + "px"
        });
        this.content.flash().remove();
        this.content.flash({
            swf: this.config.src,
            width: this.width + "px",
            height: this.height + "px",
            wmode: "transparent"
        });
        this.setPosition(this.config.x * a, this.config.y * b)
    },
    setPosition: function(a, b) {
        this.content.css({
            left: a + "px",
            top: b + "px"
        })
    },
    hide: function() {
        this.content.html("")
    },
    show: function() {
        this.content.flash({
            swf: this.config.src,
            width: this.width + "px",
            height: this.height + "px",
            wmode: "transparent"
        })
    }
};
(function(a) {
    var b = 0;
    a.fn.printArea = function() {
        var c = a(this);
        a("iframe#printArea_" + b).remove();
        b++;
        var d = "printArea_" + b;
        iframe = document.createElement("IFRAME");
        a(iframe).attr({
            style: "position:absolute;width:0px;height:0px;left:-500px;top:-500px;",
            id: d
        });
        document.body.appendChild(iframe);
        var e = iframe.contentWindow.document;
        a(document).find("link").filter(function() {
            return "stylesheet" == a(this).attr("rel").toLowerCase()
        }).each(function() {
            e.write('<link type="text/css" rel="stylesheet" href="' + a(this).attr("href") +
                '" >')
        });
        e.write('<div class="' + a(c).attr("class") + '">' + a(c).html() + "</div>");
        e.close();
        c = iframe.contentWindow;
        c.close();
        c.focus();
        c.print()
    }
})(jQuery);
var textWidth = function(a, b) {
    var c = $("<pre>" + a + "</pre>").css({
        color: bookConfig.iconColor,
        display: "none",
        "font-size": b.size,
        "font-family": b.fontName
    });
    $("body").append(c);
    var d = Point(c.width(), c.height());
    c.remove();
    return d
};

function label(a, b) {
    this.labelBox = $('<div style = "position : absolute;font-family:Tahoma,Georgia,Serif;font-size:12px">' + a + "</div>");
    this.caption = a;
    this.fontSize = "12px";
    this.fontColor = "#f0f0f0";
    this.fontName = "Tahoma";
    var c = textWidth(a, {
        size: this.fontSize,
        fontName: this.fontName
    });
    this.width = c.x;
    this.height = c.y;
    b.append(this.labelBox)
}
label.prototype.getWidth = function() {
    return this.width
};
label.prototype.getHeight = function() {
    return this.height
};
label.prototype.getCaption = function() {
    return this.caption
};
label.prototype.setCaption = function(a) {
    this.caption = a;
    this.labelBox[0].innerHTML = a;
    a = textWidth(a, {
        size: this.fontSize,
        fontName: this.fontName
    });
    this.width = a.x;
    this.height = a.y
};
label.prototype.setLabelPosition = function(a, b, c) {
    void 0 == c && (c = ["left", "top"]);
    this.labelBox.css(c[0], a + "px");
    this.labelBox.css(c[1], b + "px")
};
label.prototype.onResize = function(a, b) {
    this.width = a;
    this.height = b;
    this.labelBox.css({
        width: a + "px",
        height: b + "px"
    })
};
label.prototype.setFont = function(a, b, c) {
    null == a ? a = this.fontSize : this.fontSize = a;
    null == b ? b = this.fontColor : this.fontColor = b;
    null == c ? c = this.fontName : this.fontName = c;
    this.labelBox.css({
        "font-size": a,
        color: b,
        "font-family": c
    });
    a = textWidth(this.caption, {
        size: a,
        fontName: c
    });
    this.width = a.x;
    this.height = a.y
};
label.prototype.setFontSize = function(a) {
    null == a ? a = this.fontSize : this.fontSize = a;
    this.labelBox.css({
        "font-size": a
    });
    a = textWidth(this.caption, {
        size: a,
        fontName: this.fontName
    });
    this.width = a.x;
    this.height = a.y
};
label.prototype.riseAWord = function(a) {
    var b = this.caption; - 1 == b.indexOf(a) && (a = a.toLowerCase()); - 1 != b.indexOf(a) && (newCaption = b.replaceAll(a, "<font color=red><strong>" + a + "</strong></font>"), this.labelBox[0].innerHTML = newCaption)
};
label.prototype.shortWord = function(a) {
    this.caption.length > a && (this.caption = this.caption.substring(0, a) + "..", this.setCaption(this.caption))
};
label.prototype.setCSS = function(a) {
    this.labelBox.css(a)
};

function tipsBox(a, b) {
    this.visible = !1;
    this.caption = a;
    this.background = $("<div style = 'position : absolute;'></div>");
    this.contentBox = new label(a, this.background);
    this.contentBox.setFont("16px", "#f0f0f0", null);
    this.width = this.contentBox.getWidth() + 12;
    this.height = 40;
    $(b).append(this.background);
    $(this.background).css({
        width: this.width + "px",
        height: this.height + "px",
        "-webkit-border-radius": "10px",
        "-moz-border-radius": "10px",
        "-o-border-radius": "10px",
        "border-radius": "10px",
        "-webkit-box-shadow": "0 0 15px rgba(40, 40, 40, 0.6)",
        "-moz-box-shadow": "0 0 15px rgba(40, 40, 40, 0.6)",
        "-o-box-shadow": "0 0 15px rgba(40, 40, 40, 0.6)",
        "box-shadow": "0 0 15px rgba(40, 40, 40, 0.6)",
        "background-color": "#554433",
        display: "none",
        "z-index": 110
    });
    this.contentBox.setLabelPosition(4, (this.height - this.contentBox.getHeight()) / 2 - 3)
}
tipsBox.prototype.setTimer = function() {
    var a = this;
    this.timer = window.setInterval(function() {
        a.hideTipsBox();
        window.clearInterval(a.timer)
    }, 1500)
};
tipsBox.prototype.resetTimer = function() {
    window.clearInterval(this.timer);
    this.setTimer()
};
tipsBox.prototype.setPosition = function(a, b, c) {
    void 0 == c && (c = ["left", "top"]);
    $(this.background).css(c[0], a + "px");
    $(this.background).css(c[1], b + "px")
};
tipsBox.prototype.onResize = function(a, b) {
    this.width = a;
    this.height = b;
    $(this.background).css({
        width: a + "px",
        height: b + "px"
    });
    this.contentBox.setLabelPosition(4, (b - this.contentBox.getHeight()) / 2)
};
tipsBox.prototype.getWidth = function() {
    return this.width
};
tipsBox.prototype.getHeight = function() {
    return this.height
};
tipsBox.prototype.setCaption = function(a) {
    this.contentBox.setCaption(a);
    this.caption = a;
    this.contentBox.setLabelPosition(4, (this.height - this.contentBox.getHeight()) / 2 - 3)
};
tipsBox.prototype.showTipsBox = function() {
    this.visible ? this.resetTimer() : (this.setTimer(), this.visible = !0, $(this.background).css({
        display: "block",
        "z-index": 110
    }), $(this.background).animate({
        opacity: 0.9
    }, 300))
};
tipsBox.prototype.hideTipsBox = function() {
    var a = this;
    this.visible && (this.visible = !1, $(this.background).animate({
        opacity: 0
    }, 300, function() {
        $(a.background).css({
            display: "none",
            "z-index": 1
        })
    }))
};

function rimFlip() {}
rimFlip.prototype.addRimFlip = function() {};
rimFlip.prototype.clearTimer = function() {};
rimFlip.prototype.removeRimFlip = function() {};
rimFlip.prototype.setFlipBack = function() {};

function initProgressBar(a, b) {
    this.width = 60;
    this.height = 30;
    this.progress = new label("Loading", a);
    this.caption = this.originCaption = b;
    this.captionLength = this.caption.length;
    this.progress.setCSS({
        display: "none"
    })
}
initProgressBar.prototype.setPosition = function(a, b) {
    this.progress.setLabelPosition((a - this.width) / 2, (b - this.height) / 2)
};
initProgressBar.prototype.addTimer = function() {
    var a = this;
    this.timerId = window.setInterval(function() {
        a.caption += ".";
        a.caption.length > a.captionLength + 3 && (a.caption = originCaption);
        a.progress.setCaption(a.caption)
    }, 600)
};
initProgressBar.prototype.removeTimer = function() {
    window.clearInterval(this.timerId)
};
initProgressBar.prototype.show = function() {
    this.progress.setCSS({
        display: "block"
    });
    this.caption = this.originCaption;
    this.addTimer()
};
initProgressBar.prototype.hide = function() {
    this.progress.setCSS({
        display: "none"
    });
    this.removeTimer()
};
initProgressBar.prototype.setIndex = function(a) {
    this.progress.setCSS({
        "z-index": a
    })
};
var rotate = function(a) {
        return " rotate(" + a + "deg)"
    },
    translate = function(a, b) {
        return 3 != browserType ? " translate3d(" + a + "px," + b + "px,0px)" : " translate(" + a + "px," + b + "px)"
    },
    isLeft = function(a) {
        return 0 == a || 2 == a
    },
    isRight = function(a) {
        return 1 == a || 3 == a
    },
    isTop = function(a) {
        return 0 == a || 1 == a
    },
    isBottom = function(a) {
        return 2 == a || 3 == a
    },
    playFlipSound = function() {
        if (!(void 0 == flipAudio || null == flipAudio || void 0 == flipAudio[0].play)) try {
            flipAudio[0].play()
        } catch (a) {}
    },
    nextPageFun = function() {
        bookType == BookType.normal_book ? (flipBook.gotoPage(2 *
            Math.floor(flipBook.getCurrentPageIndex() / 2 + 1)), "undefined" != typeof speakConfig && "none" != speakConfig.title && 0 == flagspeak && ($("#LectureText").stop(!0), $("#LectureText").css("marginTop", 0), LectureAudio(Math.floor(flipBook.getCurrentPageIndex() / 2 + 1)), LectureSoll(Math.floor(flipBook.getCurrentPageIndex() / 2 + 1)))) : bookType == BookType.single_book ? $(singlePageBook).data().gotoPage($(singlePageBook).data().currentPageIndex + 1) : bookType == BookType.zoom_book && zoomBook.gotoPage(parseInt(zoomBook.currentIndex) + 1)
    },
    previousPageFun = function() {
        bookType == BookType.normal_book ? (flipBook.gotoPage(2 * Math.floor(flipBook.getCurrentPageIndex() / 2 - 1) + 1), "undefined" != typeof speakConfig && "none" != speakConfig.title && 0 == flagspeak && ($("#LectureText").stop(!0), $("#LectureText").css("marginTop", 0), LectureAudio(Math.floor(flipBook.getCurrentPageIndex() / 2 - 1)), LectureSoll(Math.floor(flipBook.getCurrentPageIndex() / 2 - 1)))) : bookType == BookType.single_book ? $(singlePageBook).data().gotoPage($(singlePageBook).data().currentPageIndex - 1) :
            bookType == BookType.zoom_book && zoomBook.gotoPage(zoomBook.currentIndex - 1)
    },
    firstPageFun = function() {
        bookType == BookType.normal_book ? flipBook.gotoPage(1) : bookType == BookType.single_book ? $(singlePageBook).data().gotoPage(1) : bookType == BookType.zoom_book && zoomBook.gotoPage(1)
    },
    lastPageFun = function() {
        bookType == BookType.normal_book ? flipBook.gotoPage(totalPageCount) : bookType == BookType.single_book ? $(singlePageBook).data().gotoPage(originTotalPageCount) : bookType == BookType.zoom_book && zoomBook.gotoPage(originTotalPageCount)
    },
    gotoPageFun = function(a) {
        bookType == BookType.normal_book ? flipBook.gotoPage(a) : bookType == BookType.single_book ? $(singlePageBook).data().gotoPage(a) : bookType == BookType.zoom_book && zoomBook.gotoPage(a)
    },
    getPageDir = function(a, b) {
        var c;
        switch (b) {
            case "normal":
                return c = getString("normalPath", "files/page/") + a + ".jpg";
            case "large":
                return c = getString("largePath", "files/large/") + a + ".jpg";
            case "thumb":
                return c = getString("thumbPath", "files/thumbnail/") + a + ".jpg"
        }
    },
    getPageWidthHeight = function(a, b, c, d) {
        var e = Point(0,
            0);
        a / b > c / d ? (e.x = c * b / d, e.y = b) : (e.x = a, e.y = a * d / c);
        return e
    },
    pointToLineDistance = function(a, b, c, d, e, f) {
        var j = f - d,
            g = c - e;
        return Math.abs(j * a + g * b + (e * d - c * f)) / Math.sqrt(j * j + g * g)
    },
    globalToBook = function(a, b, c, d) {
        void 0 == d && (d = !1);
        return d ? Point(b - _singleBook.offset().left, c - _singleBook.offset().top) : Point(b - ((a ? 0 : flipBook.getPageWidth()) + flipBook.getLeft()), c - flipBook.getTop())
    },
    changeShowBook = function(a) {
        var b = flipBook.getCurrentPageIndex();
        sendvisitinfo(4, b);
        switch (a) {
            case 0:
                singlePageBook.setSingleBookVisible(!1);
                zoomBook.hide();
                flipBook.setCSS({
                    display: "block"
                });
                _rimFlip.isRimFlip && ($(singlePageBook).data().currentPage.resetPage(), $(singlePageBook).data().currentPage.setSideAUp(!0), _rimFlip.clearTimer(), _rimFlip.addRimFlip());
                thumbnail.mergeAll();
                break;
            case 1:
                singlePageBook.setSingleBookVisible(!0);
                zoomBook.hide();
                flipBook.setCSS({
                    display: "none"
                });
                _rimFlip.isRimFlip && (currentPage2.resetPage(), _rimFlip.clearTimer(), _rimFlip.addRimFlip());
                thumbnail.fissionAll();
                break;
            case 2:
                singlePageBook.setSingleBookVisible(!1),
                    zoomBook.show(), flipBook.setCSS({
                        display: "none"
                    }), _rimFlip.isRimFlip && ($(singlePageBook).data().currentPage.resetPage(), $(singlePageBook).data().currentPage.setSideAUp(!0), currentPage2.resetPage(), currentPage2.setSideUp(!0), _rimFlip.clearTimer(), _rimFlip.setFlipBack(!1)), thumbnail.fissionAll()
        }
    },
    computeMousePoint = function(a, b, c, d, e, f) {
        var j = function() {
                return 0 <= a.indexOf("l")
            },
            g = function() {
                return 0 <= a.indexOf("t")
            },
            k = function() {
                return 0 <= a.indexOf("b")
            },
            m = Point(b, c),
            n, l, p, q;
        p = j() ? d - b : b;
        q = k() ? e - c :
            c;
        n = Math.sqrt(Math.pow(p, 2) + Math.pow(q, 2));
        l = Math.sqrt(Math.pow(p, 2) + Math.pow(e - q, 2));
        var u;
        if (n > d && l > f) {
            p = Math.abs(p / (e - q));
            var z = d / e;
            if (0 >= q && p >= z) {
                if (m = b, u = c, p > z && (m = j() ? d - (d - m) * d / n : m * d / n, u = k() ? e - (e - u) * d / n : u * d / n), 0 > q) p = j() ? d - m : m, q = k() ? e - u : u, l = Math.sqrt(Math.pow(p, 2) + Math.pow(e - q, 2)), m = j() ? d - (d - m) * f / l : m * f / l, u = g() ? e - (e - u) * f / l : u * f / l
            } else n - d >= l - f ? (m = j() ? d - (d - b) * d / n : b * d / n, u = k() ? e - (e - c) * d / n : c * d / n) : (m = j() ? d - (d - b) * f / l : b * f / l, u = g() ? e - (e - c) * f / l : c * f / l);
            m = Point(m, u)
        } else if (n > d && (m = j() ? d - (d - b) * d / n : b * d / n, u =
                k() ? e - (e - c) * d / n : c * d / n, m = Point(m, u)), l > f) m = j() ? d - (d - b) * f / l : b * f / l, u = g() ? e - (e - c) * f / l : c * f / l, m = Point(m, u);
        g() && 0 == m.y ? m.y = 0.0020 * e : k() && m.y == e && (m.y = 0.998 * e);
        return m
    },
    computePoint = function(a, b, c, d, e, f, j, g) {
        var k, m;
        k = Point(b, c);
        k = computeMousePoint(a, b, c, d, e, f);
        c = k.x;
        m = k.y;
        k = function() {
            return 0 <= a.indexOf("l")
        };
        b = function() {
            return 0 <= a.indexOf("t")
        };
        switch (a) {
            case "tl":
                actualPoint = Point(c, m);
                middlePoint = Point(d - actualPoint.x / 2, m / 2);
                endPoint = Point(2 * d, 0);
                break;
            case "tr":
                actualPoint = Point(d - c, m);
                middlePoint =
                    Point(d - actualPoint.x / 2, actualPoint.y / 2);
                endPoint = Point(-d, 0);
                break;
            case "bl":
                actualPoint = Point(c, e - m);
                middlePoint = Point(d - actualPoint.x / 2, actualPoint.y / 2);
                endPoint = Point(2 * d, e);
                break;
            case "br":
                actualPoint = Point(d - c, e - m), middlePoint = Point(d - actualPoint.x / 2, actualPoint.y / 2), endPoint = Point(-d, e)
        }
        var n = Point(0, 0),
            l = Math.PI / 2,
            p = Math.atan2(actualPoint.y, actualPoint.x);
        m = l - p;
        var c = 180 * m / Math.PI,
            q = m - Math.atan2(middlePoint.y, middlePoint.x);
        distance = Math.max(0, Math.sin(q) * Math.sqrt(Math.pow(middlePoint.x,
            2) + Math.pow(middlePoint.y, 2)));
        noMovePoint = Point(distance * Math.sin(m), distance * Math.cos(m));
        var u, z;
        if (m > l && (noMovePoint.x += Math.abs(noMovePoint.y * Math.tan(p)), noMovePoint.y = 0, n = Math.PI - m, f = f - e / Math.sin(n) - (noMovePoint.x - e / Math.tan(n)) * Math.cos(n), n = Point(Math.round(f * Math.cos(n)), Math.round(f * Math.sin(n))), k() && (n.x = -n.x), b())) n.y = -n.y;
        p = Math.sqrt(Math.pow(endPoint.x - actualPoint.x, 2) + Math.pow(endPoint.y - actualPoint.y, 2));
        f = Math.round(noMovePoint.y / Math.tan(m) + noMovePoint.x);
        k() && (f = d - f);
        l = k() ? f :
            d - f;
        q = l * Math.cos(2 * m);
        u = l * Math.sin(2 * m);
        f = Point(Math.round(f + (k() ? -q : q)), Math.round(b() ? u : e - u));
        u = l * Math.sin(m);
        var s = actualPoint.x / 2,
            A = actualPoint.y / 2,
            l = Point(100 * (s / d), 100 * (A / e)),
            p = p < d ? p / d : 1,
            q = 100 < u ? (u - 100) / u : 0;
        b() || (l.y = 100 - l.y);
        k() && (l.x = 100 - l.x);
        z = Point(100 * (u * Math.sin(m) / d), 100 * (u * Math.cos(m) / e));
        k() || (z.x = 100 - z.x);
        b() || (z.y = 100 - z.y);
        var v = getBrowserPre();
        if ("-webkit-" != v) {
            var r = Point(s, A);
            b() || (r.y = e - r.y);
            k() && (r.x = d - r.x);
            var s = 100,
                s = Math.round(100 * q),
                A = Math.round(100 * (0.8 * (1 - q) + q)),
                t = k() ?
                d : 0,
                x = b() ? 0 : e,
                t = r.x - t,
                x = r.y - x,
                r = Math.atan2(-x, t),
                r = 180 * r / Math.PI,
                t = getShadowRate(t, x, d, e, b());
            j.css({
                "background-image": v + "linear-gradient( " + r + "deg,  rgba(0,0,0,0) " + s * t + "%, rgba(0,0,0," + 0.2 * p + ") " + A * t + "%, rgba(255,255,255," + 0.2 * p + ") " + 100 * t + "%)"
            });
            m = Point(u * Math.sin(m), u * Math.cos(m));
            k() || (m.x = d - m.x);
            b() || (m.y = e - m.y);
            t = k() ? 0 : d;
            x = b() ? 0 : e;
            t = m.x - t;
            x = m.y - x;
            r = Math.atan2(-x, t);
            r = 180 * r / Math.PI;
            t = getShadowRate(t, x, d, e, b());
            s = 100 * t;
            ff_gradientStart = 0.6 * s;
            g.css({
                "background-image": v + "linear-gradient( " + r +
                    "deg, rgba(0,0,0,0) " + ff_gradientStart + "%, rgba(0,0,0," + 0.4 * p + ") " + s + "%, rgba(0,0,0,0) 100% )"
            })
        }
        "-webkit-" == v && (j.css({
            "background-image": v + "gradient(linear, " + (k() ? 100 : 0) + "% " + (b() ? 0 : 100) + "%, " + l.x + "% " + l.y + "%, color-stop(" + q + ",rgba(0,0,0,0)), color-stop(" + (0.8 * (1 - q) + q) + ",rgba(0,0,0," + 0.2 * p + ")), to(rgba(255,255,255," + 0.2 * p + ")))"
        }), g.css({
            "background-image": v + "gradient(linear, " + (k() ? 0 : 100) + "% " + (b() ? 0 : 100) + "%, " + z.x + "% " + z.y + "%,  color-stop(0.6,rgba(0,0,0,0)), color-stop(1, rgba(0,0,0," + 0.2 * p + ")), to(rgba(0,0,0,0)))"
        }));
        return {
            Angle: c,
            Mv: n,
            Df: f,
            NomovePoint: noMovePoint
        }
    },
    getShadowRate = function(a, b, c, d, e) {
        var f = 0,
            j = 1,
            j = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));
        Math.atan2(b, a);
        var g = Math.sqrt(Math.pow(c, 2) + Math.pow(d, 2)),
            a = Math.abs(a),
            k = Math.abs(b),
            m = Math.atan2(d, c),
            c = Math.atan2(k, a),
            a = Math.abs(m - c),
            g = g * Math.cos(a),
            j = j / g;
        if (e && 0 > b || !e && 0 < b) f = d * Math.sin(c) / g;
        return j + f
    },
    setCurrentIndexTextField = function(a, b) {
        var c = bookConfig.totalPagesCaption,
            d = bookConfig.pageNumberCaption;
        void 0 == c && (c = "");
        void 0 == d && (d = "");
        var e;
        "" !=
        d ? 1 != a && a != totalPageCount && b ? (e = 2 * Math.floor(a / 2), d = getShownPageNumber(e), e = getShownPageNumber(e + 1), a = rightToLeft ? e + "-" + d : d + "-" + e) : a = getShownPageNumber(a) : 1 != a && a != totalPageCount && b && (d = e = 2 * Math.floor(a / 2), e += 1, a = rightToLeft ? e + "-" + d : d + "-" + e);
        "" == c ? (c = totalPageCount, b || (c = originTotalPageCount)) : (c = d = parseInt(c), b || (c = totalPageCount - originTotalPageCount + d));
        $("#fbCurrentPageIndex").text(a);
        pageIndexTextField.val(rightToLeft ? c + "/" + a : a + "/" + c)
    },
    getShownPageNumber = function(a) {
        var b = bookConfig.pageNumberCaption;
        if ("" == b || void 0 == b) return a;
        ";" != b.substr(b.length - 1, 1) && (b += ";");
        for (var b = b.split(";"), c = [], d = 0, e = 0, f = 0, j = b.length; f < j - 1; f++)
            if (!("" == b[f] || void 0 == b[f]))
                if (e = b[f].split(":"), -1 < e[1].indexOf("+")) {
                    d = e[0];
                    j = d.indexOf("-");
                    sMinPage = d.substring(0, j);
                    sMaxPage = d.substring(j + 1, d.length);
                    for (var g = parseInt(sMinPage), k = parseInt(sMaxPage), e = parseInt(e[1].replace("+", "")), d = k, j = g; j <= k; j++) c[j] = j - g + e
                } else g = parseInt(e[0]), c[g] = void 0 == e[1] ? "" : e[1];
        return a > d ? a : c[a]
    },
    getSpeedArray = function(a, b) {
        for (var c =
                b / 2, d = (a - a / 4) / c, e = Array(b), f = 0; f < b; f++) e[f] = f < c ? a - (c - f) * d : a + (f - c + 1) * d;
        return e.reverse()
    },
    getBrowserPre = function() {
        switch (browserType) {
            case 3:
                return "-ms-";
            case 2:
                return "-moz-";
            case 1:
                return "-webkit-";
            case 4:
                return "-o-"
        }
    },
    getTransform = function(a) {
        var b;
        switch (browserType) {
            case 3:
                (b = a.style["-ms-transform"]) && null != b && (b = b.match(/translate\((.*?)\)/));
                break;
            case 2:
                (b = a.style["-moz-transform"]) && null != b && (b = b.match(/translate3d\((.*?)\)/));
                break;
            case 1:
                (b = a.style["-webkit-transform"]) && null != b && (b = b.match(/translate3d\((.*?)\)/));
                break;
            case 4:
                (b = a.style["-o-transform"]) && null != b && (b = b.match(/translate3d\((.*?)\)/));
                break;
            default:
                (b = a.style.transform) && null != b && (b = b.match(/translate\((.*?)\)/))
        }
        if (void 0 == b || null == b)(a = a.style.transform) && null != a && (b = a.match(/translate3d\((.*?)\)/)), null == b && (b = a.match(/translate\((.*?)\)/));
        if (null == b || "" == b || 2 > b.length) return Point(0, 0);
        b = b[1].split(", ");
        return Point(parseInt(b[0], 10), parseInt(b[1], 10))
    },
    actionEvent = function() {
        this.config.action.actionType == PageEditor.ActionType.GOTO_PAGE ?
            gotoPageFun(this.config.action.pageIndex) : this.config.action.actionType == PageEditor.ActionType.OPEN_URL ? (void 0 == this.config.action.linkTarget && (this.config.action.linkTarget = "_blank"), sendvisitinfo(3, getShownPageString()), window.open(this.linkURL, this.config.action.linkTarget)) : this.config.action.actionType == PageEditor.ActionType.OPEN_WINDOW ? this.form = new initVideoForm(tmpContainer, {
                width: this.config.action.windowWidth,
                height: this.config.action.windowHeight,
                src: this.config.action.resourceContent,
                caption: this.config.action.caption
            }, bookContainer.width(), bookContainer.height()) : this.config.action.actionType == PageEditor.ActionType.SLIDE_SHOW ? this.slide = new initSlideShow(tmpContainer, this.config.action.photos.photo, bookContainer.width(), bookContainer.height()) : this.config.action.actionType == PageEditor.ActionType.PLAY_AUDIO ? (this.audios = new initAudioEditor(tmpContainer, this.config.action.audioURL, this.config.action.autoPlay), this.audios.showshow()) : this.config.action.actionType == PageEditor.ActionType.ACTION_JS &&
            null != this.config.action.scriptFun && eval(this.config.action.scriptFun)
    },
    getAliasValue = function(a) {
        a = bookConfig[a] ? bookConfig[a] : aliasConfig[a] ? aliasConfig[a] : void 0;
        if (a instanceof Array) {
            if (!(1 > a.length))
                for (var b = 0; b < a.length; b++) {
                    if (void 0 != bookConfig[a[b]]) return bookConfig[a[b]];
                    if (b == a.length - 1) break
                }
        } else return a
    },
    getString = function(a, b) {
        var c = getAliasValue(a);
        return void 0 == c ? b : c
    },
    getInt = function(a, b) {
        var c = getAliasValue(a);
        try {
            return isNaN(c) || void 0 == c ? b : Number(c)
        } catch (d) {
            return b
        }
    },
    getBool =
    function(a, b) {
        var c = ["true", "yes", "show", "enable"],
            d = ["false", "no", "hide", "disable"],
            e = getAliasValue(a);
        try {
            e = e.toLowerCase()
        } catch (f) {
            return b
        }
        return 0 > c.indexOf(e) && 0 > d.indexOf(e) ? b : 0 <= c.indexOf(e)
    },
    parseBool = function(a, b) {
        if (void 0 == a) return !1;
        void 0 == b && (b = !1);
        var c = ["true", "yes", "show", "enable"],
            d = ["false", "no", "hide", "disable"],
            a = a.toLowerCase();
        return 0 > c.indexOf(a) && 0 > d.indexOf(a) ? b : 0 <= c.indexOf(a)
    },
    getColor = function(a, b) {
        var c = getAliasValue(a);
        return void 0 != c ? colorTo0x(c) : b
    },
    getImage = function(a) {
        if (0 <
            iconArray.length)
            for (var b = 0; b < iconArray.length; b++)
                if (iconArray[b].url == a) return iconArray[b].img;
        return new Image
    },
    getLanguage = function(a, b) {
        return selectedLanguage[a] ? selectedLanguage[a] : b
    },
    highlightSearchFun = function(a, b) {
        if (0 != positionForPages.length) {
            var c = !1;
            if (void 0 == frmSearch || null == frmSearch) c = !0;
            frmSearch.isSearchShow || (c = !0);
            0 == frmSearch.itemCount && (c = !0);
            var d = frmSearch.textField.val().toLowerCase();
            "" == d && (c = !0);
            if (!0 == c) clearHighlightFun(a);
            else {
                for (var e, c = 0; c < positionForPages.length; c++)
                    if (positionForPages[c].page ==
                        b) {
                        e = positionForPages[c].positions;
                        break
                    }
                if (void 0 == e) clearHighlightFun(a);
                else {
                    var f = "url(" + uiBaseURL + "highlight.png)",
                        j = "",
                        g = "",
                        k = "",
                        m = "";
                    if (0 < e.length) {
                        for (c = 0; c < e.length; c++) {
                            var n = e[c];
                            if (-1 < n.word.toLowerCase().indexOf(d)) var l = n.left / (1 - n.width),
                                p = n.top / (1 - n.height),
                                j = j + f + ",",
                                m = m + "no-repeat,",
                                g = g + 100 * l + "% " + 100 * p + "%,",
                                k = k + 100 * n.width + "% " + 100 * n.height + "%,"
                        }
                        0 < j.length ? (j = j.substr(0, j.length - 1), m = m.substr(0, m.length - 1), g = g.substr(0, g.length - 1), k = k.substr(0, k.length - 1), a.css({
                            "background-image": j,
                            "background-repeat": m,
                            "background-position": g,
                            "-webkit-background-size": k,
                            "-o-background-size": k,
                            "background-size": k,
                            display: "block"
                        })) : clearHighlightFun(a)
                    } else clearHighlightFun(a)
                }
            }
        }
    },
    clearHighlightFun = function(a) {
        a.css({
            "background-image": ""
        });
        a.css({
            display: "none"
        })
    },
    stopEvent = function(a) {
        a = a || window.event;
        a.preventDefault ? (a.preventDefault(), a.stopPropagation()) : (a.returnValue = !1, a.cancelBubble = !0)
    },
    getShownPage = function() {
        var a = [];
        if (bookType == BookType.normal_book) {
            var b = flipBook.getCurrentPageIndex(),
                b = 2 * Math.floor(b / 2),
                c = b + 1;
            a.push(b);
            a.push(c)
        }
        bookType == BookType.single_book && (b = $(singlePageBook).data().currentPageIndex, a.push(b));
        bookType == BookType.zoom_book && (b = zoomBook.currentIndex, a.push(b));
        return a
    },
    getShownPageString = function() {
        var a = getShownPage();
        return 1 == a.length ? a[0] + "" : a[0] + "-" + a[1]
    },
    isIE10 = function() {
        var a = window.navigator.userAgent.toLowerCase();
        $.browser.msie && /msie 11\.0/i.test(a);
        $.browser.msie && /msie 10\.0/i.test(a);
        $.browser.msie && /msie 9\.0/i.test(a);
        $.browser.msie && /msie 8\.0/i.test(a);
        $.browser.msie && /msie 7\.0/i.test(a);
        !$.browser.msie8 && !$.browser.msie7 && $.browser.msie && /msie 6\.0/i.test(a);
        return !1
    };

function searchFromPages(a, b) {
    for (var c = [], b = b.trim().toLowerCase(), d = null, d = -1 == b.indexOf(" ") ? [b] : b.split(" "), e = 0, e = 0; e < a.length; e++) {
        var f = a[e].trim().toLowerCase(),
            j = f,
            g = -1,
            k = -1,
            m = -1,
            n = 0,
            l = !0,
            p;
        for (p = 0; p < d.length; p++) {
            var j = new KMP(j, d[p]),
                q = d[p].length;
            if (j.match()) {
                var u = n + j.getIndex();
                if (u > m) m = u, n = u + d[p].length, j = f.substring(n), 0 == p && (g = u), p == d.length - 1 && (k = u + q);
                else {
                    l = !1;
                    break
                }
            } else {
                l = !1;
                break
            }
        }
        l && (m = [], m.search_page = e + 1, m.search_title = "page " + (e + 1), g = f.substring(0, g).lastIndexOf("."), -1 ==
            g ? g = 0 : g++, n = f.substring(k), l = n.indexOf(".") + 1, l = -1 == l ? n.length() : k + l, f = f.substring(g, l), m.search_text = f, c.push(m))
    }
    return c
};
var KMP = function(a, b) {
    this.__string = a;
    this.__pattern = b;
    this.__next = [];
    this.__times = 0;
    this.__index = -1;
    for (var c = 0, c = 0; c < b.length; c++) this.__next[c] = 1 >= c ? c - 1 : this.next(b.substring(0, c));
    this.__times = 0;
    this.__index = -1
};
KMP.prototype.next = function(a) {
    for (var b = Math.ceil(a.length / 2); 0 < b && 0 != a.substring(0, b).compareTo(a.substring(a.length - b, a.length));) b--;
    return b
};
KMP.prototype.match = function() {
    for (var a = 0, b = 0, c = -1; a < this.__string.length && b < this.__pattern.length;) {
        if (this.__string.charAt(a) == this.__pattern.charAt(b)) 0 === b && (c = a), a++, b++;
        else {
            for (var d = this.__next[b]; - 1 != d && this.__pattern.charAt(d) == this.__pattern.charAt(b);) d = this.__next[d];
            b = d; - 1 == b ? (a++, b = 0) : c = a - b
        }
        this.__times++
    }
    return b == this.__pattern.length ? (this.__index = c, !0) : !1
};
KMP.prototype.getTimes = function() {
    return this.__times
};
KMP.prototype.getIndex = function() {
    return this.__index
};
String.prototype.compareTo = function(a) {
    var b = this.length,
        c = a.length,
        d = Math.min(b, c),
        e = this.split(""),
        a = a.split(""),
        f = 0,
        j = 0;
    if (f == j) {
        j = f;
        for (d += f; j < d;) {
            var g = e[j],
                k = a[j];
            if (g != k) return g - k;
            j++
        }
    } else
        for (; 0 != d--;)
            if (g = e[f++], k = a[j++], g != k) return g - k; return b - c
};
String.prototype.trim = function() {
    return this.replace(/(^\s*)|(\s*$)/g, "")
};
String.prototype.replaceAll = function(a, b) {
    for (var c = this.indexOf(a), d = [], e = this; - 1 != c;) {
        var c = c + a.length,
            f = e.substring(0, c),
            e = e.substring(c),
            f = f.replace(a, b);
        d.push(f);
        c = e.indexOf(a)
    }
    "" !== e && d.push(e);
    return d.join("")
};
String.prototype.subBetween = function(a, b) {
    if (void 0 == a || void 0 == b) return "";
    var c = this.length,
        d = this.indexOf(a);
    if (-1 == d) return "";
    d += a.length;
    c = this.substring(d, c).indexOf(b);
    return -1 == c ? "" : this.substring(d, c + d)
};

function bookShadow(a, b, c) {
    this.backgroun = $("<div></div>");
    this.width = a;
    this.height = b;
    $(this.backgroun).css({
        position: "absolute",
        width: this.width + "px",
        height: this.height + "px",
        "-webkit-box-shadow": "0 0 15px rgba(40, 0, 0, 0.7)",
        "-moz-box-shadow": "0 0 15px rgba(40, 0, 0, 0.7)",
        "box-shadow": "0 0 15px rgba(40, 0, 0, 0.7)"
    });
    $(c).append(this.backgroun)
}
bookShadow.prototype.onResize = function(a, b, c) {
    this.width = c ? 2 * a : a;
    this.height = b;
    $(this.backgroun).css({
        width: this.width + "px",
        height: this.height + "px"
    })
};
bookShadow.prototype.setPosition = function(a, b) {
    $(this.backgroun).css({
        top: b + "px",
        left: a + "px"
    })
};
bookShadow.prototype.showShadow = function() {
    $(this.backgroun).css({
        "-webkit-box-shadow": "0 0 15px rgba(40, 0, 0, 0.7)",
        "-moz-box-shadow": "0 0 15px rgba(40, 0, 0, 0.7)",
        "box-shadow": "0 0 15px rgba(40, 0, 0, 0.7)"
    })
};
bookShadow.prototype.hideShadow = function() {
    $(this.backgroun).css({
        "-webkit-box-shadow": "0 0 15px rgba(40, 0, 0, 0)",
        "-moz-box-shadow": "0 0 15px rgba(40, 0, 0, 0.7)",
        "box-shadow": "0 0 15px rgba(40, 0, 0, 0.7)"
    })
};

function normalSide(a, b) {
    var c = this;
    this.imageIndex = 0;
    this.width = 300;
    this.height = 400;
    this.side = $("<div class='side'></div>");
    this.sideContent = $("<div class='sideContent'></div>");
    this.sideImg = $("<img />");
    this.grayColor = $("<div class='kong' style='background-color:#CCCCCC;opacity:0.1'></div>");
    this.grayShadow = $("<div class='kong edgeShadow' ></div>");
    this.searchHighlight = $("<div class='kong' id='highlight'></div>");
    this.grayShadow.css({
        display: "none"
    });
    this.isLeft = b;
    this.rightToLeft = rightToLeft;
    this.isLeft ?
        (this.midShadow = $("<div class='leftShadow'></div>"), this.midShadow.css({
            width: userConfig.leftShadowWidth + "px",
            opacity: userConfig.leftShadowAlpha
        })) : (this.midShadow = $("<div class='rightShadow'></div>"), this.midShadow.css({
            width: userConfig.rightShadowWidth + "px",
            opacity: userConfig.rightShadowAlpha
        }));
    this.side.css({
        "background-color": getColor("pageBackgroundColor", "#f5f5f5"),
        overflow: "hidden"
    });
    this.side.css({
        overflow: "hidden"
    });
    this.MMBackground = $("<div style='position : absolute; z-index : 6;'></div>");
    this.loadingImg = $("<img src='" + uiBaseURL + "progress.gif' style='position: absolute;' />");
    this.loadingImg.css({
        left: (this.width - 32) / 2 + "px",
        top: (this.height - 32) / 2 + "px"
    });
    this.linkArray = [];
    this.youtubeArray = [];
    this.videoArray = [];
    this.audioArray = [];
    this.imageArray = [];
    this.buttonArray = [];
    this.flashShowArray = [];
    this.lineArray = [];
    this.arrowArray = [];
    this.roundArray = [];
    this.reArray = [];
    this.textArray = [];
    this.areaArray = [];
    this.calloutArray = [];
    this.atextArray = [];
    this.startextArray = [];
    this.aminArray = [];
    this.atimageArray = [];
    this.alimageArray = [];
    this.slideShowArray = [];
    this.efftextArray = [];
    this.soundArray = [];
    this.bannerArray = [];
    this.carouselArray = [];
    this.dynshowArray = [];
    this.jumpArray = [];
    this.rotate3DArray = [];
    this.vimeoArray = [];
    this.flashSwfArray = [];
    a.append(this.side);
    this.side.append(this.sideContent);
    this.side.append(this.midShadow);
    this.side.append(this.MMBackground);
    this.midShadow.css("z-index", 5);
    this.side.hammer().on("doubletap", function() {
        if (bookType == BookType.normal_book) {
            flipBook.zoomToPage(c.imageIndex);
            return false
        }
    })
}
normalSide.prototype.getSide = function() {
    return this.side
};
normalSide.prototype.fillContent = function(a) {
    if (a != this.imageIndex) {
        this.imageIndex = a;
        this.sideContent.empty();
        a <= originTotalPageCount && this.showLoading();
        this.isLeft = 0 == a % 2;
        this.rightToLeft && (this.isLeft = !this.isLeft);
        var b = this;
        try {
            this.sideImg.attr("src", getPageDir(this.imageIndex, "normal")), this.imgLoaded = 0, this.sideImg.load(function() {
                b.hideLoading();
                b.sideContent.append(b.sideImg);
                b.sideContent.append(b.grayColor);
                b.sideContent.append(b.grayShadow);
                b.sideContent.append(b.searchHighlight);
                b.searchHighlight.css({
                    opacity: 0.8
                });
                pageEditor != void 0 && b.initMM()
            })
        } catch (c) {
            this.hideLoading()
        }
    }
};
normalSide.prototype.showOrHideYoutube = function(a) {
    if (!(void 0 == a || null == a)) {
        for (var b = !1, c = 0; c < a.length; c++)
            if (a[c] == this.imageIndex) {
                b = !0;
                break
            }!0 == b ? this.showYoutube() : this.hideYoutube()
    }
};
normalSide.prototype.imgFlipOver = function(a) {
    a ? (this.sideImg.css({
        "-webkit-transform": "scaleX(-1)",
        "-moz-transform": "scaleX(-1)"
    }), this.MMBackground.css({
        "-webkit-transform": "scaleX(-1)",
        "-moz-transform": "scaleX(-1)"
    }), this.midShadow.attr("class", this.isLeft ? "rightShadow" : "leftShadow"), this.midShadow.css({
        left: this.isLeft ? "0px" : "auto",
        right: this.isLeft ? "auto" : "0px"
    })) : (this.sideImg.css({
        "-webkit-transform": "scaleX(1)",
        "-moz-transform": "scaleX(1)"
    }), this.MMBackground.css({
        "-webkit-transform": "scaleX(1)",
        "-moz-transform": "scaleX(1)"
    }), this.midShadow.attr("class", this.isLeft ? "leftShadow" : "rightShadow"), this.midShadow.css({
        left: this.isLeft ? "auto" : "0px",
        right: this.isLeft ? "0px" : "auto"
    }));
    this.grayShadow.css({
        display: this.isLeft ? "block" : "none"
    })
};
normalSide.prototype.initMM = function() {
    this.MMBackground.empty();
    this.linkArray = [];
    this.youtubeArray = [];
    this.videoArray = [];
    this.audioArray = [];
    this.imageArray = [];
    this.buttonArray = [];
    this.flashShowArray = [];
    this.lineArray = [];
    this.arrowArray = [];
    this.roundArray = [];
    this.reArray = [];
    this.textArray = [];
    this.areaArray = [];
    this.calloutArray = [];
    this.atextArray = [];
    this.startextArray = [];
    this.aminArray = [];
    this.atimageArray = [];
    this.alimageArray = [];
    this.slideShowArray = [];
    this.efftextArray = [];
    this.soundArray = [];
    this.bannerArray = [];
    this.carouselArray = [];
    this.dynshowArray = [];
    this.jumpArray = [];
    this.rotate3DArray = [];
    this.vimeoArray = [];
    this.flashSwfArray = [];
    if (!(0 >= this.imageIndex || pageEditor.length < this.imageIndex || 0 == pageEditor[this.imageIndex - 1].length)) {
        for (var a = 0; a < pageEditor[this.imageIndex - 1].length; a++) {
            var b = pageEditor[this.imageIndex - 1][a];
            if (void 0 != b)
                if (pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_LINK) {
                    var c = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        downColor: b.downColor,
                        downAlpha: b.downAlpha,
                        overColor: b.overColor,
                        overAlpha: b.overAlpha,
                        outColor: b.outColor,
                        outAlpha: b.outAlpha,
                        action: b.action
                    };
                    this.linkArray.push(new initLink(this.MMBackground, c, this.width, this.height))
                } else pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_YOUTUBE || pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_YOUTUBE1 || pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_YOUTUBE2 || pageEditor[this.imageIndex - 1][a].annotype ==
                    PageEditor.AnnoType.ANNO_YOUTUBE3 || pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_YOUTUBE4 ? (c = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        id: b.videoId,
                        moviePlayTriggerEvt: b.moviePlayTriggerEvt,
                        movieStopTriggerEvt: b.movieStopTriggerEvt
                    }, pageEditor[this.imageIndex - 1][a].annotype != PageEditor.AnnoType.ANNO_YOUTUBE && (c.id = b.videoID), youtubeObj = new initYoutube(this.MMBackground, c, this.width, this.height), this.youtubeArray.push(youtubeObj)) :
                    pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_VIMEO || pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_VIMEO2 ? (c = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        id: b.videoID,
                        moviePlayTriggerEvt: b.moviePlayTriggerEvt,
                        movieStopTriggerEvt: b.movieStopTriggerEvt,
                        playerParameters: b.playerParameters
                    }, vimeoObj = new initVimeo(this.MMBackground, c, this.width, this.height), this.vimeoArray.push(vimeoObj)) : pageEditor[this.imageIndex -
                        1][a].annotype == PageEditor.AnnoType.ANNO_VIDEO ? (c = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        src: b.url,
                        moviePlayTriggerEvt: b.moviePlayTriggerEvt,
                        movieStopTriggerEvt: b.movieStopTriggerEvt
                    }, c = new initVideo(this.MMBackground, c, this.width, this.height, "round"), this.videoArray.push(c)) : pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_AUDIO ? (c = pageEditor[this.imageIndex - 1][a], c = {
                        width: c.location.width,
                        height: c.location.height,
                        x: c.location.x,
                        y: c.location.y,
                        alpha: c.alpha,
                        src: c.soundURL,
                        soundPlayTriggerEvt: c.soundPlayTriggerEvt,
                        soundStopTriggerEvt: c.soundStopTriggerEvt
                    }, c = new initAudio(this.MMBackground, c, this.width, this.height, "default"), this.audioArray.push(c)) : pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_IMAGE ? (c = pageEditor[this.imageIndex - 1][a], c = {
                        width: c.location.width,
                        height: c.location.height,
                        x: c.location.x,
                        y: c.location.y,
                        alpha: c.alpha,
                        src: c.url,
                        action: c.action,
                        mouseOver: c.mouseOverEffect
                    }, imageObj = new initImage(this.MMBackground,
                        c, this.width, this.height), this.imageArray.push(imageObj)) : pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_BUTTON ? (c = pageEditor[this.imageIndex - 1][a], c = {
                        width: c.location.width,
                        height: c.location.height,
                        x: c.location.x,
                        y: c.location.y,
                        alpha: c.alpha,
                        src: c.url,
                        action: c.action,
                        buttonCaption: c.buttonCaption,
                        captionY: c.captionY,
                        HRate: c.HRate,
                        Format: c.Format
                    }, this.buttonArray.push(new initButton(this.MMBackground, c, this.width, this.height, this.imageIndex + a))) : pageEditor[this.imageIndex - 1][a].annotype ==
                    PageEditor.AnnoType.ANNO_SWF ? (c = pageEditor[this.imageIndex - 1][a], c = {
                        width: c.location.width,
                        height: c.location.height,
                        x: c.location.x,
                        y: c.location.y,
                        alpha: c.alpha,
                        src: c.swfURL,
                        shadow: c.shadow
                    }, swfObj = new initFlashSwf(this.MMBackground, c, this.width, this.height), this.flashSwfArray.push(swfObj)) : pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_FLASHSHOW ? (c = pageEditor[this.imageIndex - 1][a], c = {
                        width: c.location.width,
                        height: c.location.height,
                        x: c.location.x,
                        y: c.location.y,
                        alpha: c.alpha,
                        photo: c.Images,
                        repeatPlay: c.isRepeat
                    }, flashObj = new initFlashShow(this.MMBackground, c, this.width, this.height), this.flashShowArray.push(flashObj)) : pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_LINE ? (c = pageEditor[this.imageIndex - 1][a], c = {
                        StartX: c.lineStartPX,
                        StartY: c.lineStartPY,
                        EndX: c.lineEndPX,
                        EndY: c.lineEndPY,
                        x: c.location.x,
                        y: c.location.y,
                        width: c.location.width,
                        height: c.location.height,
                        lineAlpha: c.lineAlpha,
                        alpha: c.alpha,
                        lineWidth: c.lineWidth,
                        lineType: c.lineType,
                        dotWidth: c.dotWidth,
                        color: c.color,
                        sh: c.shadow.hasDropShadow,
                        sx: c.shadow.shadowBlurX,
                        sy: c.shadow.shadowBlurY,
                        se: c.shadow.shadowDistance,
                        sr: c.shadow.shadowColor
                    }, this.lineArray.push(new initLine(this.MMBackground, c, this.width, this.height, this.imageIndex + a))) : pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_ARROW ? (c = pageEditor[this.imageIndex - 1][a], c = {
                        StartX: c.lineStartPX,
                        StartY: c.lineStartPY,
                        EndX: c.lineEndPX,
                        EndY: c.lineEndPY,
                        x: c.location.x,
                        y: c.location.y,
                        width: c.location.width,
                        height: c.location.height,
                        alpha: c.alpha,
                        lineWidth: c.lineWidth,
                        lineType: c.lineType,
                        dotWidth: c.dotWidth,
                        color: c.color,
                        sh: c.shadow.hasDropShadow,
                        sx: c.shadow.shadowBlurX,
                        sy: c.shadow.shadowBlurY,
                        se: c.shadow.shadowDistance,
                        arrowType: c.arrowType,
                        sr: c.shadow.shadowColor
                    }, this.arrowArray.push(new initArrow(this.MMBackground, c, this.width, this.height, this.imageIndex + a))) : pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_ROUND ? (c = pageEditor[this.imageIndex - 1][a], c = {
                        x: c.location.x,
                        y: c.location.y,
                        width: c.location.width,
                        height: c.location.height,
                        alpha: c.alpha,
                        fillStyle: c.fillStyle,
                        color: c.color,
                        ColorA: c.gradientColorA,
                        ColorB: c.gradientColorB,
                        angle: c.angle,
                        spalpha: c.spalpha,
                        borderWidth: c.borderWidth,
                        borderColor: c.borderColor,
                        borderAlpha: c.borderAlpha,
                        sh: c.shadow.hasDropShadow,
                        sx: c.shadow.shadowBlurX,
                        sy: c.shadow.shadowBlurY,
                        se: c.shadow.shadowDistance,
                        sr: c.shadow.shadowColor,
                        action: c.action
                    }, this.roundArray.push(new initRound(this.MMBackground, c, this.width, this.height, this.imageIndex + a))) : pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_RECTANGLE ?
                    (c = pageEditor[this.imageIndex - 1][a], c = {
                        x: c.location.x,
                        y: c.location.y,
                        width: c.location.width,
                        height: c.location.height,
                        alpha: c.alpha,
                        fillStyle: c.fillStyle,
                        color: c.color,
                        ColorA: c.gradientColorA,
                        ColorB: c.gradientColorB,
                        angle: c.angle,
                        spalpha: c.spalpha,
                        borderWidth: c.borderWidth,
                        borderColor: c.borderColor,
                        borderAlpha: c.borderAlpha,
                        sh: c.shadow.hasDropShadow,
                        sx: c.shadow.shadowBlurX,
                        sy: c.shadow.shadowBlurY,
                        se: c.shadow.shadowDistance,
                        sr: c.shadow.shadowColor,
                        round: parseBool(c.round, !1),
                        roundWidth: Math.max(parseInt(c.ellipseWidth),
                            parseInt(c.ellipseHeight)),
                        action: c.action
                    }, this.reArray.push(new initRe(this.MMBackground, c, this.width, this.height, this.imageIndex + a))) : pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_TEXT ? (c = pageEditor[this.imageIndex - 1][a], c = {
                        x: c.location.x,
                        y: c.location.y,
                        width: c.location.width,
                        height: c.location.height,
                        alpha: c.alpha,
                        textStr: c.textStr,
                        lineH: c.lineHeightRation,
                        fontName: c.formats.defaultFormat.fontName,
                        fontSize: c.formats.defaultFormat.fontSize,
                        color: c.formats.defaultFormat.color,
                        tbold: c.formats.defaultFormat.bold,
                        italic: c.formats.defaultFormat.italic,
                        pageH: c.formats.defaultFormat.pageH,
                        bgalpha: c.background.alpha,
                        fillBg: c.background.fillBg,
                        bgcolor: c.background.color,
                        sh: c.shadow.hasDropShadow,
                        sx: c.shadow.shadowBlurX,
                        sy: c.shadow.shadowBlurY,
                        se: c.shadow.shadowDistance,
                        sr: c.shadow.shadowColor,
                        action: c.action
                    }, this.textArray.push(new initText(this.MMBackground, c, this.width, this.height, this.imageIndex + a))) : pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_AREA ?
                    (c = pageEditor[this.imageIndex - 1][a], c = {
                        x: c.location.x,
                        y: c.location.y,
                        width: c.location.width,
                        height: c.location.height,
                        alpha: c.alpha,
                        color: c.color,
                        rounds: c.round,
                        ellipseWidth: c.ellipseWidth,
                        ellipseHeight: c.ellipseHeight,
                        sh: c.shadow.hasDropShadow,
                        sx: c.shadow.shadowBlurX,
                        sy: c.shadow.shadowBlurY,
                        se: c.shadow.shadowDistance,
                        sr: c.shadow.shadowColor,
                        action: c.action
                    }, this.areaArray.push(new initArea(this.MMBackground, c, this.width, this.height, this.imageIndex + a))) : pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_CALLOUT ?
                    (c = pageEditor[this.imageIndex - 1][a], c = {
                        x: c.location.x,
                        y: c.location.y,
                        width: c.location.width,
                        height: c.location.height,
                        alpha: c.alpha,
                        textStr: c.textStr,
                        lineH: c.lineHeightRation,
                        pageH: c.formats.defaultFormat.pageH,
                        fontName: c.formats.defaultFormat.fontName,
                        fontSize: c.formats.defaultFormat.fontSize,
                        color: c.formats.defaultFormat.color,
                        tbold: c.formats.defaultFormat.bold,
                        italic: c.formats.defaultFormat.italic,
                        bgalpha: c.background.alpha,
                        fillBg: c.background.fillBg,
                        bgcolor: c.background.color,
                        direct: c.hookDirect,
                        cx1: c.hookContr1RatioX,
                        cy1: c.hookContr1RatioY,
                        cx2: c.hookContr2RatioX,
                        cy2: c.hookContr2RatioY,
                        pointx: c.hookContrPointRatioX,
                        pointy: c.hookContrPointRatioY,
                        cornerRadiut: c.cornerRadiut,
                        borderWidth: c.borderWidth,
                        borderColor: c.borderColor,
                        bordreAlpha: c.bordreAlpha,
                        sh: c.shadow.hasDropShadow,
                        sx: c.shadow.shadowBlurX,
                        sy: c.shadow.shadowBlurY,
                        se: c.shadow.shadowDistance,
                        sr: c.shadow.shadowColor
                    }, this.calloutArray.push(new initCallout(this.MMBackground, c, this.width, this.height, this.imageIndex + a))) : pageEditor[this.imageIndex -
                        1][a].annotype == PageEditor.AnnoType.ANNO_ATEXT ? (c = pageEditor[this.imageIndex - 1][a], c = {
                        x: c.location.x,
                        y: c.location.y,
                        width: c.location.width,
                        height: c.location.height,
                        alpha: c.alpha,
                        textStr: c.strText,
                        fontName: c.format.font,
                        fontSize: c.format.size,
                        color: c.format.color,
                        tbold: c.format.bold,
                        italic: c.format.italic,
                        align: c.format.align,
                        action: c.action,
                        repeat: c.repeat,
                        moveSpeed: c.moveSpeed,
                        pageH: c.format.pageH,
                        sh: c.shadow.hasDropShadow,
                        sx: c.shadow.shadowBlurX,
                        sy: c.shadow.shadowBlurY,
                        se: c.shadow.shadowDistance,
                        sr: c.shadow.shadowColor
                    }, this.atextArray.push(new initAText(this.MMBackground, c, this.width, this.height, this.imageIndex + a))) : pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_STARTEXT ? (c = pageEditor[this.imageIndex - 1][a], c = {
                        x: c.location.x,
                        y: c.location.y,
                        width: c.location.width,
                        height: c.location.height,
                        alpha: c.alpha,
                        textStr: c.strText,
                        fontName: c.format.font,
                        fontSize: c.format.size,
                        color: c.format.color,
                        tbold: c.format.bold,
                        italic: c.format.italic,
                        align: c.format.align,
                        action: c.action,
                        repeat: c.repeat,
                        moveSpeed: c.moveSpeed,
                        lineH: c.HRate,
                        sh: c.shadow.hasDropShadow,
                        sx: c.shadow.shadowBlurX,
                        sy: c.shadow.shadowBlurY,
                        se: c.shadow.shadowDistance,
                        sr: c.shadow.shadowColor
                    }, this.startextArray.push(new initStarText(this.MMBackground, c, this.width, this.height, this.imageIndex + a))) : pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_TEXTANIM ? (c = pageEditor[this.imageIndex - 1][a], c = {
                        x: c.location.x,
                        y: c.location.y,
                        width: c.location.width,
                        height: c.location.height,
                        alpha: c.alpha,
                        effectType: c.effectType,
                        textStr: c.textStr,
                        fontName: c.formats.defaultFormat.fontName,
                        fontSize: c.formats.defaultFormat.fontSize,
                        color: c.formats.defaultFormat.color,
                        tbold: c.formats.defaultFormat.bold,
                        italic: c.formats.defaultFormat.italic,
                        action: c.action,
                        lineH: c.HRate,
                        sh: c.shadow.hasDropShadow,
                        sx: c.shadow.shadowBlurX,
                        sy: c.shadow.shadowBlurY,
                        se: c.shadow.shadowDistance,
                        sr: c.shadow.shadowColor
                    }, this.aminArray.push(new initAminText(this.MMBackground, c, this.width, this.height, this.imageIndex + a))) : pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_ATIMAGE ?
                    (c = pageEditor[this.imageIndex - 1][a], c = {
                        width: c.location.width,
                        height: c.location.height,
                        x: c.location.x,
                        y: c.location.y,
                        alpha: c.alpha,
                        src: c.url,
                        action: c.action
                    }, this.atimageArray.push(new initPngImage(this.MMBackground, c, this.width, this.height))) : pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_EFFECTTEXT ? (c = pageEditor[this.imageIndex - 1][a], c = {
                        x: c.location.x,
                        y: c.location.y,
                        width: c.location.width,
                        height: c.location.height,
                        alpha: c.alpha,
                        textStr: c.htmlText,
                        moveSpeed: c.effectStyle,
                        lineH: c.HRate,
                        sh: c.shadow.hasDropShadow,
                        sx: c.shadow.shadowBlurX,
                        sy: c.shadow.shadowBlurY,
                        se: c.shadow.shadowDistance,
                        sr: c.shadow.shadowColor
                    }, this.efftextArray.push(new initEffText(this.MMBackground, c, this.width, this.height, this.imageIndex + a))) : pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_ADVANCEDSOUND ? (c = pageEditor[this.imageIndex - 1][a], c = {
                            width: c.location.width,
                            height: c.location.height,
                            x: c.location.x,
                            y: c.location.y,
                            alpha: c.alpha,
                            src: c.soundList.sound,
                            skinType: c.skinType,
                            soundPlay: c.soundPlayTriggerEvt
                        },
                        this.soundArray.push(new initSound(this.MMBackground, c, this.width, this.height, this.imageIndex + a))) : pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_CAROUSEL ? (c = pageEditor[this.imageIndex - 1][a], c = {
                        width: c.location.width,
                        height: c.location.height,
                        x: c.location.x,
                        y: c.location.y,
                        alpha: c.alpha,
                        images: c.Images
                    }, this.carouselArray.push(new initCarousel(this.MMBackground, c, this.width, this.height, this.imageIndex + a))) : pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_DYNSHOW ?
                    (c = pageEditor[this.imageIndex - 1][a], c = {
                        width: c.location.width,
                        height: c.location.height,
                        x: c.location.x,
                        y: c.location.y,
                        alpha: c.alpha,
                        images: c.Images,
                        borderWidth: c.borderWidth
                    }, this.dynshowArray.push(new initDynamicShow(this.MMBackground, c, this.width, this.height, this.imageIndex + a))) : pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_BANNER ? (c = pageEditor[this.imageIndex - 1][a], c = {
                        width: c.location.width,
                        height: c.location.height,
                        x: c.location.x,
                        y: c.location.y,
                        alpha: c.alpha,
                        action: c.action,
                        banners: c.banners
                    }, this.bannerArray.push(new initBanner(this.MMBackground, c, this.width, this.height, this.imageIndex + a))) : pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_FLIPJUMP ? (c = pageEditor[this.imageIndex - 1][a], c = {
                            width: c.location.width,
                            height: c.location.height,
                            x: c.location.x,
                            y: c.location.y,
                            alpha: c.alpha,
                            images: c.Images,
                            addBackground: parseBool(c.addBack),
                            addBorder: parseBool(c.addBorder),
                            backgroundColor: c.backgroundColor,
                            backgroundAlpha: c.backgroundColorAlpha,
                            borderColor: c.backgroundBorderColor
                        },
                        this.jumpArray.push(new initFlipJump(this.MMBackground, c, this.width, this.height, this.imageIndex + a))) : pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_PLUGIN && pageEditor[this.imageIndex - 1][a].className == PLUGIN_ROTATE3D ? (c = pageEditor[this.imageIndex - 1][a], c = {
                        width: c.location.width,
                        height: c.location.height,
                        x: c.location.x,
                        y: c.location.y,
                        alpha: c.alpha,
                        images: c.componentData.Images,
                        addBackground: parseBool(c.componentData.addBack),
                        addBorder: parseBool(c.componentData.addBorder),
                        backgroundColor: c.componentData.backColor,
                        backgroundAlpha: c.componentData.backAlpha,
                        borderColor: c.componentData.borderColor,
                        sh: parseBool(c.shadow.hasDropShadow),
                        sx: c.shadow.shadowBlurX,
                        sy: c.shadow.shadowBlurY,
                        se: c.shadow.shadowDistance,
                        sr: c.shadow.shadowColor
                    }, this.rotate3DArray.push(new initRotate3D(this.MMBackground, c, this.width, this.height, this.imageIndex + a))) : pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_VIDEO1 ? (c = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        src: b.videoURL,
                        moviePlayTriggerEvt: b.moviePlayTriggerEvt,
                        movieStopTriggerEvt: b.movieStopTriggerEvt
                    }, c = new initVideo(this.MMBackground, c, this.width, this.height, "smallblack"), this.videoArray.push(c)) : pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_VIDEO2 ? (c = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        src: b.videoURL,
                        moviePlayTriggerEvt: b.moviePlayTriggerEvt,
                        movieStopTriggerEvt: b.movieStopTriggerEvt
                    }, c = new initVideo(this.MMBackground, c, this.width,
                        this.height), this.videoArray.push(c)) : pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_PLUGIN && pageEditor[this.imageIndex - 1][a].className == PLUGIN_VIDEO1 ? (c = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        src: b.componentData.videoURL,
                        moviePlayTriggerEvt: b.moviePlayTriggerEvt,
                        movieStopTriggerEvt: b.movieStopTriggerEvt
                    }, c = new initVideo(this.MMBackground, c, this.width, this.height, "classic"), this.videoArray.push(c)) : pageEditor[this.imageIndex -
                        1][a].annotype == PageEditor.AnnoType.ANNO_PLUGIN && pageEditor[this.imageIndex - 1][a].className == PLUGIN_VIDEO2 ? (c = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        src: b.componentData.videoURL,
                        moviePlayTriggerEvt: b.moviePlayTriggerEvt,
                        movieStopTriggerEvt: b.movieStopTriggerEvt
                    }, c = new initVideo(this.MMBackground, c, this.width, this.height), this.videoArray.push(c)) : pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_AUDIO1 ? (c = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        src: b.soundList == {} ? "" : b.soundList.sound,
                        key: "path",
                        soundPlayTriggerEvt: b.soundPlayTriggerEvt,
                        soundStopTriggerEvt: b.soundStopTriggerEvt
                    }, c = new initAudio(this.MMBackground, c, this.width, this.height, "advanced"), this.audioArray.push(c)) : pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_AUDIO2 ? (c = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        src: b.data == {} ? "" : b.data.item,
                        key: "fname",
                        soundPlayTriggerEvt: b.soundPlayTriggerEvt,
                        soundStopTriggerEvt: b.soundStopTriggerEvt
                    }, c = new initAudio(this.MMBackground, c, this.width, this.height, "wave"), this.audioArray.push(c)) : pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_PLUGIN && pageEditor[this.imageIndex - 1][a].className in audioThemeNames ? (c = {
                            width: b.location.width,
                            height: b.location.height,
                            x: b.location.x,
                            y: b.location.y,
                            alpha: b.alpha,
                            src: b.componentData.songs == {} ? "" : b.componentData.songs.song,
                            key: "url",
                            soundPlayTriggerEvt: b.soundPlayTriggerEvt,
                            soundStopTriggerEvt: b.soundStopTriggerEvt
                        }, b = void 0, "GlassAudioPlayer" == pageEditor[this.imageIndex - 1][a].className && (b = "glass"), "SimpleAudioPlayer" == pageEditor[this.imageIndex - 1][a].className && (b = "simple"), "StandardAudioPlayer" == pageEditor[this.imageIndex - 1][a].className && (b = "enjoy"), "StandardAudioPlayer02" == pageEditor[this.imageIndex - 1][a].className && (b = "decent"), "StandardAudioPlayer03" == pageEditor[this.imageIndex - 1][a].className && (b = "tree"), "StandardAudioPlayer04" == pageEditor[this.imageIndex - 1][a].className &&
                        (b = "christmas"), "StandardAudioPlayer05" == pageEditor[this.imageIndex - 1][a].className && (b = "turnonoff"), "StandardAudioPlayer06" == pageEditor[this.imageIndex - 1][a].className && (b = "fade"), c = new initAudio(this.MMBackground, c, this.width, this.height, b), this.audioArray.push(c)) : pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_ALPHATRANSITIONBANNER ? (c = pageEditor[this.imageIndex - 1][a], c = {
                        width: c.location.width,
                        height: c.location.height,
                        x: c.location.x,
                        y: c.location.y,
                        alpha: c.alpha,
                        src: c.url,
                        action: c.action,
                        images: c.Images.node
                    }, this.alimageArray.push(new initAlphaTransitionBanner(this.MMBackground, c, this.width, this.height))) : pageEditor[this.imageIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_EMBEDDEDSLIDESHOW ? (c = pageEditor[this.imageIndex - 1][a], c = {
                        width: c.location.width,
                        height: c.location.height,
                        x: c.location.x,
                        y: c.location.y,
                        alpha: c.alpha,
                        images: c.Images.Image
                    }, this.slideShowArray.push(new initEmbeddedSlideshow(this.MMBackground, c, this.width, this.height))) : pageEditor[this.imageIndex - 1][a].annotype ==
                    PageEditor.AnnoType.ANNO_PRINT && (c = pageEditor[this.imageIndex - 1][a], c = {
                        width: c.location.width,
                        height: c.location.height,
                        x: c.location.x,
                        y: c.location.y,
                        alpha: c.alpha,
                        overAlpha: c.overAlpha,
                        borderColor: c.borderColor,
                        overColor: c.overColor,
                        borderWidth: c.barderWidth,
                        printTitle: c.printTitle,
                        printDesc: c.printDesc
                    }, this.areaArray.push(new initPrint(this.MMBackground, c, this.width, this.height, this.imageIndex)))
        }
        this.showOrHideYoutube(getShownPage())
    }
};
normalSide.prototype.changeTo0x = function(a) {
    var b = a;
    "#" != a.substr(0, 1) && "0x" != a.substr(0, 2) && (b = "#" + parseInt(a).toString(16));
    "0x" == a.substr(0, 2) && (b = a.replace("0x", "#"));
    return b
};
normalSide.prototype.showGray = function() {
    this.grayColor.css({
        display: "block"
    });
    this.searchHighlight.css({
        display: "block"
    });
    this.isLeft && browserType != BrowserType.MS && this.grayShadow.css({
        display: "block"
    });
    for (var a = 0; a < this.youtubeArray.length; a++) this.youtubeArray[a].show();
    for (a = 0; a < this.flashSwfArray.length; a++) this.flashSwfArray[a].show();
    for (a = 0; a < this.buttonArray.length; a++) this.buttonArray[a].show()
};
normalSide.prototype.hideGray = function() {
    this.grayColor.css({
        display: "none"
    });
    this.clearHighlight();
    this.grayShadow.css({
        display: "none"
    });
    for (var a = 0; a < this.youtubeArray.length; a++) this.youtubeArray[a].hide();
    for (a = 0; a < this.flashSwfArray.length; a++) this.flashSwfArray[a].hide();
    for (a = 0; a < this.buttonArray.length; a++) this.buttonArray[a].hide()
};
normalSide.prototype.highlightSearch = function() {
    highlightSearchFun(this.searchHighlight, this.imageIndex)
};
normalSide.prototype.clearHighlight = function() {
    clearHighlightFun(this.searchHighlight)
};
normalSide.prototype.onResize = function(a, b) {
    this.side.css({
        width: a + "px",
        height: b + "px"
    });
    this.sideContent.css({
        width: a + "px",
        height: b + "px"
    });
    this.sideImg.css({
        width: a + "px",
        height: b + "px"
    });
    this.grayColor.css({
        width: a + "px",
        height: b + "px"
    });
    this.searchHighlight.css({
        width: a + "px",
        height: b + "px"
    });
    this.MMBackground.css({
        width: a + "px",
        height: b + "px"
    });
    var c = a / 450;
    this.midShadow.css({
        height: b + "px",
        width: Math.floor(this.isLeft ? c * userConfig.leftShadowWidth : c * userConfig.rightShadowWidth) + "px"
    });
    this.loadingImg.css({
        left: (a -
            32) / 2 + "px",
        top: (b - 32) / 2 + "px"
    });
    browserType != BrowserType.MS && (this.grayShadow.css({
        width: a + "px",
        height: b + "px",
        left: 0.3 * b - a + "px",
        top: -b / 3 + "px"
    }), this.grayShadow.rotate(30));
    for (c = 0; c < this.linkArray.length; c++) this.linkArray[c].onResize(a, b);
    for (c = 0; c < this.youtubeArray.length; c++) this.youtubeArray[c].onResize(a, b);
    for (c = 0; c < this.videoArray.length; c++) this.videoArray[c].onResize(a, b);
    for (c = 0; c < this.audioArray.length; c++) this.audioArray[c].onResize(a, b);
    for (c = 0; c < this.imageArray.length; c++) this.imageArray[c].onResize(a,
        b);
    for (c = 0; c < this.buttonArray.length; c++) this.buttonArray[c].onResize(a, b);
    for (c = 0; c < this.flashShowArray.length; c++) this.flashShowArray[c].onResize(a, b);
    for (c = 0; c < this.arrowArray.length; c++) this.arrowArray[c].onResize(a, b);
    for (c = 0; c < this.lineArray.length; c++) this.lineArray[c].onResize(a, b);
    for (c = 0; c < this.reArray.length; c++) this.reArray[c].onResize(a, b);
    for (c = 0; c < this.textArray.length; c++) this.textArray[c].onResize(a, b);
    for (c = 0; c < this.roundArray.length; c++) this.roundArray[c].onResize(a, b);
    for (c = 0; c <
        this.areaArray.length; c++) this.areaArray[c].onResize(a, b);
    for (c = 0; c < this.calloutArray.length; c++) this.calloutArray[c].onResize(a, b);
    for (c = 0; c < this.atextArray.length; c++) this.atextArray[c].onResize(a, b);
    for (c = 0; c < this.startextArray.length; c++) this.startextArray[c].onResize(a, b);
    for (c = 0; c < this.aminArray.length; c++) this.aminArray[c].onResize(a, b);
    for (c = 0; c < this.atimageArray.length; c++) this.atimageArray[c].onResize(a, b);
    for (c = 0; c < this.efftextArray.length; c++) this.efftextArray[c].onResize(a, b);
    for (c = 0; c <
        this.soundArray.length; c++) this.soundArray[c].onResize(a, b);
    for (c = 0; c < this.bannerArray.length; c++) this.bannerArray[c].onResize(a, b);
    for (c = 0; c < this.carouselArray.length; c++) this.carouselArray[c].onResize(a, b);
    for (c = 0; c < this.dynshowArray.length; c++) this.dynshowArray[c].onResize(a, b);
    for (c = 0; c < this.jumpArray.length; c++) this.jumpArray[c].onResize(a, b);
    for (c = 0; c < this.rotate3DArray.length; c++) this.rotate3DArray[c].onResize(a, b);
    for (c = 0; c < this.vimeoArray.length; c++) this.vimeoArray[c].onResize(a, b);
    for (c =
        0; c < this.flashSwfArray.length; c++) this.flashSwfArray[c].onResize(a, b);
    for (c = 0; c < this.slideShowArray.length; c++) this.slideShowArray[c].onResize(a, b);
    for (c = 0; c < this.alimageArray.length; c++) this.alimageArray[c].onResize(a, b);
    this.width = a;
    this.height = b
};
normalSide.prototype.sideAddChild = function(a) {
    this.side.append(a)
};
normalSide.prototype.enterSide = function() {
    for (var a = 0; a < this.youtubeArray.length; a++) this.youtubeArray[a].getPlayEvt(), this.youtubeArray[a].getStopEvt(), this.youtubeArray[a].show();
    for (a = 0; a < this.flashSwfArray.length; a++) this.flashSwfArray[a].show();
    for (a = 0; a < this.buttonArray.length; a++) this.buttonArray[a].show();
    for (a = 0; a < this.videoArray.length; a++) this.videoArray[a].getPlayEvt() == PageEditor.PlayEvt.EVT_PLAY && this.videoArray[a].playVideo(), this.videoArray[a].getStopEvt() == PageEditor.PlayEvt.EVT_PLAY &&
        this.videoArray[a].pauseVideo();
    for (a = 0; a < this.audioArray.length; a++) this.audioArray[a].getPlayEvt() == PageEditor.PlayEvt.EVT_PLAY && this.audioArray[a].play(), this.audioArray[a].getStopEvt() == PageEditor.PlayEvt.EVT_PLAY && this.audioArray[a].pause()
};
normalSide.prototype.leaveSide = function() {
    for (var a = 0; a < this.youtubeArray.length; a++) this.youtubeArray[a].getPlayEvt(), this.youtubeArray[a].getStopEvt(), this.youtubeArray[a].hide();
    for (a = 0; a < this.flashSwfArray.length; a++) this.flashSwfArray[a].hide();
    for (a = 0; a < this.buttonArray.length; a++) this.buttonArray[a].hide();
    for (a = 0; a < this.videoArray.length; a++) this.videoArray[a].getPlayEvt() == PageEditor.PlayEvt.EVT_STOP && this.videoArray[a].playVideo(), this.videoArray[a].getStopEvt() == PageEditor.PlayEvt.EVT_STOP &&
        this.videoArray[a].pauseVideo();
    for (a = 0; a < this.audioArray.length; a++) this.audioArray[a].getPlayEvt() == PageEditor.PlayEvt.EVT_STOP && this.audioArray[a].play(), this.audioArray[a].getStopEvt() == PageEditor.PlayEvt.EVT_STOP && this.audioArray[a].pause();
    this.searchHighlight.css({
        "background-image": ""
    })
};
normalSide.prototype.hideYoutube = function() {
    for (var a = 0; a < this.youtubeArray.length; a++) this.youtubeArray[a].hide()
};
normalSide.prototype.showYoutube = function() {
    for (var a = 0; a < this.youtubeArray.length; a++) this.youtubeArray[a].show()
};
normalSide.prototype.initZoom = function() {
    var a = !1;
    this.zw = this.width;
    this.zh = this.height;
    this.isZoom = !1;
    var b = Point(0, 0),
        c = Point(0, 0);
    this.side.bind(_event._down, function(d) {
        d = d.originalEvent.touches;
        2 == d.length && (a = !0, b = Point(d[0].pageX, d[0].pageY), c = Point(d[1].pageX, d[1].pageY))
    });
    this.side.bind(_event._end, function() {});
    this.side.bind(_event._move, function(d) {
        d = d.originalEvent.touches;
        a && (100 <= Math.pow(b.x - d[0].pageX, 2) + Math.pow(b.y - d[0].pageY, 2) || (Math.pow(c.x - d[1].pageX, 2), Math.pow(c.y - d[1].pageY,
            2)))
    })
};
normalSide.prototype.showLoading = function() {
    this.side.append(this.loadingImg)
};
normalSide.prototype.hideLoading = function() {
    this.loadingImg.remove()
};

function normalPage() {
    this.pageStatu = !1;
    this.corner = "tr";
    this.pageIndex = 1;
    this.isHardPage = !1;
    this.pageVisible = !0;
    this.width = 300;
    this.height = 400;
    this.maskWidth = 500;
    this.isLastPageReset = !1
}
normalPage.prototype.create = function(a) {
    this.page = $("<div class='paper'></div>");
    this.maskA = $("<div class='pageMask'></div>");
    this.maskB = $("<div class='pageMask'></div>");
    this.sideAPosition = $("<div class='sidePosition'></div>");
    this.sideBPosition = $("<div class='sidePosition'></div>");
    this.flipBackShadow = $("<div class='backShadow'></div>");
    this.flipFrontShadow = $("<div class='frontShadow'></div>");
    this.sideA = new normalSide(this.sideAPosition, !1);
    this.sideB = new normalSide(this.sideBPosition, !0);
    this.page.append(this.flipBackShadow);
    a.append(this.page);
    this.page.append(this.maskA);
    this.page.append(this.maskB);
    this.maskA.append(this.sideAPosition);
    this.maskB.append(this.sideBPosition);
    this.sideAPosition.append(this.sideA.side);
    this.sideBPosition.append(this.sideB.side)
};
normalPage.prototype.getSideA = function() {
    return this.sideA
};
normalPage.prototype.getSideB = function() {
    return this.sideB
};
normalPage.prototype.onResize = function(a, b, c, d) {
    this.page.css({
        width: a + "px",
        height: b + "px",
        left: d + "px"
    });
    this.maskA.css({
        width: a + "px",
        height: b + "px"
    });
    this.maskB.css({
        width: a + "px",
        height: b + "px"
    });
    this.flipBackShadow.css({
        width: a + "px",
        height: b + "px"
    });
    this.flipFrontShadow.css({
        width: a + "px",
        height: b + "px"
    });
    this.sideAPosition.css({
        width: a + "px",
        height: b + "px"
    });
    this.sideBPosition.css({
        width: a + "px",
        height: b + "px"
    });
    this.sideA.onResize(a, b);
    this.sideB.onResize(a, b);
    this.width = a;
    this.height = b;
    this.maskWidth =
        c
};
normalPage.prototype.fillSideA = function(a) {
    this.sideA.fillContent(a);
    this.pageIndex = a;
    this.isHardPage = !1;
    1 == a && hardPageEnable && 3 != browserType && (this.isHardPage = !0)
};
normalPage.prototype.fillSideB = function(a) {
    this.sideB.fillContent(a);
    a == totalPageCount && hardPageEnable && 3 != browserType && (this.isHardPage = !0)
};
normalPage.prototype.beginFlip = function(a) {
    this.corner = a;
    this.isLeft() ? (this.sideA.sideAddChild(this.flipFrontShadow), this.pageStatu = !0) : (this.sideB.sideAddChild(this.flipFrontShadow), this.pageStatu = !1);
    1 >= flipBook.gotoPageIndex && flipBook.bmt.leftBox.hide();
    flipBook.gotoPageIndex >= totalPageCount && flipBook.bmt.rightBox.hide();
    3 >= flipBook.gotoPageIndex && flipBook.setLeftThicknessVisible(!1);
    flipBook.gotoPageIndex >= totalPageCount - 2 && flipBook.setRightThicknessVisible(!1);
    this.maskA.css({
        width: this.maskWidth +
            "px",
        height: this.maskWidth + "px"
    });
    this.maskB.css({
        width: this.maskWidth + "px",
        height: this.maskWidth + "px"
    });
    flipBook.normalBookShadow.hideShadow()
};
normalPage.prototype.flipToPoint = function(a, b, c) {
    if (this.isHardPage) this.hardFlip(a, c);
    else if (this.isCorner(a, b)) this.resetPage(this.isLeft());
    else {
        var d = computePoint(this.corner, a, b, this.width, this.height, this.maskWidth, this.flipFrontShadow, this.flipBackShadow),
            a = d.Angle,
            b = d.Df,
            e = d.NomovePoint,
            d = d.Mv,
            f = this.isLeft(),
            j = this.isBottom();
        c && (this.showShadow(), this.page.css({
            left: f ? "0px" : this.width + "px"
        }), this.sideAPosition.css({
            right: f ? "0px" : "auto",
            left: f ? "auto" : "0px",
            top: j ? "auto" : "0px",
            bottom: j ? "0px" : "auto"
        }), this.sideBPosition.css({
            right: f ? "0px" : "auto",
            left: f ? "auto" : "0px",
            top: j ? "auto" : "0px",
            bottom: j ? "0px" : "auto"
        }), this.setSideUp(f), f ? this.sideA.hideGray() : this.sideB.hideGray());
        switch (this.corner) {
            case "tl":
                this.rotateElement(this.maskA, "100% 0%", translate(-e.x + this.width - this.maskWidth + d.x, -e.y + d.y) + rotate(-a));
                this.rotateElement(this.maskB, "100% 0%", translate(-e.x + this.width - this.maskWidth + d.x, -e.y + d.y) + rotate(-a));
                this.rotateElement(this.sideBPosition, "100% 0%", rotate(a) + translate(e.x - d.x,
                    e.y - d.y));
                this.rotateElement(this.sideAPosition, "100% 0%", rotate(a) + translate(e.x + b.x - d.x, e.y + b.y - d.y));
                this.rotateElement(this.sideA.side, "100% 0%", translate(-this.width, 0) + rotate(2 * (90 - a)));
                break;
            case "tr":
                this.rotateElement(this.maskA, "0% 0%", translate(e.x + d.x, -e.y + d.y) + rotate(a));
                this.rotateElement(this.maskB, "0% 0%", translate(e.x + d.x, -e.y + d.y) + rotate(a));
                this.rotateElement(this.sideAPosition, "0% 0%", rotate(-a) + translate(-e.x - d.x, e.y - d.y));
                this.rotateElement(this.sideBPosition, "0% 0%", rotate(-a) +
                    translate(-e.x - d.x + b.x, e.y + b.y - d.y));
                this.rotateElement(this.sideB.getSide(), "0% 0%", translate(0, 0) + rotate(2 * (a - 90)));
                break;
            case "bl":
                this.rotateElement(this.maskA, "100% 100%", translate(-e.x + this.width - this.maskWidth + d.x, e.y + this.height - this.maskWidth + d.y) + rotate(a));
                this.rotateElement(this.maskB, "100% 100%", translate(-e.x + this.width - this.maskWidth + d.x, e.y + this.height - this.maskWidth + d.y) + rotate(a));
                this.rotateElement(this.sideBPosition, "100% 100%", rotate(-a) + translate(e.x - d.x, -e.y - d.y));
                this.rotateElement(this.sideAPosition,
                    "100% 100%", rotate(-a) + translate(e.x + b.x - d.x, -e.y - d.y + b.y));
                this.rotateElement(this.sideA.getSide(), "100% 100%", translate(-this.width, -this.height) + rotate(2 * (a - 90)));
                break;
            case "br":
                this.rotateElement(this.maskA, "0% 100%", translate(e.x + d.x, e.y + this.height - this.maskWidth + d.y) + rotate(-a)), this.rotateElement(this.maskB, "0% 100%", translate(e.x + d.x, e.y + this.height - this.maskWidth + d.y) + rotate(-a)), this.rotateElement(this.sideAPosition, "0% 100%", rotate(a) + translate(-e.x - d.x, -e.y - d.y)), this.rotateElement(this.sideBPosition,
                    "0% 100%", rotate(a) + translate(-e.x + b.x - d.x, -e.y + b.y - d.y)), this.rotateElement(this.sideB.getSide(), "0% 100%", translate(0, -this.height) + rotate(2 * (90 - a)))
        }
    }
};
normalPage.prototype.flipToAnPoint = function(a, b, c) {
    this.beginFlip(c);
    this.flipToPoint(a, b, !0);
    "tl" == c || "bl" == c ? this.setSideUp(!0) : this.setSideUp(!1)
};
normalPage.prototype.endFlip = function() {
    this.hideShadow();
    this.pageStatu = this.isLeft() ? !1 : !0;
    this.sideA.showGray();
    this.sideB.showGray();
    flipBook.normalBookShadow.showShadow()
};
normalPage.prototype.hardFlip = function(a, b) {
    var c = !1;
    if ("tl" == this.corner || "bl" == this.corner) c = !0;
    var d = c ? a - this.width : a;
    d < -this.width && (d = -this.width);
    d >= this.width && (d = this.width);
    d = 180 * Math.acos(d / this.width) / Math.PI;
    c ? (b && (this.sideA.imgFlipOver(!0), this.page.css({
        "-webkit-perspective-origin": "right center",
        "-webkit-transform-origin": "100% 50%",
        "-webkit-transform-style": "preserve-3d",
        "-moz-perspective-origin": "right center",
        "-moz-transform-origin": "100% 50%",
        "-moz-transform-style": "preserve-3d",
        "z-index": 20
    })), d = 180 - d, this.page.css({
        "-webkit-transform": "perspective(3000px) rotateY(" + d + "deg) translate3d(0px,0px,-1px)",
        "-moz-transform": "perspective(3000px) rotateY(" + d + "deg)"
    }), 90 <= d ? this.setSideUp(!0) : this.setSideUp(!1)) : (b && (this.sideB.imgFlipOver(!0), this.page.css({
        "-webkit-perspective-origin": "left center",
        "-webkit-transform-origin": "0% 50%",
        "-webkit-transform-style": "preserve-3d",
        "-moz-transform-style": "preserve-3d",
        "-moz-perspective-origin": "left center",
        "-moz-transform-origin": "0% 50%",
        "z-index": 20
    })), this.page.css({
        "-webkit-transform": "perspective(3000px) rotateY(" + -d + "deg)",
        "-moz-transform": "perspective(3000px) rotateY(" + -d + "deg)"
    }), 90 <= d ? this.setSideUp(!1) : this.setSideUp(!0))
};
normalPage.prototype.resetPage = function(a) {
    var b = this;
    this.isHardPage && (this.sideA.imgFlipOver(!1), this.sideB.imgFlipOver(!1), !this.isLastPageReset && this.pageIndex + 1 == totalPageCount ? (this.isLastPageReset = !0, window.setTimeout(function() {
        b.page.css({
            "-webkit-transform-style": "flat",
            "-moz-transform-style": "flat",
            "-webkit-transform": "rotateY(0deg)",
            "-moz-transform": "rotateY(0deg)",
            "-o-transform": "rotateY(0deg)",
            "-ms-transform": "rotateY(0deg)",
            transform: "rotateY(0deg)"
        })
    }, 10)) : b.page.css({
        "-webkit-transform-style": "flat",
        "-moz-transform-style": "flat",
        "-webkit-transform": "rotateY(0deg)",
        "-moz-transform": "rotateY(0deg)",
        "-o-transform": "rotateY(0deg)",
        "-ms-transform": "rotateY(0deg)",
        transform: "rotateY(0deg)"
    }));
    this.page.css({
        left: a ? "0px" : this.width + "px"
    });
    this.maskA.css({
        top: "0px",
        left: "0px",
        bottom: "auto",
        right: "auto",
        width: this.width,
        height: this.height
    });
    this.maskB.css({
        top: "0px",
        left: "0px",
        bottom: "auto",
        right: "auto",
        width: this.width,
        height: this.height
    });
    this.rotateElement(this.maskA, "0% 0%", translate(0, 0) + rotate(0));
    this.rotateElement(this.maskB, "0% 0%", translate(0, 0) + rotate(0));
    this.sideAPosition.css({
        top: "0px",
        left: "0px",
        bottom: "auto",
        right: "auto"
    });
    this.sideBPosition.css({
        top: "0px",
        left: "0px",
        bottom: "auto",
        right: "auto"
    });
    this.rotateElement(this.sideAPosition, "0% 0%", translate(0, 0) + rotate(0));
    this.rotateElement(this.sideBPosition, "0% 0%", translate(0, 0) + rotate(0));
    this.rotateElement(this.sideA.getSide(), "0% 0%", translate(0, 0) + rotate(0));
    this.rotateElement(this.sideB.getSide(), "0% 0%", translate(0, 0) + rotate(0))
};
normalPage.prototype.setSideUp = function(a) {
    this.maskA.css({
        "z-index": a ? 2 : 1
    });
    this.maskB.css({
        "z-index": a ? 1 : 2
    })
};
normalPage.prototype.rotateElement = function(a, b, c) {
    a.css({
        "-webkit-transform-origin": b,
        "-moz-transform-origin": b,
        "-ms-transform-origin": b,
        "-o-transform-origin": b,
        "-webkit-transform": c,
        "-moz-transform": c,
        "-ms-transform": c,
        "-o-transform": c
    })
};
normalPage.prototype.translateElement = function(a, b, c) {
    a.css({
        "-webkit-transform": "translate(" + b + "px," + c + "px)",
        "-moz-transform": "translate(" + b + "px," + c + "px)",
        "-o-transform": "translate(" + b + "px," + c + "px)",
        "-ms-transform": "translate(" + b + "px," + c + "px)"
    })
};
normalPage.prototype.isTop = function() {
    return 0 <= this.corner.indexOf("t")
};
normalPage.prototype.isLeft = function() {
    return 0 <= this.corner.indexOf("l")
};
normalPage.prototype.isBottom = function() {
    return 0 <= this.corner.indexOf("b")
};
normalPage.prototype.isRight = function() {
    return 0 <= this.corner.indexOf("r")
};
normalPage.prototype.isCorner = function(a, b) {
    var c = 0;
    this.isTop() && 0 == b && c++;
    this.isBottom() && b == this.height && c++;
    this.isLeft() && 0 == a && c++;
    this.isRight() && a == this.width && c++;
    return 2 == c
};
normalPage.prototype.setPageVisible = function(a) {
    a ? (this.page.css({
        display: "block"
    }), this.pageVisible = !0) : (this.page.css({
        display: "none"
    }), this.pageVisible = !1)
};
normalPage.prototype.getPageStatu = function() {
    return this.pageStatu
};
normalPage.prototype.setPageStatu = function(a) {
    this.pageStatu = a
};
normalPage.prototype.showShadow = function() {
    this.flipFrontShadow.css({
        display: "block"
    });
    this.flipBackShadow.css({
        display: "block"
    })
};
normalPage.prototype.hideShadow = function() {
    this.flipFrontShadow.css({
        display: "none"
    });
    this.flipBackShadow.css({
        display: "none"
    })
};
normalPage.prototype.setCSS = function(a) {
    this.page.css(a)
};

function rightToLeftNormalPage() {
    normalPage.call(this)
}
$.extend(rightToLeftNormalPage.prototype, normalPage.prototype);
rightToLeftNormalPage.prototype.create = function(a) {
    this.pageBack = $("<div class='paper'></div>");
    this.page = $("<div class='paper'></div>");
    this.maskA = $("<div class='pageMask'></div>");
    this.maskB = $("<div class='pageMask'></div>");
    this.sideAPosition = $("<div class='sidePosition'></div>");
    this.sideBPosition = $("<div class='sidePosition'></div>");
    this.flipBackShadow = $("<div class='backShadow'></div>");
    this.flipFrontShadow = $("<div class='frontShadow'></div>");
    this.sideA = new normalSide(this.sideAPosition, !0);
    this.sideB = new normalSide(this.sideBPosition, !1);
    a.append(this.page);
    this.page.append(this.pageBack);
    this.pageBack.append(this.flipBackShadow);
    this.pageBack.append(this.maskA);
    this.pageBack.append(this.maskB);
    this.maskA.append(this.sideAPosition);
    this.maskB.append(this.sideBPosition);
    this.sideAPosition.append(this.sideA.side);
    this.sideBPosition.append(this.sideB.side)
};
rightToLeftNormalPage.prototype.beginFlip = function(a) {
    this.corner = a;
    this.isLeft() ? (this.sideB.sideAddChild(this.flipFrontShadow), this.pageStatu = !0) : (this.sideA.sideAddChild(this.flipFrontShadow), this.pageStatu = !1);
    1 >= flipBook.gotoPageIndex && flipBook.bmt.rightBox.hide();
    flipBook.gotoPageIndex >= totalPageCount && flipBook.bmt.leftBox.hide();
    3 >= flipBook.gotoPageIndex && flipBook.setLeftThicknessVisible(!1);
    flipBook.gotoPageIndex >= totalPageCount - 2 && flipBook.setRightThicknessVisible(!1);
    this.maskA.css({
        width: this.maskWidth +
            "px",
        height: this.maskWidth + "px"
    });
    this.maskB.css({
        width: this.maskWidth + "px",
        height: this.maskWidth + "px"
    });
    flipBook.normalBookShadow.hideShadow()
};
rightToLeftNormalPage.prototype.flipToPoint = function(a, b, c) {
    if (this.isHardPage) this.hardFlip(a, c);
    else if (this.isCorner(a, b)) this.resetPage(!this.isLeft());
    else {
        var d = computePoint(this.corner, a, b, this.width, this.height, this.maskWidth, this.flipFrontShadow, this.flipBackShadow),
            a = d.Angle,
            b = d.Df,
            e = d.NomovePoint,
            d = d.Mv,
            f = this.isLeft(),
            j = this.isBottom();
        c && (this.showShadow(), this.page.css({
            left: f ? "0px" : this.width + "px"
        }), this.sideAPosition.css({
            right: f ? "0px" : "auto",
            left: f ? "auto" : "0px",
            top: j ? "auto" : "0px",
            bottom: j ? "0px" : "auto"
        }), this.sideBPosition.css({
            right: f ? "0px" : "auto",
            left: f ? "auto" : "0px",
            top: j ? "auto" : "0px",
            bottom: j ? "0px" : "auto"
        }), this.setSideUp(!f), f ? this.sideA.hideGray() : this.sideB.hideGray());
        switch (this.corner) {
            case "tl":
                this.rotateElement(this.maskA, "100% 0%", translate(-e.x + this.width - this.maskWidth + d.x, -e.y + d.y) + rotate(-a));
                this.rotateElement(this.maskB, "100% 0%", translate(-e.x + this.width - this.maskWidth + d.x, -e.y + d.y) + rotate(-a));
                this.rotateElement(this.sideAPosition, "100% 0%", rotate(a) + translate(e.x -
                    d.x, e.y - d.y));
                this.rotateElement(this.sideBPosition, "100% 0%", rotate(a) + translate(e.x + b.x - d.x, e.y + b.y - d.y));
                this.rotateElement(this.sideB.side, "100% 0%", translate(-this.width, 0) + rotate(2 * (90 - a)));
                break;
            case "tr":
                this.rotateElement(this.maskA, "0% 0%", translate(e.x + d.x, -e.y + d.y) + rotate(a));
                this.rotateElement(this.maskB, "0% 0%", translate(e.x + d.x, -e.y + d.y) + rotate(a));
                this.rotateElement(this.sideBPosition, "0% 0%", rotate(-a) + translate(-e.x - d.x, e.y - d.y));
                this.rotateElement(this.sideAPosition, "0% 0%", rotate(-a) +
                    translate(-e.x - d.x + b.x, e.y + b.y - d.y));
                this.rotateElement(this.sideA.getSide(), "0% 0%", translate(0, 0) + rotate(2 * (a - 90)));
                break;
            case "bl":
                this.rotateElement(this.maskA, "100% 100%", translate(-e.x + this.width - this.maskWidth + d.x, e.y + this.height - this.maskWidth + d.y) + rotate(a));
                this.rotateElement(this.maskB, "100% 100%", translate(-e.x + this.width - this.maskWidth + d.x, e.y + this.height - this.maskWidth + d.y) + rotate(a));
                this.rotateElement(this.sideAPosition, "100% 100%", rotate(-a) + translate(e.x - d.x, -e.y - d.y));
                this.rotateElement(this.sideBPosition,
                    "100% 100%", rotate(-a) + translate(e.x + b.x - d.x, -e.y - d.y + b.y));
                this.rotateElement(this.sideB.getSide(), "100% 100%", translate(-this.width, -this.height) + rotate(2 * (a - 90)));
                break;
            case "br":
                this.rotateElement(this.maskA, "0% 100%", translate(e.x + d.x, e.y + this.height - this.maskWidth + d.y) + rotate(-a)), this.rotateElement(this.maskB, "0% 100%", translate(e.x + d.x, e.y + this.height - this.maskWidth + d.y) + rotate(-a)), this.rotateElement(this.sideBPosition, "0% 100%", rotate(a) + translate(-e.x - d.x, -e.y - d.y)), this.rotateElement(this.sideAPosition,
                    "0% 100%", rotate(a) + translate(-e.x + b.x - d.x, -e.y + b.y - d.y)), this.rotateElement(this.sideA.getSide(), "0% 100%", translate(0, -this.height) + rotate(2 * (90 - a)))
        }
    }
};
rightToLeftNormalPage.prototype.hardFlip = function(a, b) {
    var c = !1;
    if ("tl" == this.corner || "bl" == this.corner) c = !0;
    var d = c ? a - this.width : a;
    d < -this.width && (d = -this.width);
    d >= this.width && (d = this.width);
    d = 180 * Math.acos(d / this.width) / Math.PI;
    c ? (b && (this.sideB.imgFlipOver(!0), this.page.css({
        "-webkit-perspective-origin": "right center",
        "-webkit-transform-origin": "100% 50%",
        "-webkit-transform-style": "preserve-3d",
        "-moz-perspective-origin": "right center",
        "-moz-transform-origin": "100% 50%",
        "-moz-transform-style": "preserve-3d",
        "z-index": 20
    })), d = 180 - d, this.page.css({
        "-webkit-transform": "perspective(3000px) rotateY(" + d + "deg) translate3d(0px,0px,-1px)",
        "-moz-transform": "perspective(3000px) rotateY(" + d + "deg)"
    }), 90 <= d ? this.setSideUp(!1) : this.setSideUp(!0)) : (b && (this.sideA.imgFlipOver(!0), this.page.css({
        "-webkit-perspective-origin": "left center",
        "-webkit-transform-origin": "0% 50%",
        "-webkit-transform-style": "preserve-3d",
        "-moz-transform-style": "preserve-3d",
        "-moz-perspective-origin": "left center",
        "-moz-transform-origin": "0% 50%",
        "z-index": 20
    })), this.page.css({
        "-webkit-transform": "perspective(3000px) rotateY(" + -d + "deg)",
        "-moz-transform": "perspective(3000px) rotateY(" + -d + "deg)"
    }), 90 <= d ? this.setSideUp(!0) : this.setSideUp(!1))
};
rightToLeftNormalPage.prototype.resetPage = function(a) {
    this.isHardPage && (this.sideA.imgFlipOver(!1), this.sideB.imgFlipOver(!1), !this.isLastPageReset && this.pageIndex + 1 == totalPageCount ? (this.isLastPageReset = !0, window.setTimeout(function() {
        this.page.css({
            "-webkit-transform-style": "flat",
            "-moz-transform-style": "flat",
            "-webkit-transform": "rotateY(0deg)",
            "-moz-transform": "rotateY(0deg)",
            "-o-transform": "rotateY(0deg)",
            "-ms-transform": "rotateY(0deg)",
            transform: "rotateY(0deg)"
        })
    }, 10)) : this.page.css({
        "-webkit-transform-style": "flat",
        "-moz-transform-style": "flat",
        "-webkit-transform": "rotateY(0deg)",
        "-moz-transform": "rotateY(0deg)",
        "-o-transform": "rotateY(0deg)",
        "-ms-transform": "rotateY(0deg)",
        transform: "rotateY(0deg)"
    }));
    this.page.css({
        left: !a ? "0px" : this.width + "px"
    });
    this.maskA.css({
        top: "0px",
        left: "0px",
        bottom: "auto",
        right: "auto",
        width: this.width,
        height: this.height
    });
    this.maskB.css({
        top: "0px",
        left: "0px",
        bottom: "auto",
        right: "auto",
        width: this.width,
        height: this.height
    });
    this.rotateElement(this.maskA, "0% 0%", translate(0, 0) + rotate(0));
    this.rotateElement(this.maskB, "0% 0%", translate(0, 0) + rotate(0));
    this.sideAPosition.css({
        top: "0px",
        left: "0px",
        bottom: "auto",
        right: "auto"
    });
    this.sideBPosition.css({
        top: "0px",
        left: "0px",
        bottom: "auto",
        right: "auto"
    });
    this.rotateElement(this.sideAPosition, "0% 0%", translate(0, 0) + rotate(0));
    this.rotateElement(this.sideBPosition, "0% 0%", translate(0, 0) + rotate(0));
    this.rotateElement(this.sideA.getSide(), "0% 0%", translate(0, 0) + rotate(0));
    this.rotateElement(this.sideB.getSide(), "0% 0%", translate(0, 0) + rotate(0))
};

function androidPage() {
    normalPage.call(this)
}
$.extend(androidPage.prototype, normalPage.prototype);
androidPage.prototype.flipToPoint = function(a, b, c) {
    if (this.isHardPage) this.hardFlip(a, c);
    else if (this.isCorner(a, b)) this.resetPage(this.isLeft());
    else {
        var d = computePoint(this.corner, a, this.isTop() ? 0 : this.height, this.width, this.height, this.maskWidth, this.flipFrontShadow, this.flipBackShadow),
            a = d.Angle,
            b = d.Df,
            e = d.NomovePoint,
            d = d.Mv,
            f = this.isLeft(),
            j = this.isBottom();
        c && (this.showShadow(), this.page.css({
            left: f ? "0px" : this.width + "px"
        }), this.sideAPosition.css({
            right: f ? "0px" : "auto",
            left: f ? "auto" : "0px",
            top: j ?
                "auto" : "0px",
            bottom: j ? "0px" : "auto"
        }), this.sideBPosition.css({
            right: f ? "0px" : "auto",
            left: f ? "auto" : "0px",
            top: j ? "auto" : "0px",
            bottom: j ? "0px" : "auto"
        }), this.setSideUp(f), f ? this.sideA.hideGray() : this.sideB.hideGray());
        switch (this.corner) {
            case "tl":
                this.rotateElement(this.maskA, "100% 0%", translate(-e.x + this.width - this.maskWidth + d.x, -e.y + d.y) + rotate(-a));
                this.rotateElement(this.maskB, "100% 0%", translate(-e.x + this.width - this.maskWidth + d.x, -e.y + d.y) + rotate(-a));
                this.rotateElement(this.sideBPosition, "100% 0%",
                    rotate(a) + translate(e.x - d.x, e.y - d.y));
                this.rotateElement(this.sideAPosition, "100% 0%", rotate(a) + translate(e.x + b.x - d.x, e.y + b.y - d.y));
                this.rotateElement(this.sideA.side, "100% 0%", translate(-this.width, 0) + rotate(2 * (90 - a)));
                break;
            case "tr":
                this.rotateElement(this.maskA, "0% 0%", translate(e.x + d.x, -e.y + d.y) + rotate(a));
                this.rotateElement(this.maskB, "0% 0%", translate(e.x + d.x, -e.y + d.y) + rotate(a));
                this.rotateElement(this.sideAPosition, "0% 0%", rotate(-a) + translate(-e.x - d.x, e.y - d.y));
                this.rotateElement(this.sideBPosition,
                    "0% 0%", rotate(-a) + translate(-e.x - d.x + b.x, e.y + b.y - d.y));
                this.rotateElement(this.sideB.getSide(), "0% 0%", translate(0, 0) + rotate(2 * (a - 90)));
                break;
            case "bl":
                this.rotateElement(this.maskA, "100% 100%", translate(-e.x + this.width - this.maskWidth + d.x, e.y + this.height - this.maskWidth + d.y) + rotate(a));
                this.rotateElement(this.maskB, "100% 100%", translate(-e.x + this.width - this.maskWidth + d.x, e.y + this.height - this.maskWidth + d.y) + rotate(a));
                this.rotateElement(this.sideBPosition, "100% 100%", rotate(-a) + translate(e.x - d.x, -e.y -
                    d.y));
                this.rotateElement(this.sideAPosition, "100% 100%", rotate(-a) + translate(e.x + b.x - d.x, -e.y - d.y + b.y));
                this.rotateElement(this.sideA.getSide(), "100% 100%", translate(-this.width, -this.height) + rotate(2 * (a - 90)));
                break;
            case "br":
                this.rotateElement(this.maskA, "0% 100%", translate(e.x + d.x, e.y + this.height - this.maskWidth + d.y) + rotate(-a)), this.rotateElement(this.maskB, "0% 100%", translate(e.x + d.x, e.y + this.height - this.maskWidth + d.y) + rotate(-a)), this.rotateElement(this.sideAPosition, "0% 100%", rotate(a) + translate(-e.x -
                    d.x, -e.y - d.y)), this.rotateElement(this.sideBPosition, "0% 100%", rotate(a) + translate(-e.x + b.x - d.x, -e.y + b.y - d.y)), this.rotateElement(this.sideB.getSide(), "0% 100%", translate(0, -this.height) + rotate(2 * (90 - a)))
        }
    }
};

function androidRightPage() {
    rightToLeftNormalPage.call(this)
}
$.extend(androidRightPage, rightToLeftNormalPage.prototype);
androidRightPage.prototype.flipToPoint = function(a, b, c) {
    if (this.isHardPage) this.hardFlip(a, c);
    else if (this.isCorner(a, b)) this.resetPage(!this.isLeft());
    else {
        var d = computePoint(this.corner, a, this.isTop() ? 0 : this.height, this.width, this.height, this.maskWidth, this.flipFrontShadow, this.flipBackShadow),
            a = d.Angle,
            b = d.Df,
            e = d.NomovePoint,
            d = d.Mv,
            f = this.isLeft(),
            j = this.isBottom();
        c && (this.showShadow(), this.page.css({
            left: f ? "0px" : this.width + "px"
        }), this.sideAPosition.css({
            right: f ? "0px" : "auto",
            left: f ? "auto" : "0px",
            top: j ? "auto" : "0px",
            bottom: j ? "0px" : "auto"
        }), this.sideBPosition.css({
            right: f ? "0px" : "auto",
            left: f ? "auto" : "0px",
            top: j ? "auto" : "0px",
            bottom: j ? "0px" : "auto"
        }), this.setSideUp(!f), f ? this.sideA.hideGray() : this.sideB.hideGray());
        switch (this.corner) {
            case "tl":
                this.rotateElement(this.maskA, "100% 0%", translate(-e.x + this.width - this.maskWidth + d.x, -e.y + d.y) + rotate(-a));
                this.rotateElement(this.maskB, "100% 0%", translate(-e.x + this.width - this.maskWidth + d.x, -e.y + d.y) + rotate(-a));
                this.rotateElement(this.sideAPosition, "100% 0%",
                    rotate(a) + translate(e.x - d.x, e.y - d.y));
                this.rotateElement(this.sideBPosition, "100% 0%", rotate(a) + translate(e.x + b.x - d.x, e.y + b.y - d.y));
                this.rotateElement(this.sideB.side, "100% 0%", translate(-this.width, 0) + rotate(2 * (90 - a)));
                break;
            case "tr":
                this.rotateElement(this.maskA, "0% 0%", translate(e.x + d.x, -e.y + d.y) + rotate(a));
                this.rotateElement(this.maskB, "0% 0%", translate(e.x + d.x, -e.y + d.y) + rotate(a));
                this.rotateElement(this.sideBPosition, "0% 0%", rotate(-a) + translate(-e.x - d.x, e.y - d.y));
                this.rotateElement(this.sideAPosition,
                    "0% 0%", rotate(-a) + translate(-e.x - d.x + b.x, e.y + b.y - d.y));
                this.rotateElement(this.sideA.getSide(), "0% 0%", translate(0, 0) + rotate(2 * (a - 90)));
                break;
            case "bl":
                this.rotateElement(this.maskA, "100% 100%", translate(-e.x + this.width - this.maskWidth + d.x, e.y + this.height - this.maskWidth + d.y) + rotate(a));
                this.rotateElement(this.maskB, "100% 100%", translate(-e.x + this.width - this.maskWidth + d.x, e.y + this.height - this.maskWidth + d.y) + rotate(a));
                this.rotateElement(this.sideAPosition, "100% 100%", rotate(-a) + translate(e.x - d.x, -e.y -
                    d.y));
                this.rotateElement(this.sideBPosition, "100% 100%", rotate(-a) + translate(e.x + b.x - d.x, -e.y - d.y + b.y));
                this.rotateElement(this.sideB.getSide(), "100% 100%", translate(-this.width, -this.height) + rotate(2 * (a - 90)));
                break;
            case "br":
                this.rotateElement(this.maskA, "0% 100%", translate(e.x + d.x, e.y + this.height - this.maskWidth + d.y) + rotate(-a)), this.rotateElement(this.maskB, "0% 100%", translate(e.x + d.x, e.y + this.height - this.maskWidth + d.y) + rotate(-a)), this.rotateElement(this.sideBPosition, "0% 100%", rotate(a) + translate(-e.x -
                    d.x, -e.y - d.y)), this.rotateElement(this.sideAPosition, "0% 100%", rotate(a) + translate(-e.x + b.x - d.x, -e.y + b.y - d.y)), this.rotateElement(this.sideA.getSide(), "0% 100%", translate(0, -this.height) + rotate(2 * (90 - a)))
        }
    }
};
var bookMouseDown = !1,
    nBookStatu = 0;

function normalBook() {
    this.pageWidth = 300;
    this.pageHeight = 400;
    this.width = 600;
    this.height = 400;
    this.maskWidth = 500;
    this.gotoPageIndex = this.currentPageIndex = this.betweenPaperCount = 1;
    this.intervalID = this.flipToPage = this.flippingPage = null;
    this.flipPoint = Point(0, 0);
    this.totalFrame = 30;
    var a = 1E3 * bookConfig.flippingTime;
    void 0 != a && 0 < a && (this.totalFrame = a / 20)
}
normalBook.prototype.create = function(a) {
    this.flipBook = $("<div class='flipBook' id='flipBook' ></div>");
    "android" == device.name ? (this.previousPage = new androidPage, this.currentPage = new androidPage, this.nextPage = new androidPage, this.currentPage2 = new androidPage) : (this.previousPage = new normalPage, this.currentPage = new normalPage, this.currentPage2 = new normalPage, this.nextPage = new normalPage);
    this.previousPage.create(this.flipBook);
    this.currentPage.create(this.flipBook);
    this.currentPage2.create(this.flipBook);
    this.nextPage.create(this.flipBook);
    this.leftThickness = thickness(!0);
    this.rightThickness = thickness(!1);
    this.normalBookShadow = new bookShadow(this.pageWidth, this.pageHeight, this.flipBook);
    this.bmt = new initBookMarkTab(this.flipBook);
    a.append(this.flipBook);
    this.flipBook.append(this.leftThickness);
    this.flipBook.append(this.rightThickness);
    this.currentPageIndex = oriPageIndex;
    this.fillNearPage(this.currentPageIndex);
    setCurrentIndexTextField(this.currentPageIndex, !0);
    1 >= this.currentPageIndex && this.bmt.leftBox.hide();
    this.currentPageIndex >= totalPageCount && this.bmt.rightBox.hide();
    3 >= this.currentPageIndex && this.leftThickness.setVisible(!1);
    this.currentPageIndex >= totalPageCount - 2 && this.rightThickness.setVisible(!1);
    this.resetPageZIndex();
    this.initBookEvent()
};
normalBook.prototype.onResize = function(a, b) {
    this.width = 2 * a;
    this.height = b;
    this.pageWidth = a;
    this.pageHeight = b;
    this.maskWidth = Math.sqrt(a * a + b * b);
    this.flipBook.css({
        width: this.width + "px",
        height: this.height + "px"
    });
    this.previousPage.onResize(a, b, this.maskWidth, 0);
    this.currentPage.onResize(a, b, this.maskWidth, 0);
    this.currentPage2.onResize(a, b, this.maskWidth, a);
    this.nextPage.onResize(a, b, this.maskWidth, a);
    this.leftThickness.onResize(25, b);
    this.rightThickness.onResize(25, b);
    normalEventRadius = Math.pow(Math.ceil(1 *
        a / 3), 2);
    this.normalBookShadow.onResize(this.pageWidth, this.pageHeight, 1 != this.currentPageIndex && this.currentPageIndex != totalPageCount);
    this.normalBookShadow.setPosition(1 == this.currentPageIndex ? a : 0, 0);
    this.bmt.resize(b, 60)
};
normalBook.prototype.getCurrentPageIndex = function() {
    return this.currentPageIndex
};
normalBook.prototype.getPageWidth = function(a) {
    if (void 0 == a) return this.pageWidth;
    this.pageWidth = a
};
normalBook.prototype.getPageHeight = function(a) {
    if (void 0 == a) return this.pageHeight;
    this.pageHeight = a
};
normalBook.prototype.getWidth = function() {
    return this.width
};
normalBook.prototype.getHeight = function() {
    return this.height
};
normalBook.prototype.getLeft = function() {
    return this.flipBook.offset().left
};
normalBook.prototype.getTop = function() {
    return this.flipBook.offset().top
};
normalBook.prototype.setCSS = function(a) {
    this.flipBook.css(a)
};
normalBook.prototype.setPosition = function(a, b, c) {
    void 0 == c && (c = ["left", "top"]);
    this.flipBook.css(c[0], a + "px");
    this.flipBook.css(c[1], b + "px")
};
normalBook.prototype.timer = function(a, b, c, d, e, f, j, g) {
    void 0 == j && (j = !1);
    void 0 == g && (g = !1);
    var k = 0 <= a.indexOf("l"),
        m = 0 <= a.indexOf("t");
    j || (this.currentPage.setCSS({
        "z-index": k ? 7 : 6
    }), this.currentPage2.setCSS({
        "z-index": k ? 6 : 7
    }));
    flipping = !0;
    stopFlip = !1;
    var n = 0;
    Point(0, 0);
    var l = this;
    try {
        window.clearInterval(this.intervalID)
    } catch (p) {}
    this.intervalID = setInterval(function() {
        n++;
        l.flipPoint.x = $.easing.swing(null, n, e.x, d.x - e.x, b);
        l.flipPoint.y = $.easing.swing(null, n, e.y, d.y - e.y, b);
        if (f) l.flipPoint.y = 0.2 * Math.sqrt(Math.pow(l.pageWidth,
            2) - Math.pow(k ? l.flipPoint.x - l.pageWidth : l.flipPoint.x, 2));
        if (n == b) l.flipPoint = d;
        if (stopFlip) {
            window.clearInterval(l.intervalID);
            l.betweenPaperCount = k ? -1 : 1;
            l.gotoPageIndex = k ? Math.floor(l.currentPageIndex / 2 - 1) * 2 + 1 : Math.floor(l.currentPageIndex / 2 + 1) * 2;
            var c = Point(k ? 2 * l.pageWidth : -l.pageWidth, m ? 0 : l.pageHeight);
            l.timer(a, l.totalFrame, 20, c, l.flipPoint, false, true, true);
            l.movetoCenter(l.totalFrame, 20, l.gotoPageIndex);
            auto_player.resetTimer()
        } else {
            l.flippingPage.flipToPoint(l.flipPoint.x, l.flipPoint.y, n ==
                1);
            if (n >= b) {
                _rimFlip.isRimFlip || auto_player.resetTimer();
                window.clearInterval(l.intervalID);
                flipping = false;
                if (g || f) {
                    l.flippingPage.endFlip();
                    l.afterGotoPage()
                } else if (j || !_rimFlip.isRimFlip)
                    if (j) {
                        if (!f && !g) {
                            nBookStatu = normalBookStatu.book_statu_ready;
                            l.flippingPage.setSideUp(l.flippingPage.isLeft() ? false : true);
                            l.currentPageIndex > 3 && !l.leftThickness.visible && l.leftThickness.setVisible(true);
                            l.currentPageIndex < totalPageCount - 2 && !l.rightThickness.visible && l.rightThickness.setVisible(true);
                            l.currentPageIndex >
                                1 && l.bmt.leftBox.show();
                            l.currentPageIndex < totalPageCount && l.bmt.rightBox.show();
                            if (l.currentPageIndex == 1) {
                                l.normalBookShadow.onResize(l.pageWidth, l.pageHeight, false);
                                l.normalBookShadow.setPosition(l.pageWidth, 0)
                            } else {
                                if (l.currentPageIndex == totalPageCount) l.normalBookShadow.onResize(l.pageWidth, l.pageHeight, false);
                                else l.normalBookShadow.onResize(l.pageWidth, l.pageHeight, true);
                                l.normalBookShadow.setPosition(0, 0)
                            }
                            l.normalBookShadow.showShadow()
                        }
                    } else bookMouseDown = true
            }
        }
    }, c)
};
normalBook.prototype.movetoCenter = function(a, b, c) {
    if (!1 != parseBool(bookConfig.retainBookCenter)) {
        var d = (windowWidth - bookConfig.leftMargin - bookConfig.rightMargin - this.width) / 2 + bookConfig.leftMargin,
            e = d - this.width / 4,
            f = d + this.width / 4,
            j = this.getLeft(),
            g = d;
        1 == c && (g = e);
        d = bookConfig.totalPageCount;
        1 == d % 2 && d++;
        c == d && (g = f);
        if (!(10 > Math.abs(g - j))) {
            var k = 0,
                m = this,
                n = m.getTop();
            if (0 == a) m.setPosition(iLeft, n);
            else var l = window.setInterval(function() {
                var b = $.easing.swing(null, k, j, g - j, a);
                m.setPosition(b, n);
                k++ ==
                a && window.clearInterval(l)
            }, b)
        }
    }
};
normalBook.prototype.gotoPage = function(a) {
    if (1 > a || a > totalPageCount) _tipsBox.setCaption(1 > a ? "This is the first page" : "This is the last page"), _tipsBox.showTipsBox();
    else if (0 == nBookStatu && this.setGotoPage(a)) {
        a == totalPageCount && this.nextPage.setPageVisible(!1);
        1 == a && this.previousPage.setPageVisible(!1);
        _rimFlip.removeRimFlip();
        nBookStatu = normalBookStatu.book_statu_auto_flip;
        this.gotoPageIndex = a;
        if (0 < this.betweenPaperCount) var b = Point(this.pageWidth, 0),
            c = Point(-this.pageWidth, 0),
            d = "tr";
        else b = Point(0,
            0), c = Point(2 * this.pageWidth, 0), d = "tl";
        this.flippingPage.setCSS({
            "z-index": 7
        });
        this.flippingPage.beginFlip(d);
        playFlipSound();
        this.timer(d, this.totalFrame, 20, c, b, !0);
        this.movetoCenter(this.totalFrame, 20, a)
    }
};
normalBook.prototype.stopTimer = function() {
    window.clearInterval(this.intervalID)
};
normalBook.prototype.afterGotoPage = function() {
    this.currentPageIndex = this.gotoPageIndex;
    this.currentPage.getSideB().leaveSide();
    this.currentPage2.getSideA().leaveSide();
    this.changePage();
    var a = getShownPage();
    this.currentPage.getSideA().showOrHideYoutube(a);
    this.currentPage.getSideB().showOrHideYoutube(a);
    this.currentPage2.getSideA().showOrHideYoutube(a);
    this.currentPage2.getSideB().showOrHideYoutube(a);
    if (1 == this.currentPageIndex) this.normalBookShadow.onResize(this.pageWidth, this.pageHeight, !1), this.normalBookShadow.setPosition(this.pageWidth,
        0);
    else {
        if (this.currentPageIndex == totalPageCount) this.normalBookShadow.onResize(this.pageWidth, this.pageHeight, !1);
        else this.normalBookShadow.onResize(this.pageWidth, this.pageHeight, !0);
        this.normalBookShadow.setPosition(0, 0)
    }
    setCurrentIndexTextField(this.currentPageIndex, !0);
    var b = this;
    window.setTimeout(function() {
        nBookStatu = normalBookStatu.book_statu_ready;
        resizeBookAfterFlip && onStageResize();
        3 < b.currentPageIndex && !b.leftThickness.visible && b.leftThickness.setVisible(!0);
        b.currentPageIndex < totalPageCount -
            2 && !b.rightThickness.visible && b.rightThickness.setVisible(!0);
        1 < b.currentPageIndex && b.bmt.leftBox.show();
        b.currentPageIndex < totalPageCount && b.bmt.rightBox.show();
        b.fillNearPage(b.currentPageIndex);
        b.resetPageZIndex();
        thumbnail.clearHighLight();
        thumbnail.setHighLight(b.currentPageIndex);
        b.currentPage.getSideB().enterSide();
        b.currentPage2.getSideA().enterSide();
        window.location.hash = "#p=" + b.currentPageIndex;
        var a = b.currentPageIndex,
            d = a;
        1 < a && a < totalPageCount && (d = 0 == a % 2 ? a + "-" + (a + 1) : a - 1 + "-" + a);
        sendvisitinfo(1,
            d);
        b.bmt.separated(b.currentPageIndex)
    }, 30)
};
normalBook.prototype.changePage = function() {
    var a;
    1 == this.betweenPaperCount ? (a = this.nextPage, this.nextPage = this.previousPage, this.previousPage = this.currentPage, this.currentPage = this.currentPage2, this.currentPage2 = a) : -1 == this.betweenPaperCount ? (a = this.previousPage, this.previousPage = this.nextPage, this.nextPage = this.currentPage2, this.currentPage2 = this.currentPage, this.currentPage = a) : 2 == this.betweenPaperCount || -2 == this.betweenPaperCount ? (a = this.previousPage, this.previousPage = this.currentPage2, this.currentPage2 =
        a, a = this.currentPage, this.currentPage = this.nextPage, this.nextPage = a) : -2 > this.betweenPaperCount ? (a = this.nextPage, this.nextPage = this.currentPage2, this.currentPage2 = this.currentPage, this.currentPage = a) : 2 < this.betweenPaperCount && (a = this.currentPage, this.currentPage = this.currentPage2, this.currentPage2 = this.previousPage, this.previousPage = a);
    this.addSearchHighlight()
};
normalBook.prototype.addSearchHighlight = function() {
    var a = this.currentPage,
        b = this.currentPage2,
        c = this.currentPageIndex;
    a.getSideA().imageIndex == c && a.getSideA().highlightSearch();
    a.getSideB().imageIndex == c && a.getSideB().highlightSearch();
    b.getSideA().imageIndex == c && b.getSideA().highlightSearch();
    b.getSideB().imageIndex == c && b.getSideB().highlightSearch();
    c = 0 == c % 2 ? c + 1 : c - 1;
    0 < c && c <= totalPageCount && (a.getSideA().imageIndex == c && a.getSideA().highlightSearch(), a.getSideB().imageIndex == c && a.getSideB().highlightSearch(),
        b.getSideA().imageIndex == c && b.getSideA().highlightSearch(), b.getSideB().imageIndex == c && b.getSideB().highlightSearch())
};
normalBook.prototype.clearSearchHighlight = function() {
    this.currentPage.getSideA().clearHighlight();
    this.currentPage.getSideB().clearHighlight();
    this.currentPage2.getSideA().clearHighlight();
    this.currentPage2.getSideB().clearHighlight()
};
normalBook.prototype.setLeftThicknessVisible = function(a) {
    this.leftThickness.setVisible(a)
};
normalBook.prototype.setRightThicknessVisible = function(a) {
    this.rightThickness.setVisible(a)
};
normalBook.prototype.setThicknessPosition = function() {
    this.leftThickness.setThicknessPosition(-25, 0);
    this.rightThickness.setThicknessPosition(2 * this.pageWidth - 1, 0)
};
normalBook.prototype.resetPageZIndex = function() {
    this.currentPage.setCSS({
        "z-index": 4
    });
    this.currentPage2.setCSS({
        "z-index": 5
    });
    this.nextPage.setCSS({
        "z-index": 3
    });
    this.previousPage.setCSS({
        "z-index": 2
    })
};
normalBook.prototype.fillAnPage = function(a, b) {
    a.fillSideA(2 * b - 1);
    a.fillSideB(2 * b)
};
normalBook.prototype.fillNearPage = function(a) {
    var b = Math.floor(a / 2);
    3 < a ? (this.previousPage.setPageVisible(!0), this.previousPage.resetPage(!0), this.previousPage.setSideUp(!1), this.fillAnPage(this.previousPage, b - 1)) : this.previousPage.setPageVisible(!1);
    1 < a ? (this.currentPage.setPageVisible(!0), this.currentPage.resetPage(!0), this.currentPage.setSideUp(!1), this.fillAnPage(this.currentPage, b)) : this.currentPage.setPageVisible(!1);
    2 * Math.floor(a / 2) + 1 < totalPageCount ? (this.currentPage2.setPageVisible(!0), this.currentPage2.resetPage(!1),
        this.currentPage2.setSideUp(!0), this.fillAnPage(this.currentPage2, b + 1)) : this.currentPage2.setPageVisible(!1);
    2 * Math.floor(a / 2) + 3 < totalPageCount ? (this.nextPage.setPageVisible(!0), this.nextPage.resetPage(!1), this.nextPage.setSideUp(!0), this.fillAnPage(this.nextPage, b + 2)) : this.nextPage.setPageVisible(!1)
};
normalBook.prototype.setGotoPage = function(a) {
    var b, c;
    this.currentPageIndex > a ? (b = Math.floor(a / 2), c = Math.floor(this.currentPageIndex / 2), this.flippingPage = this.currentPage, 1 < c - b ? (this.flipToPage = this.nextPage, this.flipToPage.resetPage(!0), this.flipToPage.setSideUp(!1), this.flipToPage.setCSS({
            "z-index": 6
        }), this.flippingPage.fillSideA(2 * b + 1), this.flipToPage.fillSideA(2 * b - 1), this.flipToPage.fillSideB(2 * b)) : this.flipToPage = this.previousPage, 1 != a ? this.flipToPage.setPageVisible(!0) : this.flipToPage.setPageVisible(!1)) :
        (b = Math.floor(a / 2) + 1, c = Math.floor(this.currentPageIndex / 2) + 1, this.flippingPage = this.currentPage2, 1 < b - c ? (this.flipToPage = this.previousPage, this.flipToPage.resetPage(!1), this.flipToPage.setSideUp(!0), this.flipToPage.setCSS({
            "z-index": 6
        }), this.flippingPage.fillSideB(2 * b - 2), this.flipToPage.fillSideA(2 * b - 1), this.flipToPage.fillSideB(2 * b)) : this.flipToPage = this.nextPage, a != totalPageCount ? this.flipToPage.setPageVisible(!0) : this.flipToPage.setPageVisible(!1));
    this.betweenPaperCount = b - c;
    return b != c
};
normalBook.prototype.pointInPage = function(a, b, c) {
    return 0 <= a.x && a.x <= b && 0 <= a.y && a.y <= c ? "left" : a.x <= 2 * b && a.x >= b && 0 <= a.y && a.y <= c ? "right" : !1
};
normalBook.prototype.initBookEvent = function() {
    var a = this,
        b = -1,
        c = void 0,
        d, e;
    this.twoFingerDown = !1;
    var f = normalBookStatu.book_statu_ready,
        j = normalBookStatu.book_statu_mag_flip;
    this.flipBook.bind(_event._down, function(b) {
        b = isTouch ? b.originalEvent.touches : [b];
        if (bookType == BookType.normal_book)
            if (2 == b.length) {
                if (nBookStatu == normalBookStatu.book_statu_mouse_flip) {
                    var c;
                    "tl" == a.flippingPage.corner ? c = Point(0, 0) : "tr" == a.flippingPage.corner ? c = Point(a.pageWidth, 0) : "bl" == a.flippingPage.corner ? c = Point(0, a.pageHeight) :
                        "br" == a.flippingPage.corner && (c = Point(a.pageWidth, a.pageHeight));
                    window.clearInterval(a.intervalID);
                    playFlipSound();
                    a.timer(a.flippingPage.corner, a.totalFrame, 20, c, a.flipPoint, !1, !0);
                    a.movetoCenter(a.totalFrame, 20, a.gotoPageIndex)
                }
                d = globalToBook(!0, b[0].pageX, b[0].pageY);
                e = globalToBook(!0, b[1].pageX, b[1].pageY);
                b = a.pointInPage(d, a.pageWidth, a.pageHeight);
                c = a.pointInPage(e, a.pageWidth, a.pageHeight);
                b == c && b && (a.twoFingerDown = b);
                bookMouseDown = !1
            } else {
                if (nBookStatu == f) {
                    c = globalToBook(!0, b[0].pageX, b[0].pageY);
                    if (0 > c.x || c.x > a.width || 0 > c.y || c.y > a.height) return;
                    var m = a.getCornerAndBeginPoint(c);
                    if (null == m.corner) return;
                    var n = m.corner,
                        m = m.beginPoint;
                    _rimFlip.removeRimFlip();
                    nBookStatu = normalBookStatu.book_statu_mouse_flip;
                    window.clearInterval(a.intervalID);
                    a.flippingPage.beginFlip(n);
                    a.timer(n, Math.floor(a.totalFrame / 6), 5, c, m, !1, !1)
                }
                if (nBookStatu == j) {
                    c = globalToBook(!0, b[0].pageX, b[0].pageY);
                    if (0 > c.x || c.x > a.width || 0 > c.y || c.y > a.height) return;
                    nBookStatu = normalBookStatu.book_statu_mouse_flip;
                    bookMouseDown = !0
                }
                b[0].preventDefault();
                return !1
            }
    });
    bookContainer.bind(_event._move, function(g) {
        if (bookType == BookType.normal_book) {
            g = isTouch ? g.originalEvent.touches : [g];
            if (2 == g.length && a.twoFingerDown) {
                var k = globalToBook(!0, g[0].pageX, g[0].pageY),
                    g = globalToBook(!0, g[1].pageX, g[1].pageY);
                if (15 < Math.abs(k.x - d.x) || 15 < Math.abs(k.y - d.y) || 15 < Math.abs(g.x - e.x) || 15 < Math.abs(g.y - e.y)) {
                    var m;
                    "left" == a.twoFingerDown ? m = 2 * Math.floor(a.currentPageIndex / 2) : "right" == a.twoFingerDown && (m = 2 * Math.floor(a.currentPageIndex / 2) + 1);
                    a.zoomToPage(m)
                }
                return !1
            }!1 ==
                bookMouseDown ? (k = globalToBook(!0, g[0].pageX, g[0].pageY), 0 > k.x || k.x > a.width || 0 > k.y || k.y > a.height ? bookContainer.css({
                    cursor: "default"
                }) : (m = a.getCornerAndBeginPoint(k, 4), null == m.corner ? bookContainer.css({
                    cursor: "default"
                }) : bookContainer.css({
                    cursor: "pointer"
                }))) : bookContainer.css({
                    cursor: "pointer"
                });
            if (!1 == bookMouseDown && nBookStatu == f) {
                k = globalToBook(!0, g[0].pageX, g[0].pageY);
                if (0 > k.x || k.x > a.width || 0 > k.y || k.y > a.height) return;
                m = a.getCornerAndBeginPoint(k, 4);
                if (null == m.corner) return;
                g = m.corner;
                m = m.beginPoint;
                nBookStatu = j;
                _rimFlip.removeRimFlip();
                a.flippingPage.beginFlip(g);
                a.maganetPoint = k;
                window.clearInterval(a.intervalID);
                a.timer(g, Math.floor(a.totalFrame / 6), 10, k, m, !1, !1);
                return !1
            }
            if (nBookStatu == j) {
                if (void 0 == a.flippingPage || null == a.flippingPage) return;
                k = globalToBook(!0, g[0].pageX, g[0].pageY);
                g = !1;
                if (0 > k.x || k.x > a.width || 0 > k.y || k.y > a.height) g = !0;
                m = {
                    corner: null,
                    beginPoint: null
                };
                !1 == g && (m = a.getCornerAndBeginPoint(k, 4));
                null == m.corner && (g = Point(a.flippingPage.isLeft() ? 0 : a.pageWidth, a.flippingPage.isTop() ?
                    0 : a.pageHeight), window.clearInterval(a.intervalID), a.timer(a.flippingPage.corner, Math.floor(a.totalFrame / 6), 20, g, a.maganetPoint, !1, !0, !1), nBookStatu = f, bookMouseDown = !1);
                return !1
            }
            bookMouseDown && (k = globalToBook(a.flippingPage.isLeft(), g[0].pageX, g[0].pageY), a.flippingPage.flipToPoint(k.x, k.y, !1), -1 != b && (c = k.x > b ? !1 : !0), b = k.x);
            g[0].preventDefault();
            return !1
        }
    });
    bookContainer.bind(_event._end, function(b) {
        if (bookType == BookType.normal_book)
            if (b = isTouch ? b.originalEvent.changedTouches : [b], bookMouseDown) {
                a.twoFingerDown = !1;
                var b = globalToBook(a.flippingPage.isLeft(), b[0].pageX, b[0].pageY),
                    d, e, f = !0;
                if (a.flippingPage.isLeft() && b.x >= a.pageWidth || !a.flippingPage.isLeft() && 0 >= b.x) f = !1;
                void 0 != c && (f = !(a.flippingPage.isLeft() ^ c));
                f || (a.gotoPageIndex = a.flippingPage.isLeft() ? 2 * Math.floor(a.currentPageIndex / 2 - 1) + 1 : 2 * Math.floor(a.currentPageIndex / 2 + 1), a.betweenPaperCount = a.flippingPage.isLeft() ? -1 : 1);
                d = Point(a.flippingPage.isLeft() ? 0 : a.pageWidth, a.flippingPage.isTop() ? 0 : a.pageHeight);
                e = Point(a.flippingPage.isLeft() ? 2 * a.pageWidth :
                    -a.pageWidth, a.flippingPage.isTop() ? 0 : a.pageHeight);
                d = f ? d : e;
                window.clearInterval(a.intervalID);
                f ? a.timer(a.flippingPage.corner, Math.floor(a.totalFrame / 3), 20, d, b, !1, !0, !f) : (playFlipSound(), e = Math.floor(2 * a.totalFrame / 3), a.timer(a.flippingPage.corner, e, 20, d, b, !1, !0, !f), a.movetoCenter(e, 20, a.gotoPageIndex));
                bookMouseDown = !1
            } else flipping && 2 == nBookStatu && (stopFlip = !0)
    })
};
normalBook.prototype.getCornerAndBeginPoint = function(a, b) {
    void 0 == b && (b = 1);
    var c = normalEventRadius / b,
        d = "",
        e = null,
        f = {
            corner: null,
            beginPoint: null
        };
    Math.pow(a.x, 2) + Math.pow(a.y, 2) < c ? (d = "tl", e = Point(0, 0), this.flippingPage = this.currentPage, this.gotoPageIndex = 2 * Math.floor(this.currentPageIndex / 2) - 1, 1 < this.currentPageIndex && (f.corner = d, f.beginPoint = e)) : Math.pow(2 * this.pageWidth - a.x, 2) + Math.pow(a.y, 2) < c ? (d = "tr", a.x -= this.pageWidth, e = Point(this.pageWidth, 0), this.flippingPage = this.currentPage2, this.gotoPageIndex =
        2 * Math.floor(this.currentPageIndex / 2 + 1), this.currentPageIndex < totalPageCount && (f.corner = d, f.beginPoint = e)) : Math.pow(a.x, 2) + Math.pow(this.pageHeight - a.y, 2) < c ? (d = "bl", e = Point(0, this.pageHeight), this.flippingPage = this.currentPage, this.gotoPageIndex = 2 * Math.floor(this.currentPageIndex / 2) - 1, 1 < this.currentPageIndex && (f.corner = d, f.beginPoint = e)) : Math.pow(this.width - a.x, 2) + Math.pow(this.height - a.y, 2) < c && (d = "br", a.x -= this.pageWidth, e = Point(this.pageWidth, this.pageHeight), this.flippingPage = this.currentPage2,
        this.gotoPageIndex = 2 * Math.floor(this.currentPageIndex / 2 + 1), this.currentPageIndex < totalPageCount && (f.corner = d, f.beginPoint = e));
    return f
};
normalBook.prototype.zoomToPage = function(a) {
    this.currentPage.getSideA().leaveSide();
    this.currentPage.getSideB().leaveSide();
    this.currentPage2.getSideA().leaveSide();
    this.currentPage2.getSideB().leaveSide();
    zoomBook.currentIndex = a;
    zoomBook.showPage.fillContent(zoomBook.currentIndex);
    changeShowBook(2);
    bookType = 2;
    toolBar.btnZoom.empty().append(getImage(toolBarIconsURL[6])).attr("title", getLanguage("btnZoomOut", "Zoom Out"));
    toolBar.changeButtonColor(bookConfig.iconColor);
    setCurrentIndexTextField(zoomBook.currentIndex, !1);
    thumbnail.clearHighLight();
    thumbnail.setHighLight(zoomBook.currentIndex);
    zoomBook.showPage.forceReset(Point(0, 0));
    zoomBook.showPage.animateMax()
};

function rightToLeftNormalBook() {
    normalBook.call(this)
}
$.extend(rightToLeftNormalBook.prototype, normalBook.prototype);
rightToLeftNormalBook.prototype.create = function(a) {
    this.flipBook = $("<div class='flipBook' id='flipBook'></div>");
    "android" == device.name ? (this.previousPage = new androidRightPage, this.currentPage = new androidRightPage, this.currentPage2 = new androidRightPage, this.nextPage = new androidRightPage) : (this.previousPage = new rightToLeftNormalPage, this.currentPage = new rightToLeftNormalPage, this.currentPage2 = new rightToLeftNormalPage, this.nextPage = new rightToLeftNormalPage);
    this.previousPage.create(this.flipBook);
    this.currentPage.create(this.flipBook);
    this.currentPage2.create(this.flipBook);
    this.nextPage.create(this.flipBook);
    this.leftThickness = thickness(!1);
    this.rightThickness = thickness(!0);
    this.normalBookShadow = new bookShadow(this.pageWidth, this.pageHeight, this.flipBook);
    a.append(this.flipBook);
    this.flipBook.append(this.leftThickness);
    this.flipBook.append(this.rightThickness);
    this.currentPageIndex = oriPageIndex;
    this.fillNearPage(this.currentPageIndex);
    setCurrentIndexTextField(this.currentPageIndex, !0);
    3 >=
        this.currentPageIndex && this.leftThickness.setVisible(!1);
    this.currentPageIndex >= totalPageCount - 2 && this.rightThickness.setVisible(!1);
    this.resetPageZIndex();
    this.initBookEvent();
    this.bmt = new initBookMarkTab(this.flipBook, !0);
    1 >= this.currentPageIndex && this.bmt.rightBox.hide();
    this.currentPageIndex >= totalPageCount && this.bmt.leftBox.hide()
};
rightToLeftNormalBook.prototype.onResize = function(a, b) {
    this.width = 2 * a;
    this.height = b;
    this.pageWidth = a;
    this.pageHeight = b;
    this.maskWidth = Math.sqrt(a * a + b * b);
    this.flipBook.css({
        width: this.width + "px",
        height: this.height + "px"
    });
    this.previousPage.onResize(a, b, this.maskWidth, 0);
    this.currentPage.onResize(a, b, this.maskWidth, 0);
    this.currentPage2.onResize(a, b, this.maskWidth, 0);
    this.nextPage.onResize(a, b, this.maskWidth, 0);
    this.leftThickness.onResize(25, b);
    this.rightThickness.onResize(25, b);
    normalEventRadius = Math.pow(Math.ceil(1 *
        a / 3), 2);
    this.normalBookShadow.onResize(this.pageWidth, this.pageHeight, 1 != this.currentPageIndex && this.currentPageIndex != totalPageCount);
    this.normalBookShadow.setPosition(this.currentPageIndex == totalPageCount ? a : 0, 0);
    this.bmt.resize(b, 60)
};
rightToLeftNormalBook.prototype.setThicknessPosition = function() {
    this.leftThickness.setThicknessPosition(2 * this.pageWidth - 1, 0);
    this.rightThickness.setThicknessPosition(-25, 0)
};
rightToLeftNormalBook.prototype.movetoCenter = function(a, b, c) {
    if (!1 != parseBool(bookConfig.retainBookCenter)) {
        var d = (windowWidth - bookConfig.leftMargin - bookConfig.rightMargin - this.width) / 2 + bookConfig.leftMargin,
            e = d + this.width / 4,
            f = d - this.width / 4,
            j = this.getLeft(),
            g = d;
        1 == c && (g = e);
        d = bookConfig.totalPageCount;
        1 == d % 2 && d++;
        c == d && (g = f);
        if (!(10 > Math.abs(g - j))) {
            var k = 0,
                m = this,
                n = m.getTop();
            if (0 == a) m.setPosition(iLeft, n);
            else var l = window.setInterval(function() {
                var b = $.easing.swing(null, k, j, g - j, a);
                m.setPosition(b,
                    n);
                k++ == a && window.clearInterval(l)
            }, b)
        }
    }
};
rightToLeftNormalBook.prototype.gotoPage = function(a) {
    if (1 > a || a > totalPageCount) _tipsBox.setCaption(1 > a ? "This is the first page" : "This is the last page"), _tipsBox.showTipsBox();
    else if (0 == nBookStatu && this.setGotoPage(a)) {
        a == totalPageCount && this.nextPage.setPageVisible(!1);
        1 == a && this.previousPage.setPageVisible(!1);
        _rimFlip.removeRimFlip();
        nBookStatu = normalBookStatu.book_statu_auto_flip;
        this.gotoPageIndex = a;
        if (0 < this.betweenPaperCount) var b = Point(0, 0),
            c = Point(2 * this.pageWidth, 0),
            d = "tl";
        else b = Point(this.pageWidth,
            0), c = Point(-this.pageWidth, 0), d = "tr";
        this.flippingPage.setCSS({
            "z-index": 7
        });
        this.flippingPage.beginFlip(d);
        playFlipSound();
        this.timer(d, this.totalFrame, 20, c, b, !0);
        this.movetoCenter(this.totalFrame, 20, a)
    }
};
rightToLeftNormalBook.prototype.timer = function(a, b, c, d, e, f, j, g) {
    void 0 == j && (j = !1);
    void 0 == g && (g = !1);
    var k = 0 <= a.indexOf("l"),
        m = 0 <= a.indexOf("t");
    j || (this.currentPage.setCSS({
        "z-index": k ? 6 : 7
    }), this.currentPage2.setCSS({
        "z-index": k ? 7 : 6
    }));
    flipping = !0;
    stopFlip = !1;
    var n = 0;
    Point(0, 0);
    var l = this;
    this.intervalID = setInterval(function() {
        n++;
        l.flipPoint.x = e.x;
        l.flipPoint.y = e.y;
        l.flipPoint.x = $.easing.swing(null, n, e.x, d.x - e.x, b);
        l.flipPoint.y = $.easing.swing(null, n, e.y, d.y - e.y, b);
        if (f) l.flipPoint.y = 0.2 * Math.sqrt(Math.pow(l.pageWidth,
            2) - Math.pow(k ? l.flipPoint.x - l.pageWidth : l.flipPoint.x, 2));
        if (n == b) l.flipPoint = d;
        if (stopFlip) {
            window.clearInterval(l.intervalID);
            l.betweenPaperCount = k ? 1 : -1;
            l.gotoPageIndex = k ? Math.floor(l.currentPageIndex / 2 + 1) * 2 : Math.floor(l.currentPageIndex / 2 - 1) * 2 + 1;
            var c = Point(k ? 2 * l.pageWidth : -l.pageWidth, m ? 0 : l.pageHeight);
            l.timer(a, l.totalFrame, 20, c, l.flipPoint, false, true, true);
            l.movetoCenter(l.totalFrame, 20, l.gotoPageIndex);
            auto_player.resetTimer()
        } else {
            l.flippingPage.flipToPoint(l.flipPoint.x, l.flipPoint.y, n ==
                1);
            if (n >= b) {
                _rimFlip.isRimFlip || auto_player.resetTimer();
                window.clearInterval(l.intervalID);
                flipping = false;
                if (g || f) {
                    l.flippingPage.endFlip();
                    l.afterGotoPage()
                } else if (j || !_rimFlip.isRimFlip)
                    if (j) {
                        if (!f && !g) {
                            nBookStatu = normalBookStatu.book_statu_ready;
                            l.flippingPage.setSideUp(l.flippingPage.isLeft() ? true : false);
                            l.currentPageIndex > 3 && !l.leftThickness.visible && l.leftThickness.setVisible(true);
                            l.currentPageIndex < totalPageCount - 2 && !l.rightThickness.visible && l.rightThickness.setVisible(true);
                            l.currentPageIndex >
                                1 && l.bmt.rightBox.show();
                            l.currentPageIndex < totalPageCount && l.bmt.leftBox.show();
                            if (l.currentPageIndex == 1) {
                                l.normalBookShadow.onResize(l.pageWidth, l.pageHeight, false);
                                l.normalBookShadow.setPosition(0, 0)
                            } else if (l.currentPageIndex == totalPageCount) {
                                l.normalBookShadow.onResize(l.pageWidth, l.pageHeight, false);
                                l.normalBookShadow.setPosition(l.pageWidth, 0)
                            } else {
                                l.normalBookShadow.onResize(l.pageWidth, l.pageHeight, true);
                                l.normalBookShadow.setPosition(0, 0)
                            }
                            l.normalBookShadow.showShadow()
                        }
                    } else bookMouseDown =
                        true
            }
        }
    }, c)
};
rightToLeftNormalBook.prototype.afterGotoPage = function() {
    this.currentPageIndex = this.gotoPageIndex;
    this.currentPage.getSideB().leaveSide();
    this.currentPage2.getSideA().leaveSide();
    this.changePage();
    1 == this.currentPageIndex ? (this.normalBookShadow.onResize(this.pageWidth, this.pageHeight, !1), this.normalBookShadow.setPosition(0, 0)) : this.currentPageIndex == totalPageCount ? (this.normalBookShadow.onResize(this.pageWidth, this.pageHeight, !1), this.normalBookShadow.setPosition(this.pageWidth, 0)) : (this.normalBookShadow.onResize(this.pageWidth, this.pageHeight, !0), this.normalBookShadow.setPosition(0, 0));
    setCurrentIndexTextField(this.currentPageIndex, !0);
    var a = this;
    window.setTimeout(function() {
        nBookStatu = normalBookStatu.book_statu_ready;
        resizeBookAfterFlip && onStageResize();
        a.currentPageIndex > 3 && !a.leftThickness.visible && a.leftThickness.setVisible(true);
        a.currentPageIndex < totalPageCount - 2 && !a.rightThickness.visible && a.rightThickness.setVisible(true);
        a.currentPageIndex > 1 && a.bmt.rightBox.show();
        a.currentPageIndex < totalPageCount && a.bmt.leftBox.show();
        a.fillNearPage(a.currentPageIndex);
        a.resetPageZIndex();
        thumbnail.clearHighLight();
        thumbnail.setHighLight(a.currentPageIndex);
        a.currentPage.getSideB().enterSide();
        a.currentPage2.getSideA().enterSide();
        window.location.hash = "#p=" + a.currentPageIndex;
        var b = a.currentPageIndex,
            c = b;
        b > 1 && b < totalPageCount && (c = b % 2 == 0 ? b + "-" + (b + 1) : b - 1 + "-" + b);
        sendvisitinfo(1, c);
        a.bmt.separated(a.currentPageIndex)
    }, 30)
};
rightToLeftNormalBook.prototype.initBookEvent = function() {
    var a = this,
        b = -1,
        c = void 0,
        d, e;
    this.twoFingerDown = !1;
    var f = normalBookStatu.book_statu_ready,
        j = normalBookStatu.book_statu_mag_flip;
    this.flipBook.bind(_event._down, function(b) {
        b = isTouch ? b.originalEvent.touches : [b];
        if (2 == b.length) {
            if (nBookStatu == normalBookStatu.book_statu_mouse_flip) {
                var c;
                "tl" == a.flippingPage.corner ? c = Point(0, 0) : "tr" == a.flippingPage.corner ? c = Point(a.pageWidth, 0) : "bl" == a.flippingPage.corner ? c = Point(0, a.pageHeight) : "br" == a.flippingPage.corner &&
                    (c = Point(a.pageWidth, a.pageHeight));
                window.clearInterval(a.intervalID);
                a.timer(a.flippingPage.corner, a.totalFrame, 20, c, a.flipPoint, !1, !0)
            }
            d = globalToBook(!0, b[0].pageX, b[0].pageY);
            e = globalToBook(!0, b[1].pageX, b[1].pageY);
            b = a.pointInPage(d, a.pageWidth, a.pageHeight);
            c = a.pointInPage(e, a.pageWidth, a.pageHeight);
            b == c && b && (a.twoFingerDown = b);
            bookMouseDown = !1
        } else {
            if (nBookStatu == f) {
                c = globalToBook(!0, b[0].pageX, b[0].pageY);
                if (0 > c.x || c.x > a.width || 0 > c.y || c.y > a.height) return;
                var m = a.getCornerAndBeginPoint(c);
                if (null == m.corner) return;
                var n = m.corner,
                    m = m.beginPoint;
                _rimFlip.removeRimFlip();
                nBookStatu = normalBookStatu.book_statu_mouse_flip;
                window.clearInterval(a.intervalID);
                a.flippingPage.beginFlip(n);
                a.timer(n, 10, 20, c, m, !1, !1)
            }
            if (nBookStatu == j) {
                b = globalToBook(!0, b[0].pageX, b[0].pageY);
                if (0 > b.x || b.x > a.width || 0 > b.y || b.y > a.height) return;
                m = a.getCornerAndBeginPoint(b, 4);
                if (null == m.corner) return;
                nBookStatu = normalBookStatu.book_statu_mouse_flip;
                bookMouseDown = !0
            }
            return !1
        }
    });
    bookContainer.bind(_event._move, function(g) {
        g =
            isTouch ? g.originalEvent.touches : [g];
        if (!1 == bookMouseDown && nBookStatu == f) {
            var k = globalToBook(!0, g[0].pageX, g[0].pageY);
            if (!(0 > k.x || k.x > a.width || 0 > k.y || k.y > a.height)) {
                var m = a.getCornerAndBeginPoint(k, 4);
                null != m.corner && (g = m.corner, m = m.beginPoint, nBookStatu = j, _rimFlip.removeRimFlip(), a.flippingPage.beginFlip(g), a.maganetPoint = k, window.clearInterval(a.intervalID), a.timer(g, Math.floor(a.totalFrame / 6), 10, k, m, !1, !1))
            }
        } else {
            if (nBookStatu == j) {
                if (void 0 == a.flippingPage || null == a.flippingPage) return;
                k = globalToBook(!0,
                    g[0].pageX, g[0].pageY);
                g = !1;
                if (0 > k.x || k.x > a.width || 0 > k.y || k.y > a.height) g = !0;
                m = {
                    corner: null,
                    beginPoint: null
                };
                !1 == g && (m = a.getCornerAndBeginPoint(k, 4));
                null == m.corner && (k = Point(a.flippingPage.isLeft() ? 0 : a.pageWidth, a.flippingPage.isTop() ? 0 : a.pageHeight), window.clearInterval(a.intervalID), a.timer(a.flippingPage.corner, Math.floor(a.totalFrame / 6), 20, k, a.maganetPoint, !1, !0, !1), nBookStatu = f, bookMouseDown = !1);
                return !1
            }
            if (2 == g.length && a.twoFingerDown) {
                if (2 != bookType && (k = globalToBook(!0, g[0].pageX, g[0].pageY),
                        g = globalToBook(!0, g[1].pageX, g[1].pageY), 15 < Math.abs(k.x - d.x) || 15 < Math.abs(k.y - d.y) || 15 < Math.abs(g.x - e.x) || 15 < Math.abs(g.y - e.y))) "left" == a.twoFingerDown ? m = 2 * Math.floor(a.currentPageIndex / 2) + 1 : "right" == a.twoFingerDown && (m = 2 * Math.floor(a.currentPageIndex / 2)), a.zoomToPage(m)
            } else return bookMouseDown && (k = globalToBook(a.flippingPage.isLeft(), g[0].pageX, g[0].pageY), a.flippingPage.flipToPoint(k.x, k.y, !1), -1 != b && (c = k.x > b ? !1 : !0), b = k.x), !1
        }
    });
    bookContainer.bind(_event._end, function(b) {
        b = isTouch ? b.originalEvent.changedTouches : [b];
        if (bookMouseDown) {
            a.twoFingerDown = !1;
            var b = globalToBook(a.flippingPage.isLeft(), b[0].pageX, b[0].pageY),
                d, e, f = !0;
            if (a.flippingPage.isLeft() && b.x >= a.pageWidth || !a.flippingPage.isLeft() && 0 >= b.x) f = !1;
            void 0 != c && (f = !(a.flippingPage.isLeft() ^ c));
            f || (a.gotoPageIndex = a.flippingPage.isLeft() ? 2 * Math.floor(a.currentPageIndex / 2 + 1) : 2 * Math.floor(a.currentPageIndex / 2 - 1) + 1, a.betweenPaperCount = a.flippingPage.isLeft() ? 1 : -1);
            d = Point(a.flippingPage.isLeft() ? 0 : a.pageWidth, a.flippingPage.isTop() ? 0 : a.pageHeight);
            e =
                Point(a.flippingPage.isLeft() ? 2 * a.pageWidth : -a.pageWidth, a.flippingPage.isTop() ? 0 : a.pageHeight);
            d = f ? d : e;
            f ? a.timer(a.flippingPage.corner, Math.floor(a.totalFrame / 3), 20, d, b, !1, !0, !f) : (playFlipSound(), e = Math.floor(2 * a.totalFrame / 3), a.timer(a.flippingPage.corner, e, 20, d, b, !1, !0, !f), a.movetoCenter(e, 20, a.gotoPageIndex));
            bookMouseDown = !1
        } else flipping && 2 == nBookStatu && (stopFlip = !0)
    })
};
rightToLeftNormalBook.prototype.getCornerAndBeginPoint = function(a, b) {
    void 0 == b && (b = 1);
    var c = normalEventRadius / b,
        d = "",
        e = null,
        f = {
            corner: null,
            beginPoint: null
        };
    Math.pow(a.x, 2) + Math.pow(a.y, 2) < c ? (d = "tl", e = Point(0, 0), this.flippingPage = this.currentPage2, this.gotoPageIndex = 2 * Math.floor(this.currentPageIndex / 2 + 1), this.currentPageIndex < totalPageCount && (f.corner = d, f.beginPoint = e)) : Math.pow(2 * this.pageWidth - a.x, 2) + Math.pow(a.y, 2) < c ? (d = "tr", a.x -= this.pageWidth, e = Point(this.pageWidth, 0), this.flippingPage = this.currentPage,
        this.gotoPageIndex = 2 * Math.floor(this.currentPageIndex / 2) - 1, 1 < this.currentPageIndex && (f.corner = d, f.beginPoint = e)) : Math.pow(a.x, 2) + Math.pow(this.pageHeight - a.y, 2) < c ? (d = "bl", e = Point(0, this.pageHeight), this.flippingPage = this.currentPage2, this.gotoPageIndex = 2 * Math.floor(this.currentPageIndex / 2 + 1), this.currentPageIndex < totalPageCount && (f.corner = d, f.beginPoint = e)) : Math.pow(this.width - a.x, 2) + Math.pow(this.height - a.y, 2) < c && (d = "br", a.x -= this.pageWidth, e = Point(this.pageWidth, this.pageHeight), this.flippingPage =
        this.currentPage, this.gotoPageIndex = 2 * Math.floor(this.currentPageIndex / 2) - 1, 1 < this.currentPageIndex && (f.corner = d, f.beginPoint = e));
    return f
};
var _singleBook, singleBookShadow;

function singleBook() {
    var a = $(this).data(),
        b = this,
        c;
    a.previousPage = $("#singlePrePage");
    a.currentPage = $("#singleCurPage");
    a.nextPage = $("#singleNextPage");
    a.thickness = thickness(rightToLeft);
    a.flippingPage = {};
    a.flipToPage = {};
    a.currentPageIndex = 1;
    a.pageWidth = 768;
    a.pageHeight = 1024;
    a.maskWidth = 1280;
    a.bookStatu = 0;
    a.differPageNum = 0;
    a.gotoPageIndex = 0;
    a.bookMouseDown = !1;
    a.isLeft = !1;
    a.isTop = !1;
    a.totalFrame = 30;
    var d = 1E3 * bookConfig.flippingTime;
    void 0 != d && 0 < d && (a.totalFrame = d / 20);
    singleBookShadow = new bookShadow(a.pageWidth,
        a.pageHeight, _singleBook);
    a.cssObj = {
        top: "0px",
        left: "0px",
        position: "absolute"
    };
    a.gotoPage = function(b) {
        if (b < 1 || b > originTotalPageCount) {
            _tipsBox.setCaption(b < 1 ? "This is the first page" : "This is the last page");
            _tipsBox.showTipsBox()
        } else if (!(a.currentPageIndex == b || a.bookStatu != 0)) {
            _rimFlip.removeRimFlip();
            a.setGotoPage(b);
            a.bookStatu = 1;
            a.gotoPageIndex = b;
            var b = Point(0, 0),
                c, d = Point(0, 0);
            if (a.differPageNum > 0)
                if (rightToLeft) {
                    b.x = 0;
                    b.y = 0;
                    d.x = 2 * a.pageWidth;
                    d.y = 0;
                    c = "tl"
                } else {
                    b.x = a.pageWidth;
                    b.y = 0;
                    d.x = -a.pageWidth;
                    d.y = 0;
                    c = "tr"
                } else if (rightToLeft) {
                b.x = 2 * a.pageWidth;
                b.y = 0;
                d.x = 0;
                d.y = 0;
                c = "tr"
            } else {
                b.x = -a.pageWidth;
                b.y = 0;
                d.x = a.pageWidth;
                d.y = 0;
                c = "tl"
            }
            playFlipSound();
            a.flippingPage.beginFlip(c);
            a.timer(c, a.totalFrame, 20, d, b, true)
        }
    };
    a.setVisible = function(a) {
        $("#singleBookMask").css("display", a ? "block" : "none")
    };
    a.changePage = function() {
        var c;
        if (a.differPageNum > 0) {
            c = a.previousPage;
            a.previousPage = a.currentPage;
            a.currentPage = a.nextPage;
            a.nextPage = c
        } else {
            c = a.nextPage;
            a.nextPage = a.currentPage;
            a.currentPage = a.previousPage;
            a.previousPage = c
        }
        b.addSearchHighlight()
    };
    a.inPointInPage = function(a, b, c) {
        return a.x >= 0 && a.x <= b && a.y >= 0 && a.y <= c ? true : false
    };
    a.timer = function(b, d, j, g, k, m, n, l) {
        n == void 0 && (n = false);
        l == void 0 && (l = false);
        flipping = true;
        stopFlip = false;
        a.flipPoint = Point(0, 0);
        var p = 0;
        Point(0, 0);
        c = setInterval(function() {
            p++;
            a.flipPoint.x = $.easing.swing(null, p, k.x, g.x - k.x, d);
            a.flipPoint.y = $.easing.swing(null, p, k.y, g.y - k.y, d);
            if (m) a.flipPoint.y = rightToLeft ? 0.2 * Math.sqrt(Math.pow(a.pageWidth, 2) - Math.pow(a.flipPoint.x - a.pageWidth,
                2)) : 0.2 * Math.sqrt(Math.pow(a.pageWidth, 2) - Math.pow(a.flipPoint.x, 2));
            if (p == d) a.flipPoint = g;
            if (stopFlip) {
                auto_player.resetTimer();
                window.clearInterval(c);
                var j = b.indexOf("l") >= 0,
                    u = b.indexOf("t") >= 0;
                if (rightToLeft) {
                    a.differPageNum = j ? 1 : -1;
                    a.gotoPageIndex = j ? a.currentPageIndex + 1 : a.currentPageIndex - 1;
                    j = Point(j ? 2 * a.pageWidth : 0, u ? 0 : a.pageHeight)
                } else {
                    a.differPageNum = j ? -1 : 1;
                    a.gotoPageIndex = j ? a.currentPageIndex - 1 : a.currentPageIndex + 1;
                    j = Point(j ? a.pageWidth : -a.pageWidth, u ? 0 : a.pageHeight)
                }
                a.timer(b, a.totalFrame,
                    20, j, a.flipPoint, false, true, true)
            } else {
                j = 1;
                if (a.flipPoint.x < 0 && !rightToLeft) {
                    j = Math.min((a.flipPoint.x + a.pageWidth) / a.pageWidth + 0.1, 1);
                    a.flippingPage.sideB.css("opacity", j)
                }
                if (a.flipPoint.x > a.pageWidth && rightToLeft) {
                    j = Math.min(Math.abs(a.flipPoint.x - 2 * a.pageWidth) / a.pageWidth + 0.1, 1);
                    a.flippingPage.sideB.css("opacity", j)
                }
                a.flippingPage.flipToPoint(a.flipPoint, p == 1);
                if (p >= d) {
                    _rimFlip.isRimFlip || auto_player.resetTimer();
                    window.clearInterval(c);
                    if (m || l) {
                        a.flippingPage.endFlip();
                        a.afterGotoPage()
                    } else if (n ||
                        !_rimFlip.isRimFlip)
                        if (n) {
                            if (!m && !l) {
                                a.bookStatu = 0;
                                a.flippingPage.setSideAUp(true);
                                a.reset_z_index();
                                a.currentPageIndex != originTotalPageCount && a.thickness.showThickness()
                            }
                        } else a.bookMouseDown = true
                }
            }
        }, j)
    };
    a.stopTimer = function() {
        window.clearInterval(c)
    };
    a.afterGotoPage = function() {
        a.currentPageIndex = a.gotoPageIndex;
        a.changePage();
        setCurrentIndexTextField(a.currentPageIndex, false);
        window.setTimeout(function() {
            a.bookStatu = 0;
            resizeBookAfterFlip && onStageResize();
            a.currentPageIndex != originTotalPageCount &&
                a.thickness.showThickness();
            a.fillNearPage(a.currentPageIndex);
            a.reset_z_index();
            a.flippingPage.resetPage();
            thumbnail.clearHighLight();
            thumbnail.setHighLight(a.currentPageIndex);
            window.location.hash = "#p=" + a.currentPageIndex;
            sendvisitinfo(1, a.currentPageIndex)
        }, 30)
    };
    a.setGotoPage = function(b) {
        a.differPageNum = b - a.currentPageIndex;
        if (a.currentPageIndex > b) {
            a.flippingPage = a.previousPage;
            a.flipToPage = a.previousPage;
            a.fillAnPage(a.flipToPage, b, a.currentPageIndex - 1)
        } else {
            a.flippingPage = a.currentPage;
            a.flipToPage =
                a.nextPage;
            a.fillAnPage(a.flipToPage, b, b);
            a.flipToPage.css({
                "z-index": 4
            });
            a.flippingPage.css({
                "z-index": 5
            })
        }
    };
    a.fillAnPage = function(a, b, c) {
        a.resetPage();
        a.sideA.fillImg(b, false);
        a.sideB.fillImg(c, true);
        a.isHardPage = b == 1 && hardPageEnable && browserType != 3 ? true : false
    };
    a.fillNearPage = function(b) {
        b > 1 && a.fillAnPage(a.previousPage, b - 1, b - 1);
        a.fillAnPage(a.currentPage, b, b);
        b < originTotalPageCount && a.fillAnPage(a.nextPage, b + 1, b + 1)
    };
    a.reset_z_index = function() {
        a.previousPage.css("z-index", 1);
        a.currentPage.css("z-index",
            3);
        a.nextPage.css("z-index", 2)
    };
    a.addSearch = function() {
        a.previousPage.addSearch();
        a.currentPage.addSearch();
        a.nextPage.addSearch()
    };
    a.clearSearch = function() {
        a.previousPage.clearSearch();
        a.currentPage.clearSearch();
        a.nextPage.clearSearch()
    }
}
singleBook.prototype.setSingleBookVisible = function(a) {
    $("#singleBookMask").css({
        display: a ? "block" : "none"
    })
};
singleBook.prototype.gotoAnPoint = function(a) {
    $(this).data().gotoPage(a)
};
singleBook.prototype.Create = function() {
    var a = $(this).data();
    this.initPage(a.previousPage);
    this.initPage(a.currentPage);
    this.initPage(a.nextPage);
    a.fillNearPage(oriPageIndex);
    _singleBook.append(a.thickness);
    a.currentPageIndex = oriPageIndex;
    oriPageIndex >= originTotalPageCount - 1 && a.thickness.setVisible(!1)
};
singleBook.prototype.onResize = function(a, b) {
    var c = $(this).data();
    c.maskWidth = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));
    _singleBook.css({
        width: a + "px",
        height: b + "px"
    });
    c.previousPage.onResize(a, b);
    c.currentPage.onResize(a, b);
    c.nextPage.onResize(a, b);
    c.pageWidth = a;
    c.pageHeight = b;
    $("#singleBookMask").css({
        width: windowWidth + "px",
        height: windowHeight + "px"
    });
    c.thickness.onResize(20, b);
    c.thickness.setThicknessPosition(rightToLeft ? -14 : a - 1, 0);
    singleEventRadius = Math.pow(Math.ceil(a / 3), 2);
    singleBookShadow.onResize(a,
        b, !1)
};
singleBook.prototype.setBookPosition = function(a, b) {
    $("#singleBookMask").css({
        left: a + "px"
    });
    _singleBook.css({
        left: "0px",
        top: b + "px"
    })
};
singleBook.prototype.addSearchHighlight = function() {
    var a = $(this).data();
    a.currentPage.sideA.highlightSearch(a.currentPageIndex)
};
singleBook.prototype.clearSearchHighlight = function() {
    $(this).data().currentPage.sideA.clearHighlight()
};
singleBook.prototype.initPage = function(a) {
    var b = $(this).data();
    a.mask = $("<div style='position:absolute;top:0px;left:0px;overflow:hidden;'></div>");
    a.sidePositionA = $("<div style='position:absolute;top:0px;left:0px;'></div>");
    a.sidePositionB = $("<div style='position:absolute;top:0px;left:0px;'></div>");
    a.sideA = this.initSide(a, !0);
    a.sideB = this.initSide(a, !1);
    a.shadowA = $("<div style='position:absolute;top:0px;left:0px;display: none;'></div>");
    a.shadowB = $("<div style='position:absolute;top:0px;left:0px; display: none;'></div>");
    a.corner = "tr";
    a.realCorner = "tr";
    _singleBook.append(a);
    a.append(a.shadowA);
    a.append(a.mask);
    a.mask.append(a.sidePositionB);
    a.mask.append(a.sidePositionA);
    a.sidePositionB.append(a.sideB);
    a.sidePositionA.append(a.sideA);
    a.sideB.append(a.shadowB);
    a.onResize = function(c, d) {
        a.css({
            width: c + "px",
            height: d + "px"
        });
        a.mask.css({
            width: b.maskWidth + "px",
            height: b.maskWidth + "px"
        });
        a.shadowA.css({
            width: c + "px",
            height: d + "px"
        });
        a.shadowB.css({
            width: c + "px",
            height: d + "px"
        });
        a.sidePositionA.css({
            width: c + "px",
            height: d + "px"
        });
        a.sidePositionB.css({
            width: c + "px",
            height: d + "px"
        });
        a.sideA.onResize(c, d);
        a.sideB.onResize(c, d)
    };
    a.isHardPage = !1;
    a.beginFlip = function(c) {
        a.realCorner = c;
        a.corner = 0 <= c.indexOf("t") ? rightToLeft ? "tl" : "tr" : rightToLeft ? "bl" : "br";
        b.gotoPageIndex == originTotalPageCount && b.thickness.hideThickness()
    };
    a.flipToPoint = function(c, d) {
        void 0 == d && (d = !1);
        "android" == device.name && (c.y = "tl" == a.corner || "tr" == a.corner ? 0 : b.pageHeight);
        if (a.isHardPage) a.hardPageFlip(c.x, d);
        else if (a.isCorner(c.x, c.y)) a.resetPage(), 0 <= a.realCorner.indexOf("l") &&
            a.css("z-index", 1);
        else {
            var e = computePoint(a.corner, c.x, c.y, b.pageWidth, b.pageHeight, b.maskWidth, a.shadowB, a.shadowA);
            angle = e.Angle;
            df = e.Df;
            noMovePoint = e.NomovePoint;
            mv = e.Mv;
            if (d) {
                a.setSideAUp(!1);
                a.showShadow();
                b.flippingPage.css({
                    "z-index": 5
                });
                var e = 0 <= a.corner.indexOf("t"),
                    f = 0 <= a.corner.indexOf("l");
                e ? (a.sidePositionB.css({
                    top: "0px",
                    bottom: "auto",
                    left: f ? "auto" : "0px",
                    right: f ? "0px" : "auto"
                }), a.sidePositionA.css({
                    top: "0px",
                    bottom: "auto",
                    left: f ? "auto" : "0px",
                    right: f ? "0px" : "auto"
                })) : (a.sidePositionB.css({
                    top: "auto",
                    bottom: "0px",
                    left: f ? "auto" : "0px",
                    right: f ? "0px" : "auto"
                }), a.sidePositionA.css({
                    top: "auto",
                    bottom: "0px",
                    left: f ? "auto" : "0px",
                    right: f ? "0px" : "auto"
                }))
            }
            0 <= a.corner.indexOf("t") ? rightToLeft ? (a.rotateElement(a.mask, "100% 0%", translate(-noMovePoint.x + b.pageWidth - b.maskWidth + mv.x, -noMovePoint.y + mv.y) + rotate(-angle)), a.rotateElement(a.sidePositionA, "100% 0%", rotate(angle) + translate(noMovePoint.x - mv.x, noMovePoint.y - mv.y)), a.rotateElement(a.sidePositionB, "100% 0%", rotate(angle) + translate(noMovePoint.x + df.x - mv.x,
                    noMovePoint.y + df.y - mv.y)), a.rotateElement(a.sideB, "100% 0%", translate(-b.pageWidth, 0) + rotate(2 * (90 - angle)))) : (a.rotateElement(a.mask, "0% 0%", translate(noMovePoint.x + mv.x, -noMovePoint.y + mv.y) + rotate(angle)), a.rotateElement(a.sidePositionA, "0% 0%", rotate(-angle) + translate(-noMovePoint.x - mv.x, noMovePoint.y - mv.y)), a.rotateElement(a.sidePositionB, "0% 0%", rotate(-angle) + translate(-noMovePoint.x - mv.x + df.x, noMovePoint.y + df.y - mv.y)), a.rotateElement(a.sideB, "0% 0%", translate(0, 0) + rotate(2 * (angle - 90)))) : rightToLeft ?
                (a.rotateElement(a.mask, "100% 100%", translate(-noMovePoint.x + b.pageWidth - b.maskWidth + mv.x, noMovePoint.y + b.pageHeight - b.maskWidth + mv.y) + rotate(angle)), a.rotateElement(a.sidePositionA, "100% 100%", rotate(-angle) + translate(noMovePoint.x - mv.x, -noMovePoint.y - mv.y)), a.rotateElement(a.sidePositionB, "100% 100%", rotate(-angle) + translate(noMovePoint.x + df.x - mv.x, -noMovePoint.y - mv.y + df.y)), a.rotateElement(a.sideB, "100% 100%", translate(-b.pageWidth, -b.pageHeight) + rotate(2 * (angle - 90)))) : (a.rotateElement(a.mask,
                    "0% 100%", translate(noMovePoint.x + mv.x, noMovePoint.y + b.pageHeight - b.maskWidth + mv.y) + rotate(-angle)), a.rotateElement(a.sidePositionA, "0% 100%", rotate(angle) + translate(-noMovePoint.x - mv.x, -noMovePoint.y - mv.y)), a.rotateElement(a.sidePositionB, "0% 100%", rotate(angle) + translate(-noMovePoint.x + df.x - mv.x, -noMovePoint.y + df.y - mv.y)), a.rotateElement(a.sideB, "0% 100%", translate(0, -b.pageHeight) + rotate(2 * (90 - angle))))
        }
    };
    a.rotateElement = function(a, b, e) {
        a.css({
            "-webkit-transform-origin": b,
            "-moz-transform-origin": b,
            "-ms-transform-origin": b,
            "-o-transform-origin": b,
            "-webkit-transform": e,
            "-moz-transform": e,
            "-ms-transform": e,
            "-o-transform": e
        })
    };
    a.endFlip = function() {
        a.setSideAUp(!0);
        a.hideShadow()
    };
    a.hardPageFlip = function(c, d) {
        var e = c;
        rightToLeft ? (c > 2 * b.pageWidth && (e = 2 * b.pageWidth), 0 > c && (e = 0), e = Math.acos((e - b.pageWidth) / b.pageWidth)) : (c > b.pageWidth && (e = b.pageWidth), c < -b.pageWidth && (e = -b.pageWidth), e = Math.acos(e / b.pageWidth));
        e = 180 * e / Math.PI;
        rightToLeft && (e -= 180);
        d && (a.sideB.imgFlipOver(!0), a.css({
            "-webkit-transform-style": "preserve-3d",
            "-moz-transform-style": "preserve-3d",
            "z-index": 120
        }));
        var f = rightToLeft ? "100% 50%" : "0% 50%";
        a.css({
            "-moz-perspective-origin": "left center",
            "-webkit-transform-origin": f,
            "-webkit-transform": "perspective(3000px) rotateY(" + -e + "deg)",
            "-moz-perspective-origin": "left center",
            "-moz-transform-origin": f,
            "-moz-transform": "perspective(3000px) rotateY(" + -e + "deg)"
        });
        rightToLeft ? -90 >= e ? (a.setSideAUp(!1), a.css({
            opacity: Math.abs(e + 180) / 90
        })) : (a.setSideAUp(!0), a.css({
            opacity: 1
        })) : 90 <= e ? (a.setSideAUp(!1), a.css({
            opacity: Math.abs(e -
                180) / 90
        })) : (a.setSideAUp(!0), a.css({
            opacity: 1
        }))
    };
    a.setSideAUp = function(b) {
        a.sidePositionA.css({
            "z-index": b ? 2 : 1
        });
        a.sidePositionB.css({
            "z-index": b ? 1 : 2
        })
    };
    a.showShadow = function() {
        a.shadowA.css({
            display: "block"
        });
        a.shadowB.css({
            display: "block"
        })
    };
    a.hideShadow = function() {
        a.shadowA.css({
            display: "none"
        });
        a.shadowB.css({
            display: "none"
        })
    };
    a.resetPage = function() {
        a.isHardPage && (a.css({
            "-webkit-transform-style": "flat",
            "-moz-transform-style": "flat",
            "-webkit-transform": "rotateY(0deg)",
            "-moz-transform": "rotateY(0deg)",
            "-ms-transform": "rotateY(0deg)",
            "-o-transform": "rotateY(0deg)",
            transform: "rotateY(0deg)",
            opacity: 1
        }), a.sideA.imgFlipOver(!1), a.sideB.imgFlipOver(!1));
        a.rotateElement(a.mask, "0% 0%", translate(0, 0) + rotate(0));
        a.rotateElement(a.sideA, "0% 0%", translate(0, 0) + rotate(0));
        a.rotateElement(a.sideB, "0% 0%", translate(0, 0) + rotate(0));
        a.rotateElement(a.sidePositionA, "0% 0%", translate(0, 0) + rotate(0));
        a.rotateElement(a.sidePositionB, "0% 0%", translate(0, 0) + rotate(0));
        a.sidePositionA.css({
            top: "0px",
            bottom: "auto",
            left: "0px",
            right: "auto"
        });
        a.sidePositionB.css({
            top: "0px",
            bottom: "auto",
            left: "0px",
            right: "auto"
        });
        a.sideB.css({
            opacity: 1
        });
        a.sideA.css({
            opacity: 1
        })
    };
    a.isCorner = function(c, d) {
        var e = 0;
        0 <= a.realCorner.indexOf("t") && 0 == d && e++;
        0 <= a.realCorner.indexOf("b") && d == b.pageHeight && e++;
        0 <= a.realCorner.indexOf("l") && c == -b.pageWidth && e++;
        0 <= a.realCorner.indexOf("r") && c == b.pageWidth && e++;
        return 2 <= e
    };
    a.addSearch = function() {
        a.sideA.initSearch();
        a.sideB.initSearch()
    };
    a.clearSearch = function() {
        a.sideA.clearSearch();
        a.sideB.clearSearch()
    }
};
singleBook.prototype.initSide = function(a, b) {
    var c = $(this).data(),
        d = $("<div style='position:absolute;top:0px;left:0px'></div>"),
        e = $("<div style='position:absolute;top:0px;left:0px;background-color:#f5f0f5'></div>"),
        f = $("<div style='position:absolute;top:0px;left:0px;'></div>"),
        j = $("<img />"),
        g = $("<div class='kong' id='highlight'></div>"),
        k;
    rightToLeft ? (k = $("<div class='leftShadow'></div>"), k.css({
        width: userConfig.leftShadowWidth + "px",
        opacity: userConfig.leftShadowAlpha
    })) : (k = $("<div class='rightShadow'></div>"),
        k.css({
            width: userConfig.rightShadowWidth + "px",
            opacity: userConfig.rightShadowAlpha
        }));
    var m = $("<img src='" + uiBaseURL + "progress.gif' style='position: absolute;' />");
    m.css({
        left: (c.pageWidth - 32) / 2 + "px",
        top: (c.pageHeight - 32) / 2 + "px"
    });
    var n = $("<div style='position : absolute; '></div>"),
        l = [],
        p = [],
        q = [],
        u = [],
        z = [],
        s = [],
        A = [],
        v = [],
        r = [],
        t = [],
        x = [],
        J = [],
        B = [],
        C = [],
        K = [],
        w = [],
        H = [],
        D = [],
        h = [],
        G = [],
        L = [],
        M = [],
        O = [],
        S = [],
        T = [],
        da = [],
        ea = [],
        F = [],
        fa = [],
        W = $("<div style='position : absolute; '></div>"),
        ga = [];
    a.append(d);
    d.append(e);
    e.append(f);
    d.append(W);
    d.append(n);
    b && e.append(k);
    d.imgIndex = -1;
    d.onResize = function(a, b) {
        d.css({
            width: a + "px",
            height: b + "px"
        });
        e.css({
            width: a + "px",
            height: b + "px"
        });
        f.css({
            width: a + "px",
            height: b + "px"
        });
        j.css({
            width: a + "px",
            height: b + "px"
        });
        g.css({
            width: a + "px",
            height: b + "px"
        });
        k.css({
            height: b + "px"
        });
        m.css({
            left: (a - 32) / 2 + "px",
            top: (b - 32) / 2 + "px"
        });
        d.css({
            "-webkit-box-shadow": "0 0 10px rgba(40, 0, 0, 0.5)",
            "-moz-box-shadow": "0 0 10px rgba(40, 0, 0, 0.5)",
            "box-shadow": "0 0 10px rgba(40, 0, 0, 0.5)"
        });
        n.css({
            width: a,
            height: b
        });
        for (var c = 0; c < l.length; c++) l[c].onResize(a, b);
        for (c = 0; c < p.length; c++) p[c].onResize(a, b);
        for (c = 0; c < u.length; c++) u[c].onResize(a, b);
        for (c = 0; c < q.length; c++) q[c].onResize(a, b);
        for (c = 0; c < z.length; c++) z[c].onResize(a, b);
        for (c = 0; c < s.length; c++) s[c].onResize(a, b);
        for (c = 0; c < A.length; c++) A[c].onResize(a, b);
        for (c = 0; c < v.length; c++) v[c].onResize(a, b);
        for (c = 0; c < r.length; c++) r[c].onResize(a, b);
        for (c = 0; c < t.length; c++) t[c].onResize(a, b);
        for (c = 0; c < x.length; c++) x[c].onResize(a, b);
        for (c = 0; c < J.length; c++) J[c].onResize(a,
            b);
        for (c = 0; c < B.length; c++) B[c].onResize(a, b);
        for (c = 0; c < C.length; c++) C[c].onResize(a, b);
        for (c = 0; c < K.length; c++) K[c].onResize(a, b);
        for (c = 0; c < w.length; c++) w[c].onResize(a, b);
        for (c = 0; c < H.length; c++) H[c].onResize(a, b);
        for (c = 0; c < D.length; c++) D[c].onResize(a, b);
        for (c = 0; c < h.length; c++) h[c].onResize(a, b);
        for (c = 0; c < G.length; c++) G[c].onResize(a, b);
        for (c = 0; c < L.length; c++) L[c].onResize(a, b);
        for (c = 0; c < M.length; c++) M[c].onResize(a, b);
        for (c = 0; c < O.length; c++) O[c].onResize(a, b);
        for (c = 0; c < S.length; c++) S[c].onResize(a,
            b);
        for (c = 0; c < T.length; c++) T[c].onResize(a, b);
        for (c = 0; c < da.length; c++) da[c].onResize(a, b);
        for (c = 0; c < ea.length; c++) ea[c].onResize(a, b);
        for (c = 0; c < F.length; c++) F[c].onResize(a, b);
        for (c = 0; c < fa.length; c++) fa[c].onResize(a, b)
    };
    d.fillImg = function(a, b) {
        if (d.imgIndex != a) {
            d.imgIndex = a;
            f.empty();
            d.showLoading();
            j.load(getPageDir(d.imgIndex, "normal"), function() {
                j.attr("src", getPageDir(d.imgIndex, "normal"));
                b && j.css({
                    "-webkit-transform": "scaleX(-1)",
                    "-moz-transform": "scaleX(-1)",
                    "-o-transform": "scaleX(-1)",
                    "-ms-transform": "scaleX(-1)",
                    opacity: 0.2
                });
                d.hideLoading();
                f.append(j);
                f.append(g);
                g.css({
                    opacity: 0.8
                });
                pageEditor != void 0 && d.initMM()
            })
        }
    };
    d.imgFlipOver = function(a) {
        if (a) {
            j.css({
                "-webkit-transform": "scaleX(-1)",
                "-moz-transform": "scaleX(-1)",
                "-o-transform": "scaleX(-1)",
                "-ms-transform": "scaleX(-1)",
                transform: "scaleX(-1)"
            });
            k.attr("class", rightToLeft ? "rightShadow" : "leftShadow")
        } else {
            j.css({
                "-webkit-transform": "scaleX(1)",
                "-moz-transform": "scaleX(1)",
                "-ms-transform": "scaleX(1)",
                "-o-transform": "scaleX(1)",
                transform: "scaleX(1)"
            });
            k.attr("class", rightToLeft ? "leftShadow" : "rightShadow")
        }
        k.css({
            left: rightToLeft ? "auto" : "0px",
            right: rightToLeft ? "0px" : "auto"
        })
    };
    d.showLoading = function() {
        d.append(m)
    };
    d.hideLoading = function() {
        m.remove()
    };
    d.clearSearch = function() {
        W.empty();
        ga = []
    };
    d.initSearch = function() {
        W.empty();
        ga = [];
        if (!(searchWord == "" || searchPageArr.indexOf(d.imgIndex) < 0 || d.imgIndex == -1))
            for (var a = 0; a < positionForPages[d.imgIndex - 1].length; a++)
                if (positionForPages[d.imgIndex - 1][a].word.toLowerCase().indexOf(searchWord.toLowerCase()) >=
                    0) {
                    var b = searchElement(positionForPages[d.imgIndex - 1][a], c.pageWidth, c.pageHeight);
                    ga.push(b);
                    W.append(b)
                }
    };
    d.initMM = function() {
        n.empty();
        l = [];
        p = [];
        u = [];
        q = [];
        z = [];
        s = [];
        A = [];
        v = [];
        r = [];
        t = [];
        x = [];
        J = [];
        B = [];
        C = [];
        K = [];
        w = [];
        H = [];
        D = [];
        h = [];
        G = [];
        L = [];
        M = [];
        O = [];
        S = [];
        T = [];
        da = [];
        ea = [];
        F = [];
        fa = [];
        if (!(d.imgIndex < 0 || pageEditor.length < d.imgIndex || pageEditor[d.imgIndex - 1][0] == null))
            for (var a = 0; a < pageEditor[d.imgIndex - 1].length; a++) {
                var b = pageEditor[d.imgIndex - 1][a];
                if (b != void 0)
                    if (pageEditor[d.imgIndex - 1][a].annotype ==
                        PageEditor.AnnoType.ANNO_LINK) {
                        b = {
                            width: b.location.width,
                            height: b.location.height,
                            x: b.location.x,
                            y: b.location.y,
                            alpha: b.alpha,
                            downColor: b.downColor,
                            downAlpha: b.downAlpha,
                            overColor: b.overColor,
                            overAlpha: b.overAlpha,
                            outColor: b.outColor,
                            outAlpha: b.outAlpha,
                            action: b.action
                        };
                        b = new initLink(n, b, c.pageWidth, c.pageHeight);
                        l.push(b)
                    } else if (pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_YOUTUBE || pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_YOUTUBE1 || pageEditor[d.imgIndex -
                        1][a].annotype == PageEditor.AnnoType.ANNO_YOUTUBE2 || pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_YOUTUBE3 || pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_YOUTUBE4) {
                    var e = pageEditor[d.imgIndex - 1][a],
                        b = {
                            width: e.location.width,
                            height: e.location.height,
                            x: e.location.x,
                            y: e.location.y,
                            alpha: e.alpha,
                            id: e.videoId,
                            moviePlayTriggerEvt: e.moviePlayTriggerEvt,
                            movieStopTriggerEvt: e.movieStopTriggerEvt
                        };
                    pageEditor[d.imgIndex - 1][a].annotype != PageEditor.AnnoType.ANNO_YOUTUBE && (b.id =
                        e.videoID);
                    youtubeObj = new initYoutube(n, b, c.pageWidth, c.pageHeight);
                    p.push(youtubeObj)
                } else if (pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_VIMEO || pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_VIMEO2) {
                    b = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        id: b.videoID,
                        moviePlayTriggerEvt: b.moviePlayTriggerEvt,
                        movieStopTriggerEvt: b.movieStopTriggerEvt
                    };
                    vimeoObj = new initVimeo(n, b, c.pageWidth, c.pageHeight);
                    fa.push(vimeoObj)
                } else if (pageEditor[d.imgIndex -
                        1][a].annotype == PageEditor.AnnoType.ANNO_VIDEO) {
                    b = pageEditor[d.imgIndex - 1][a];
                    b = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        src: b.url,
                        moviePlayTriggerEvt: b.moviePlayTriggerEvt,
                        movieStopTriggerEvt: b.movieStopTriggerEvt
                    };
                    b = new initVideo(n, b, c.pageWidth, c.pageHeight, "round");
                    u.push(b)
                } else if (pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_AUDIO) {
                    b = pageEditor[d.imgIndex - 1][a];
                    b = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        src: b.soundURL,
                        soundPlayTriggerEvt: b.soundPlayTriggerEvt,
                        soundStopTriggerEvt: b.soundStopTriggerEvt
                    };
                    b = new initAudio(n, b, c.pageWidth, c.pageHeight, "default");
                    q.push(b)
                } else if (pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_IMAGE) {
                    b = pageEditor[d.imgIndex - 1][a];
                    b = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        src: b.url,
                        action: b.action,
                        mouseOver: b.mouseOverEffect
                    };
                    b = new initImage(n, b, c.pageWidth, c.pageHeight);
                    z.push(b)
                } else if (pageEditor[d.imgIndex -
                        1][a].annotype == PageEditor.AnnoType.ANNO_BUTTON) {
                    b = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        src: b.url,
                        action: b.action,
                        buttonCaption: b.buttonCaption,
                        captionY: b.captionY,
                        HRate: b.HRate,
                        Format: b.Format
                    };
                    b = new initButton(n, b, c.pageWidth, c.pageHeight);
                    s.push(b)
                } else if (pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_SWF) {
                    b = pageEditor[d.imgIndex - 1][a];
                    b = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        src: b.swfURL,
                        shadow: b.shadow
                    };
                    swfObj = new initFlashSwf(n, b, c.pageWidth, c.pageHeight);
                    v.push(swfObj)
                } else if (pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_FLASHSHOW) {
                    b = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        photo: b.Images,
                        repeatPlay: b.isRepeat
                    };
                    b = new initFlashShow(n, b, c.pageWidth, c.pageHeight);
                    A.push(b)
                } else if (pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_LINE) {
                    b = {
                        StartX: b.lineStartPX,
                        StartY: b.lineStartPY,
                        EndX: b.lineEndPX,
                        EndY: b.lineEndPY,
                        x: b.location.x,
                        y: b.location.y,
                        width: b.location.width,
                        height: b.location.height,
                        lineAlpha: b.lineAlpha,
                        alpha: b.alpha,
                        lineWidth: b.lineWidth,
                        lineType: b.lineType,
                        dotWidth: b.dotWidth,
                        color: b.color,
                        sh: b.shadow.hasDropShadow,
                        sx: b.shadow.shadowBlurX,
                        sy: b.shadow.shadowBlurY,
                        se: b.shadow.shadowDistance,
                        sr: b.shadow.shadowColor
                    };
                    b = new initLine(n, b, c.pageWidth, c.pageHeight, d.imgIndex + a);
                    r.push(b)
                } else if (pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_ARROW) {
                    b = {
                        StartX: b.lineStartPX,
                        StartY: b.lineStartPY,
                        EndX: b.lineEndPX,
                        EndY: b.lineEndPY,
                        x: b.location.x,
                        y: b.location.y,
                        width: b.location.width,
                        height: b.location.height,
                        alpha: b.alpha,
                        lineWidth: b.lineWidth,
                        lineType: b.lineType,
                        dotWidth: b.dotWidth,
                        color: b.color,
                        sh: b.shadow.hasDropShadow,
                        sx: b.shadow.shadowBlurX,
                        sy: b.shadow.shadowBlurY,
                        se: b.shadow.shadowDistance,
                        arrowType: b.arrowType,
                        sr: b.shadow.shadowColor
                    };
                    b = new initArrow(n, b, c.pageWidth, c.pageHeight, d.imgIndex + a);
                    t.push(b)
                } else if (pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_ROUND) {
                    b = {
                        x: b.location.x,
                        y: b.location.y,
                        width: b.location.width,
                        height: b.location.height,
                        alpha: b.alpha,
                        fillStyle: b.fillStyle,
                        color: b.color,
                        ColorA: b.gradientColorA,
                        ColorB: b.gradientColorB,
                        angle: b.angle,
                        spalpha: b.spalpha,
                        borderWidth: b.borderWidth,
                        borderColor: b.borderColor,
                        borderAlpha: b.borderAlpha,
                        sh: b.shadow.hasDropShadow,
                        sx: b.shadow.shadowBlurX,
                        sy: b.shadow.shadowBlurY,
                        se: b.shadow.shadowDistance,
                        sr: b.shadow.shadowColor,
                        action: b.action
                    };
                    b = new initRound(n, b, c.pageWidth, c.pageHeight, d.imgIndex + a);
                    x.push(b)
                } else if (pageEditor[d.imgIndex -
                        1][a].annotype == PageEditor.AnnoType.ANNO_RECTANGLE) {
                    b = {
                        x: b.location.x,
                        y: b.location.y,
                        width: b.location.width,
                        height: b.location.height,
                        alpha: b.alpha,
                        fillStyle: b.fillStyle,
                        color: b.color,
                        ColorA: b.gradientColorA,
                        ColorB: b.gradientColorB,
                        angle: b.angle,
                        spalpha: b.spalpha,
                        borderWidth: b.borderWidth,
                        borderColor: b.borderColor,
                        borderAlpha: b.borderAlpha,
                        sh: b.shadow.hasDropShadow,
                        sx: b.shadow.shadowBlurX,
                        sy: b.shadow.shadowBlurY,
                        se: b.shadow.shadowDistance,
                        sr: b.shadow.shadowColor,
                        round: parseBool(b.round),
                        roundWidth: Math.max(parseInt(b.ellipseWidth),
                            parseInt(b.ellipseHeight)),
                        action: b.action
                    };
                    b = new initRe(n, b, c.pageWidth, c.pageHeight, d.imgIndex + a);
                    J.push(b)
                } else if (pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_TEXT) {
                    b = {
                        x: b.location.x,
                        y: b.location.y,
                        width: b.location.width,
                        height: b.location.height,
                        alpha: b.alpha,
                        textStr: b.textStr,
                        lineH: b.lineHeightRation,
                        fontName: b.formats.defaultFormat.fontName,
                        fontSize: b.formats.defaultFormat.fontSize,
                        color: b.formats.defaultFormat.color,
                        tbold: b.formats.defaultFormat.bold,
                        italic: b.formats.defaultFormat.italic,
                        bgalpha: b.background.alpha,
                        fillBg: b.background.fillBg,
                        bgcolor: b.background.color,
                        sh: b.shadow.hasDropShadow,
                        sx: b.shadow.shadowBlurX,
                        sy: b.shadow.shadowBlurY,
                        se: b.shadow.shadowDistance,
                        sr: b.shadow.shadowColor,
                        action: b.action
                    };
                    b = new initText(n, b, c.pageWidth, c.pageHeight, d.imgIndex + a);
                    B.push(b)
                } else if (pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_AREA) {
                    b = {
                        x: b.location.x,
                        y: b.location.y,
                        width: b.location.width,
                        height: b.location.height,
                        alpha: b.alpha,
                        color: b.color,
                        rounds: b.round,
                        ellipseWidth: b.ellipseWidth,
                        ellipseHeight: b.ellipseHeight,
                        sh: b.shadow.hasDropShadow,
                        sx: b.shadow.shadowBlurX,
                        sy: b.shadow.shadowBlurY,
                        se: b.shadow.shadowDistance,
                        sr: b.shadow.shadowColor,
                        action: b.action,
                        action: b.action
                    };
                    b = new initArea(n, b, c.pageWidth, c.pageHeight, d.imgIndex + a);
                    C.push(b)
                } else if (pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_CALLOUT) {
                    b = {
                        x: b.location.x,
                        y: b.location.y,
                        width: b.location.width,
                        height: b.location.height,
                        alpha: b.alpha,
                        textStr: b.textStr,
                        lineH: b.lineHeightRation,
                        pageH: b.formats.defaultFormat.pageH,
                        fontName: b.formats.defaultFormat.fontName,
                        fontSize: b.formats.defaultFormat.fontSize,
                        color: b.formats.defaultFormat.color,
                        tbold: b.formats.defaultFormat.bold,
                        italic: b.formats.defaultFormat.italic,
                        bgalpha: b.background.alpha,
                        fillBg: b.background.fillBg,
                        bgcolor: b.background.color,
                        direct: b.hookDirect,
                        cx1: b.hookContr1RatioX,
                        cy1: b.hookContr1RatioY,
                        cx2: b.hookContr2RatioX,
                        cy2: b.hookContr2RatioY,
                        pointx: b.hookContrPointRatioX,
                        pointy: b.hookContrPointRatioY,
                        cornerRadiut: b.cornerRadiut,
                        borderWidth: b.borderWidth,
                        borderColor: b.borderColor,
                        bordreAlpha: b.bordreAlpha,
                        sh: b.shadow.hasDropShadow,
                        sx: b.shadow.shadowBlurX,
                        sy: b.shadow.shadowBlurY,
                        se: b.shadow.shadowDistance,
                        sr: b.shadow.shadowColor,
                        action: b.action
                    };
                    b = new initCallout(n, b, c.pageWidth, c.pageHeight, d.imgIndex + a);
                    K.push(b)
                } else if (pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_ATEXT) {
                    b = {
                        x: b.location.x,
                        y: b.location.y,
                        width: b.location.width,
                        height: b.location.height,
                        alpha: b.alpha,
                        textStr: b.strText,
                        fontName: b.format.font,
                        fontSize: b.format.size,
                        color: b.format.color,
                        tbold: b.format.bold,
                        italic: b.format.italic,
                        align: b.format.align,
                        action: b.action,
                        repeat: b.repeat,
                        moveSpeed: b.moveSpeed,
                        sh: b.shadow.hasDropShadow,
                        sx: b.shadow.shadowBlurX,
                        sy: b.shadow.shadowBlurY,
                        se: b.shadow.shadowDistance,
                        sr: b.shadow.shadowColor,
                        action: b.action
                    };
                    b = new initAText(n, b, c.pageWidth, c.pageHeight, d.imgIndex + a);
                    w.push(b)
                } else if (pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_STARTEXT) {
                    b = {
                        x: b.location.x,
                        y: b.location.y,
                        width: b.location.width,
                        height: b.location.height,
                        alpha: b.alpha,
                        textStr: b.strText,
                        fontName: b.format.font,
                        fontSize: b.format.size,
                        color: b.format.color,
                        tbold: b.format.bold,
                        italic: b.format.italic,
                        align: b.format.align,
                        action: b.action,
                        repeat: b.repeat,
                        moveSpeed: b.moveSpeed,
                        lineH: b.HRate,
                        sh: b.shadow.hasDropShadow,
                        sx: b.shadow.shadowBlurX,
                        sy: b.shadow.shadowBlurY,
                        se: b.shadow.shadowDistance,
                        sr: b.shadow.shadowColor
                    };
                    b = new initStarText(n, b, c.pageWidth, c.pageHeight, d.imgIndex + a);
                    H.push(b)
                } else if (pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_TEXTANIM) {
                    b = {
                        x: b.location.x,
                        y: b.location.y,
                        width: b.location.width,
                        height: b.location.height,
                        alpha: b.alpha,
                        effectType: b.effectType,
                        textStr: b.textStr,
                        fontName: b.formats.defaultFormat.fontName,
                        fontSize: b.formats.defaultFormat.fontSize,
                        color: b.formats.defaultFormat.color,
                        tbold: b.formats.defaultFormat.bold,
                        italic: b.formats.defaultFormat.italic,
                        action: b.action,
                        lineH: b.HRate,
                        sh: b.shadow.hasDropShadow,
                        sx: b.shadow.shadowBlurX,
                        sy: b.shadow.shadowBlurY,
                        se: b.shadow.shadowDistance,
                        sr: b.shadow.shadowColor
                    };
                    b = new initAminText(n, b, c.pageWidth, c.pageHeight,
                        d.imgIndex + a);
                    D.push(b)
                } else if (pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_ATIMAGE) {
                    b = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        src: b.url,
                        action: b.action
                    };
                    atimageObj = new initPngImage(n, b, c.pageWidth, c.pageHeight);
                    h.push(atimageObj)
                } else if (pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_EFFECTTEXT) {
                    b = {
                        x: b.location.x,
                        y: b.location.y,
                        width: b.location.width,
                        height: b.location.height,
                        alpha: b.alpha,
                        textStr: b.htmlText,
                        action: b.action,
                        lineH: b.HRate,
                        moveSpeed: b.effectStyle,
                        sh: b.shadow.hasDropShadow,
                        sx: b.shadow.shadowBlurX,
                        sy: b.shadow.shadowBlurY,
                        se: b.shadow.shadowDistance,
                        sr: b.shadow.shadowColor
                    };
                    b = new initEffText(n, b, c.pageWidth, c.pageHeight, d.imgIndex + a);
                    M.push(b)
                } else if (pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_ADVANCEDSOUND) {
                    b = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        src: b.soundList.sound,
                        skinType: b.skinType,
                        soundPlay: b.soundPlayTriggerEvt
                    };
                    b = new initSound(n,
                        b, c.pageWidth, c.pageHeight, d.imgIndex + a);
                    O.push(b)
                } else if (pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_CAROUSEL) {
                    b = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        images: b.Images
                    };
                    b = new initCarousel(n, b, c.pageWidth, c.pageHeight, d.imgIndex + a);
                    T.push(b)
                } else if (pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_DYNSHOW) {
                    b = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        images: b.Images,
                        borderWidth: b.borderWidth
                    };
                    b = new initDynamicShow(n, b, c.pageWidth, c.pageHeight, d.imgIndex + a);
                    da.push(b)
                } else if (pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_BANNER) {
                    b = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        action: b.action,
                        banners: b.banners
                    };
                    b = new initBanner(n, b, c.pageWidth, c.pageHeight, d.imgIndex + a);
                    S.push(b)
                } else if (pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_FLIPJUMP) {
                    b = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        images: b.Images,
                        addBackground: parseBool(b.addBack),
                        addBorder: parseBool(b.addBorder),
                        backgroundColor: b.backgroundColor,
                        backgroundAlpha: b.backgroundColorAlpha,
                        borderColor: b.backgroundBorderColor
                    };
                    b = new initFlipJump(n, b, c.pageWidth, c.pageHeight, d.imgIndex + a);
                    ea.push(b)
                } else if (pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_PLUGIN && pageEditor[d.imgIndex - 1][a].className == PLUGIN_ROTATE3D) {
                    b = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        images: b.componentData.Images,
                        addBackground: parseBool(b.componentData.addBack),
                        addBorder: parseBool(b.componentData.addBorder),
                        backgroundColor: b.componentData.backColor,
                        backgroundAlpha: b.componentData.backAlpha,
                        borderColor: b.componentData.borderColor,
                        sh: parseBool(b.shadow.hasDropShadow),
                        sx: b.shadow.shadowBlurX,
                        sy: b.shadow.shadowBlurY,
                        se: b.shadow.shadowDistance,
                        sr: b.shadow.shadowColor
                    };
                    b = new initRotate3D(n, b, c.pageWidth, c.pageHeight, d.imgIndex + a);
                    F.push(b)
                } else if (pageEditor[d.imgIndex -
                        1][a].annotype == PageEditor.AnnoType.ANNO_VIDEO1) {
                    b = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        src: b.videoURL,
                        moviePlayTriggerEvt: b.moviePlayTriggerEvt,
                        movieStopTriggerEvt: b.movieStopTriggerEvt
                    };
                    b = new initVideo(n, b, c.pageWidth, c.pageHeight, "smallblack");
                    u.push(b)
                } else if (pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_VIDEO2) {
                    b = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        src: b.videoURL,
                        moviePlayTriggerEvt: b.moviePlayTriggerEvt,
                        movieStopTriggerEvt: b.movieStopTriggerEvt
                    };
                    b = new initVideo(n, b, c.pageWidth, c.pageHeight);
                    u.push(b)
                } else if (pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_PLUGIN && pageEditor[d.imgIndex - 1][a].className == PLUGIN_VIDEO1) {
                    b = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        src: b.componentData.videoURL,
                        moviePlayTriggerEvt: b.moviePlayTriggerEvt,
                        movieStopTriggerEvt: b.movieStopTriggerEvt
                    };
                    b = new initVideo(n,
                        b, c.pageWidth, c.pageHeight, "classic");
                    u.push(b)
                } else if (pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_PLUGIN && pageEditor[d.imgIndex - 1][a].className == PLUGIN_VIDEO2) {
                    b = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        src: b.componentData.videoURL,
                        moviePlayTriggerEvt: b.moviePlayTriggerEvt,
                        movieStopTriggerEvt: b.movieStopTriggerEvt
                    };
                    b = new initVideo(n, b, c.pageWidth, c.pageHeight);
                    u.push(b)
                } else if (pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_AUDIO1) {
                    b = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        src: b.soundList == {} ? "" : b.soundList.sound,
                        key: "path",
                        soundPlayTriggerEvt: b.soundPlayTriggerEvt,
                        soundStopTriggerEvt: b.soundStopTriggerEvt
                    };
                    b = new initAudio(n, b, c.pageWidth, c.pageHeight, "advanced");
                    q.push(b)
                } else if (pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_AUDIO2) {
                    b = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        src: b.data == {} ? "" : b.data.item,
                        key: "fname",
                        soundPlayTriggerEvt: b.soundPlayTriggerEvt,
                        soundStopTriggerEvt: b.soundStopTriggerEvt
                    };
                    b = new initAudio(n, b, c.pageWidth, c.pageHeight, "wave");
                    q.push(b)
                } else if (pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_PLUGIN && pageEditor[d.imgIndex - 1][a].className in audioThemeNames) {
                    var b = {
                            width: b.location.width,
                            height: b.location.height,
                            x: b.location.x,
                            y: b.location.y,
                            alpha: b.alpha,
                            src: b.componentData.songs == {} ? "" : b.componentData.songs.song,
                            key: "url",
                            soundPlayTriggerEvt: b.soundPlayTriggerEvt,
                            soundStopTriggerEvt: b.soundStopTriggerEvt
                        },
                        e = void 0,
                        f = pageEditor[d.imgIndex - 1][a].className;
                    f == "GlassAudioPlayer" && (e = "glass");
                    f == "SimpleAudioPlayer" && (e = "simple");
                    f == "StandardAudioPlayer" && (e = "enjoy");
                    f == "StandardAudioPlayer02" && (e = "decent");
                    f == "StandardAudioPlayer03" && (e = "tree");
                    f == "StandardAudioPlayer04" && (e = "christmas");
                    f == "StandardAudioPlayer05" && (e = "turnonoff");
                    f == "StandardAudioPlayer06" && (e = "fade");
                    b = new initAudio(n, b, c.pageWidth, c.pageHeight, e);
                    q.push(b)
                } else if (pageEditor[d.imgIndex - 1][a].annotype ==
                    PageEditor.AnnoType.ANNO_ALPHATRANSITIONBANNER) {
                    b = pageEditor[d.imgIndex - 1][a];
                    b = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        src: b.url,
                        action: b.action,
                        images: b.Images.node
                    };
                    b = new initAlphaTransitionBanner(n, b, c.pageWidth, c.pageHeight);
                    G.push(b)
                } else if (pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_EMBEDDEDSLIDESHOW) {
                    b = pageEditor[d.imgIndex - 1][a];
                    b = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        images: b.Images.Image
                    };
                    b = new initEmbeddedSlideshow(n, b, c.pageWidth, c.pageHeight);
                    L.push(b)
                } else if (pageEditor[d.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_PRINT) {
                    b = pageEditor[d.imgIndex - 1][a];
                    b = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        overAlpha: b.overAlpha,
                        borderColor: b.borderColor,
                        overColor: b.overColor,
                        borderWidth: b.barderWidth,
                        printTitle: b.printTitle,
                        printDesc: b.printDesc
                    };
                    b = new initPrint(n, b, c.pageWidth, c.pageHeight, d.imgIndex);
                    C.push(b)
                }
            }
    };
    d.changeTo0x = function(a) {
        var b = a;
        a.substr(0, 1) != "#" && a.substr(0, 2) != "0x" && (b = "#" + parseInt(a).toString(16));
        a.substr(0, 2) == "0x" && (b = a.replace("0x", "#"));
        return b
    };
    d.highlightSearch = function(a) {
        highlightSearchFun(g, a)
    };
    d.clearHighlight = function() {
        clearHighlightFun(g)
    };
    return d
};

function zoomControlBar(a) {
    this.dir = uiBaseURL;
    this.bar = $("<div></div>");
    this.btnZoomUp = $("<div title='zoomUp' id='zu'></div>");
    this.btnProgressBar = $("<div title='pb' id='pb'></div>");
    this.btnZoomDown = $("<div title='zoomDown' id='zd'></div>");
    this.btnZoomOut = $("<div title='zoomOut' id='zo'></div>");
    this.btnPre = $("<div title='previous' id='pr'></div>");
    this.btnNext = $("<div title='next' id='ne'></div>");
    this.width = 220;
    this.height = 40;
    a.append(this.bar);
    this.bar.append(this.btnZoomUp);
    this.bar.append(this.btnZoomDown);
    this.bar.append(this.btnZoomOut);
    this.bar.append(this.btnPre);
    this.bar.append(this.btnNext);
    this.btnZoomUp.append($('<img src="style/icon/ZU.png" id = "zu"></img>'));
    this.btnProgressBar.append($('<img src="style/icon/PB.png" id = "pb"></img>'));
    this.btnZoomDown.append($('<img src="style/icon/ZD.png" id = "zd"></img>'));
    this.btnZoomOut.append($('<img src="style/icon/ZO.png" id = "zo"></img>'));
    this.btnPre.append($('<img src="style/icon/PR.png" id = "pr"></img>'));
    this.btnNext.append($('<img src="style/icon/NE.png" id = "ne"></img>'));
    this.bar.css({
        width: this.width + "px",
        height: this.height + "px",
        position: "absolute",
        "z-index": 5,
        "-webkit-border-radius": "5px",
        "-moz-border-radius": "5px",
        "-ms-border-radius": "5px",
        "-o-border-radius": "5px",
        "border-radius": "5px",
        "-webkit-box-shadow": "0px 0px 10px rgba(0, 0, 60, 0.8)",
        "-moz-box-shadow": "0px 0px 10px rgba(0, 0, 60, 0.8)",
        "-ms-box-shadow": "0px 0px 10px rgba(0, 0, 60, 0.8)",
        "-o-box-shadow": "0px 0px 10px rgba(0, 0, 60, 0.8)",
        "box-shadow": "0px 0px 10px rgba(0, 0, 60, 0.8)",
        display: "none",
        "background-color": "#333333",
        opacity: 0.3
    });
    this.btnZoomUp.css({
        width: "26px",
        height: "26px",
        "border-radius": "5px"
    });
    this.btnZoomDown.css({
        width: "26px",
        height: "26px",
        "border-radius": "5px"
    });
    this.btnZoomOut.css({
        width: "26px",
        height: "26px",
        "border-radius": "5px"
    });
    this.btnPre.css({
        width: "26px",
        height: "26px",
        "border-radius": "5px"
    });
    this.btnNext.css({
        width: "26px",
        height: "26px",
        "border-radius": "5px"
    });
    this.btnZoomUp.children("img").css({
        "margin-left": "3px",
        "margin-top": "3px"
    });
    this.btnZoomDown.children("img").css({
        "margin-left": "3px",
        "margin-top": "3px"
    });
    this.btnZoomOut.children("img").css({
        "margin-left": "3px",
        "margin-top": "3px"
    });
    this.btnPre.children("img").css({
        "margin-left": "3px",
        "margin-top": "3px"
    });
    this.btnNext.children("img").css({
        "margin-left": "3px",
        "margin-top": "3px"
    });
    this.initEvt();
    this.setButtonsPos()
}
zoomControlBar.prototype.setPosition = function(a) {
    this.bar.css({
        left: a + "px",
        top: toolBar.getTopHeight() + 5 + "px"
    })
};
zoomControlBar.prototype.setVisible = function(a) {
    this.bar.css({
        display: a ? "block" : "none"
    });
    if (!0 == a && (this.bar.css({
            opacity: 0.3
        }), void 0 == this.changeColor && (this.changeColor = !1), !this.changeColor)) this.initColor(bookConfig.iconColor), this.changeColor = !0
};
zoomControlBar.prototype.setChildIndex = function(a) {
    this.bar.css({
        "z-index": a
    })
};
zoomControlBar.prototype.onResize = function(a, b) {
    this.bar.css({
        width: a + "px",
        height: b + "px"
    })
};
zoomControlBar.prototype.initEvt = function() {
    var a = this;
    a.bar.bind(_event._enter, function() {
        a.bar.animate({
            opacity: 0.7
        }, 1E3)
    });
    a.bar.bind(_event._down, function() {
        a.bar.css({
            opacity: 0.7
        })
    });
    a.bar.bind(_event._end, function() {
        a.bar.css({
            opacity: 0.7
        })
    });
    a.bar.bind(_event._leave, function() {
        a.bar.css({
            opacity: 0.3
        })
    });
    a.btnZoomUp.bind(_event._end, function() {
        a.zoomUp()
    });
    a.btnZoomDown.bind(_event._end, function() {
        a.zoomDown()
    });
    a.btnZoomOut.bind(_event._end, function() {
        isIE10() ? alert(IE10_LIMIT) : a.zoomOut()
    });
    a.btnPre.bind(_event._end, function() {
        previousPageFun()
    });
    a.btnNext.bind(_event._end, function() {
        nextPageFun()
    });
    a.btnZoomUp.bind("mouseover", function() {
        a.btnZoomUp.css({
            cursor: "pointer"
        })
    });
    a.btnZoomDown.bind("mouseover", function() {
        a.btnZoomDown.css({
            cursor: "pointer"
        })
    });
    a.btnZoomOut.bind("mouseover", function() {
        a.btnZoomOut.css({
            cursor: "pointer"
        })
    });
    a.btnPre.bind("mouseover", function() {
        a.btnPre.css({
            cursor: "pointer"
        })
    });
    a.btnNext.bind("mouseover", function() {
        a.btnNext.css({
            cursor: "pointer"
        })
    });
    a.btnZoomUp.mouseEnterShine("#333333",
        "111111", "#999999");
    a.btnZoomDown.mouseEnterShine("#333333", "111111", "#999999");
    a.btnZoomOut.mouseEnterShine("#333333", "111111", "#999999");
    a.btnPre.mouseEnterShine("#333333", "111111", "#999999");
    a.btnNext.mouseEnterShine("#333333", "111111", "#999999")
};
zoomControlBar.prototype.initColor = function(a) {
    this.btnZoomUp.changeButtonColor(a);
    this.btnZoomDown.changeButtonColor(a);
    this.btnZoomOut.changeButtonColor(a);
    this.btnPre.changeButtonColor(a);
    this.btnNext.changeButtonColor(a)
};
zoomControlBar.prototype.setButtonsPos = function() {
    this.btnZoomUp.css({
        position: "absolute",
        "margin-left": "20px",
        top: "6px"
    });
    this.btnZoomDown.css({
        position: "absolute",
        "margin-left": "60px",
        top: "6px"
    });
    this.btnZoomOut.css({
        position: "absolute",
        "margin-left": "100px",
        top: "6px"
    });
    this.btnPre.css({
        position: "absolute",
        "margin-left": "140px",
        top: "6px"
    });
    this.btnNext.css({
        position: "absolute",
        "margin-left": "180px",
        top: "6px"
    })
};
zoomControlBar.prototype.zoomUp = function() {
    zoomBook.zoom(1)
};
zoomControlBar.prototype.zoomDown = function() {
    zoomBook.zoom(-0.5)
};
zoomControlBar.prototype.zoomOut = function() {
    windowWidth < windowHeight ? (changeShowBook(1), bookType = 1, setCurrentIndexTextField($(singlePageBook).data().currentPageIndex), $(singlePageBook).data().gotoPage(zoomBook.currentIndex)) : (changeShowBook(0), bookType = 0, setCurrentIndexTextField(flipBook.currentPageIndex, !0), flipBook.gotoPage(zoomBook.currentIndex));
    thumbnail.clearHighLight();
    thumbnail.setHighLight(zoomBook.currentIndex);
    zoomBook.noZoom();
    void 0 == toolBar.buttonZoom ? $("#btnZoom").empty().append(getImage(toolBarIconsURL[5])).attr("title",
        getLanguage("btnZoomIn", "Zoom In")) : (toolBar.buttonZoom.changeIcon(toolBarIconsURL[5]), toolBar.buttonZoom.changeCaption(getLanguage("btnZoomIn", "Zoom In")), toolBar.setButtonPosition())
};

function zoomSide(a) {
    this.side = $("<div></div>");
    this.sideContent = $("<div class='sideContent' style= 'overflow: hidden'></div>");
    this.sideImg = $("<img style='position: absolute;' />");
    this.MMbg = $("<div style='position:absolute;z-index:3;'></div>");
    this.loadingImg = $("<img src='" + uiBaseURL + "progress.gif' style='position: absolute;'>");
    this.width = zoomPageWidth;
    this.height = zoomPageHeight;
    this.fitH = this.fitW = 0;
    this.tmpImg = $("<img style='position: absolute;z-index:-1;' />");
    this.searchHighlight = $("<div class='kong' id='highlight'></div>");
    a.append(this.side);
    this.side.append(this.sideContent);
    this.imgIndex = -1;
    this.toScale = 1;
    this.origin = "0% 0%";
    this.translateY = this.translateX = this.y = this.x = 0;
    this.isZomming = !1;
    this.sideTop = toolBar.getTopHeight() + 5;
    this.side.css({
        width: this.width + "px",
        height: this.height + "px",
        top: this.sideTop + "px",
        position: "absolute",
        border: "1px solid rgba(200, 200, 200, 0.6)",
        "-webkit-box-shadow": "10px 5px 15px rgba(40, 0, 0, 0.6)",
        "-moz-box-shadow": "10px 5px 15px rgba(40, 0, 0, 0.6)",
        "box-shadow": "10px 5px 15px rgba(40, 0, 0, 0.6)"
    });
    this.sideContent.css({
        width: this.width + "px",
        height: this.height + "px"
    });
    this.searchHighlight.css({
        width: this.width + "px",
        height: this.height + "px"
    });
    this.sideImg.css({
        width: this.width + "px",
        height: this.height + "px"
    });
    this.MMbg.css({
        width: this.width + "px",
        height: this.height + "px"
    });
    this.loadingImg.css({
        left: (this.width - 32) / 2 + "px",
        top: (this.height - 32) / 2 + "px"
    });
    this.linkArray = [];
    this.youtubeArray = [];
    this.videoArray = [];
    this.audioArray = [];
    this.imageArray = [];
    this.buttonArray = [];
    this.flashShowArray = [];
    this.flashSwfArray = [];
    this.lineArray = [];
    this.arrowArray = [];
    this.roundArray = [];
    this.reArray = [];
    this.textArray = [];
    this.areaArray = [];
    this.calloutArray = [];
    this.atextArray = [];
    this.startextArray = [];
    this.aminArray = [];
    this.atimageArray = [];
    this.alimageArray = [];
    this.slideShowArray = [];
    this.efftextArray = [];
    this.soundArray = [];
    this.bannerArray = [];
    this.carouselArray = [];
    this.dynshowArray = [];
    this.jumpArray = [];
    this.rotate3DArray = [];
    this.vimeoArray = [];
    this.initEvent();
    this.onWinResize(windowWidth - leftMargin - rightMargin, windowHeight - topMargin -
        bottomMargin - 40, !0);
    this.father = a
}
zoomSide.prototype.hideMM = function() {
    this.MMbg.css({
        display: "none"
    })
};
zoomSide.prototype.showMM = function() {
    this.MMbg.css({
        display: "block"
    })
};
zoomSide.prototype.setCSS = function(a) {
    this.side.css(a)
};
zoomSide.prototype.onResize2 = function(a) {
    this.toScale = a / this.width;
    a = getTransform(this.side[0]);
    this.zoomObj(this.side, this.origin, " scale(" + this.toScale + ")", a.x, a.y)
};
zoomSide.prototype.onResize = function(a, b, c) {
    a = getPageWidthHeight(a, b, zoomPageWidth, zoomPageHeight);
    this.width = a.x;
    this.height = a.y;
    this.side.css({
        width: this.width + "px",
        height: this.height + "px"
    });
    this.sideContent.css({
        width: this.width + "px",
        height: this.height + "px"
    });
    this.sideImg.css({
        width: this.width + "px",
        height: this.height + "px"
    });
    this.searchHighlight.css({
        width: this.width + "px",
        height: this.height + "px"
    });
    this.MMbg.css({
        width: this.width + "px",
        height: this.height + "px"
    });
    this.MMResize(this.width, this.height);
    c && this.tmpImg.css({
        width: this.width + "px",
        height: this.height + "px",
        top: this.sideTop + "px"
    })
};
zoomSide.prototype.getSide = function() {
    return this.side
};
zoomSide.prototype.fillContent = function(a) {
    if (a != this.imgIndex) {
        this.imgIndex = a;
        var b = this;
        this.sideContent.css({
            background: "white"
        });
        this.sideContent.empty();
        this.showLoading();
        a > originTotalPageCount || 0 > a || (this.sideImg.attr("src", getPageDir(a, "large")), this.sideImg.load(function() {
            b.hideLoading();
            b.tmpImg.attr("src", getPageDir(a, "large"));
            b.sideContent.append(b.sideImg);
            b.sideContent.append(b.tmpImg);
            b.sideContent.append(b.MMbg);
            b.sideContent.append(b.searchHighlight);
            b.searchHighlight.css({
                opacity: 0.8
            });
            void 0 != pageEditor && b.initMM()
        }))
    }
};
zoomSide.prototype.setPosition = function(a, b) {
    this.side.css({
        left: a + "px",
        top: b + "px"
    })
};
zoomSide.prototype.setChildIndex = function(a) {
    this.side.css({
        "z-index": a
    })
};
zoomSide.prototype.setVisible = function(a) {
    this.side.css({
        display: a ? "block" : "none"
    })
};
zoomSide.prototype.resetSize = function() {
    this.tmpImg.css({
        display: "none"
    });
    var a = this.width * this.toScale >= zoomPageWidth,
        b = a ? zoomPageWidth : this.width * this.toScale,
        c = a ? zoomPageHeight : this.height * this.toScale,
        d = getTransform(this.side[0]),
        e = this.width == zoomPageWidth && b < zoomPageWidth || this.width != zoomPageWidth;
    this.toScale = a ? this.width * this.toScale / zoomPageWidth : 1;
    var a = bookConfig.minZoomWidth,
        f = bookConfig.minZoomHeight;
    if (void 0 != a && void 0 != f && 0 < a && 0 < f) {
        b / c > a / f ? f = a * c / b : a = f * b / c;
        var j = Math.min(0, b - a),
            g =
            Math.min(0, c - f),
            b = Math.max(b, a),
            c = Math.max(c, f);
        d.x += j / 2;
        d.y += g / 2
    }
    this.zoomObj(this.side, "0% 0%", "scale(" + this.toScale + ")", d.x, d.y);
    this.width = b;
    this.height = c;
    this.translateX = d.x;
    this.translateY = d.y;
    e && this.tmpImg.css({
        width: this.width + "px",
        height: this.height + "px"
    });
    this.zoomObj(this.tmpImg, "0% 0%", "scale(" + this.toScale + ")", d.x, d.y);
    this.tmpImg.css({
        display: "block"
    });
    if (e) this.onResize(b, c)
};
zoomSide.prototype.zoom = function(a) {
    if (!0 == this.isZomming) return !1;
    var b = bookConfig.minZoomWidth,
        c = this.side.width() * this.toScale,
        d = this.side.height() * this.toScale,
        a = this.toScale + a,
        e = this.side.width() * a;
    if (1 > a) {
        if (c <= b) return;
        e < b && (a = b / this.side.width())
    }
    e = this.side.width() * a;
    b = this.side.height() * a;
    this.animateZoom(a, (c - e) / 2 + this.translateX, (d - b) / 2 + this.translateY, 300)
};
zoomSide.prototype.noZoom = function() {
    this.toScale = this.fitW / this.width;
    this.zoomObj(this.side, "0% 0%", "scale(" + this.toScale + ")", 0, 0);
    this.zoomObj(this.tmpImg, "0% 0%", "scale(" + this.toScale + ")", 0, 0)
};
zoomSide.prototype.forceReset = function(a) {
    this.width = this.fitW;
    this.height = this.fitH;
    this.toScale = 1;
    void 0 == a && (a = getTransform(this.side[0]));
    this.forceResize(a)
};
zoomSide.prototype.forceMax = function() {
    var a = (this.width * this.toScale - zoomPageWidth) / 2;
    this.width = zoomPageWidth;
    this.height = zoomPageHeight;
    var b = getTransform(this.side[0]);
    b.x += a;
    this.forceResize(b)
};
zoomSide.prototype.animateMax = function() {
    this.animateZoom(zoomPageWidth / this.width, (this.width - zoomPageWidth) / 2, 0, 300)
};
zoomSide.prototype.animateFit = function() {
    this.animateZoom(this.fitW / this.width, 0, 0, 300)
};
zoomSide.prototype.forceResize = function(a) {
    this.side.css({
        width: this.width + "px",
        height: this.height + "px"
    });
    this.sideContent.css({
        width: this.width + "px",
        height: this.height + "px"
    });
    this.sideImg.css({
        width: this.width + "px",
        height: this.height + "px"
    });
    this.searchHighlight.css({
        width: this.width + "px",
        height: this.height + "px"
    });
    this.MMbg.css({
        width: this.width + "px",
        height: this.height + "px"
    });
    this.MMResize(this.width, this.height);
    this.tmpImg.css({
        width: this.width + "px",
        height: this.height + "px"
    });
    this.toScale = 1;
    this.zoomObj(this.side,
        "0% 0%", "scale(" + this.toScale + ")", a.x, a.y);
    this.zoomObj(this.tmpImg, "0% 0%", "scale(" + this.toScale + ")", a.x, a.y);
    this.translateX = a.x;
    this.translateY = a.y
};
zoomSide.prototype.getScaleFromFit = function() {
    return this.width * this.toScale / this.fitW
};
zoomSide.prototype.getCenterTransform = function() {
    return Point((this.fitW - this.width * this.toScale) / 2, 0)
};
zoomSide.prototype.zoomToMax = function() {
    var a = zoomPageWidth / this.width;
    this.animateZoom(a, (this.width * this.toScale - this.width * a) / 2 + this.translateX, 0, 200)
};
zoomSide.prototype.zoomToFit = function() {
    this.animateZoom(this.getScaleFromFit(), 0, 0, 200)
};
zoomSide.prototype.zoomObj = function(a, b, c, d, e) {
    d || (d = 0);
    e || (e = 0);
    d = translate(d, e);
    a.css({
        "-webkit-transform-origin": b,
        "-moz-transform-origin": b,
        "-ms-transform-origin": b,
        "-o-transform-origin": b,
        "-webkit-transform": d + c,
        "-moz-transform": d + c,
        "-ms-transform": d + c,
        "-o-transform": d + c
    })
};
zoomSide.prototype.setTranslate = function(a, b, c) {
    b = translate(b, c);
    a.css({
        "-webkit-transform": b,
        "-moz-transform": b,
        "-o-transform": b,
        "-ms-transform": b
    })
};
zoomSide.prototype.setXY = function(a, b) {
    this.x = a;
    this.y = b
};
var originPoint22, inteval;
zoomSide.prototype.animateTranslate = function(a, b, c) {
    a || (a = 0);
    b || (b = 0);
    c || (c = 25);
    var d = getTransform(this.side[0]),
        e = this;
    $(d).animate({
        x: a,
        y: b
    }, {
        duration: c,
        easing: "easeOutSine",
        complete: function() {
            e.zoomObj(e.side, e.origin, " scale(" + e.toScale + ")", d.x, d.y);
            e.zoomObj(e.tmpImg, e.origin, " scale(" + e.toScale + ")", d.x, d.y)
        }
    })
};
zoomSide.prototype.animateZoom = function(a, b, c, d) {
    if (!0 != this.isZomming) {
        this.isZomming = !0;
        a || (a = this.toScale);
        b || (b = 0);
        c || (c = 0);
        d || (d = 25);
        var e = getTransform(this.side[0]),
            f = {
                scale: this.toScale,
                x: e.x,
                y: e.y
            },
            j = this;
        $(f).animate({
            scale: a,
            x: b,
            y: c
        }, {
            duration: d,
            easing: "easeOutSine",
            step: function() {
                j.tmpImg.css({
                    display: "none"
                });
                j.zoomObj(j.side, j.origin, " scale(" + f.scale + ")", f.x, f.y);
                j.zoomObj(j.tmpImg, j.origin, " scale(" + f.scale + ")", f.x, f.y);
                j.tmpImg.css({
                    display: "block"
                })
            },
            complete: function() {
                j.toScale =
                    a;
                j.resetSize();
                j.isZomming = false
            }
        })
    }
};
zoomSide.prototype.onWinResize = function(a, b, c) {
    var d = getPageWidthHeight(a, b, zoomPageWidth, zoomPageHeight);
    this.fitW = d.x;
    this.fitH = d.y;
    if (c) this.onResize(a, b, !0)
};
zoomSide.prototype.showLoading = function() {
    this.side.append(this.loadingImg)
};
zoomSide.prototype.hideLoading = function() {
    this.loadingImg.remove()
};
zoomSide.prototype.translate = function(a, b) {
    this.tmpImg.css({
        display: "none"
    });
    this.zoomObj(this.side, this.origin, " scale(" + this.toScale + ")", a, b);
    this.zoomObj(this.tmpImg, this.origin, " scale(" + this.toScale + ")", a, b);
    this.tmpImg.css({
        display: "block"
    })
};
zoomSide.prototype.isFit = function() {
    return this.toScale == this.fitW / this.width
};
zoomSide.prototype.animateBack = function(a) {
    var b = getTransform(this.side[0]),
        c = {
            x: b.x,
            y: b.y,
            scale: this.toScale
        },
        d = this.fitW / this.width,
        e = this;
    e.tmpImg.css({
        display: "none"
    });
    $(c).animate({
        x: 0,
        y: 0,
        scale: d
    }, {
        duration: 200,
        step: function() {
            e.zoomObj(e.side, e.origin, " scale(" + c.scale + ")", c.x, c.y);
            e.zoomObj(e.tmpImg, e.origin, " scale(" + c.scale + ")", c.x, c.y)
        },
        complete: function() {
            e.toScale = d;
            e.tmpImg.css({
                display: "block"
            });
            a()
        }
    })
};
zoomSide.prototype.showPage = function() {
    this.side.css({
        display: "block"
    })
};
zoomSide.prototype.hidePage = function() {
    this.side.css({
        display: "none"
    })
};
zoomSide.prototype.getWidth = function() {
    return this.width * this.toScale
};
zoomSide.prototype.initEvent = function() {
    var a = this,
        b = Point(0, 0),
        c = Point(0, 0),
        d = Point(0, 0),
        e = !1,
        f = !1,
        j = null,
        g = !1,
        k, m = 0,
        n = 0,
        l;
    this.side.bind(_event._down, function(l) {
        if (bookType == BookType.zoom_book) {
            if (!0 == a.isZomming || !0 == zoomBook.isFlipping) return !1;
            k = a.toScale;
            var m = a.side[0];
            try {
                m.setCapture ? m.setCapture() : window.captureEvents(Event.MOUSEMOVE | Event.MOUSEUP)
            } catch (n) {}
            l = isTouch ? l.originalEvent.touches : [l];
            m = getTransform(a.side[0]);
            a.translateX = m.x;
            a.translateY = m.y;
            1 == l.length ? (e = !0, f = !1, b = Point(l[0].pageX,
                l[0].pageY), j = Point(a.side.position().left, a.side.position().top)) : 2 == l.length && (e = !1, f = !0, b = Point(l[0].pageX, l[0].pageY), d = Point(l[1].pageX, l[1].pageY), c = Point((l[0].pageX + l[1].pageX) / 2, (l[0].pageY + l[1].pageY) / 2), j = Point(a.side.offset().left, a.side.offset().top));
            g = !1;
            stopEvent(l[0])
        }
    });
    this.side.bind(_event._move, function(p) {
        if (bookType == BookType.zoom_book) {
            p = isTouch ? p.originalEvent.touches : [p];
            e ? a.side.css({
                cursor: "move"
            }) : a.side.css({
                cursor: ""
            });
            if (e) {
                var q = p[0].pageX - b.x + a.translateX,
                    u = p[0].pageY -
                    b.y + a.translateY,
                    z = (new Date).getTime(),
                    s = Math.sqrt(Math.pow(q - m, 2) + Math.pow(u - n, 2)),
                    A = 0;
                100 > z - l && 0 < z - l && (A = s / (z - l), Math.min(300 * A, 300), s = Math.asin((m - q) / s), Math.cos(s), Math.sin(s));
                a.zoomObj(a.side, a.origin, " scale(" + a.toScale + ")", q, u);
                a.zoomObj(a.tmpImg, a.origin, " scale(" + a.toScale + ")", q, u);
                m = q;
                n = u;
                l = z
            } else f && (u = Point(p[0].pageX, p[0].pageY), z = Point(p[1].pageX, p[1].pageY), q = Math.sqrt(Math.pow(b.x - d.x, 2) + Math.pow(b.y - d.y, 2)), u = Math.sqrt(Math.pow(u.x - z.x, 2) + Math.pow(u.y - z.y, 2)), a.toScale = Math.max(u /
                q * k, 0.5), u = (c.x - j.x) / k, q = (c.y - j.y) / k, a.side.width(), a.side.height(), u = (k - a.toScale) * a.side.width() * (u / a.side.width()), z = (k - a.toScale) * a.side.height() * (q / a.side.height()), q = a.translateX + u, u = a.translateY + z, a.zoomObj(a.side, a.origin, " scale(" + a.toScale + ")", q, u), a.zoomObj(a.tmpImg, a.origin, " scale(" + a.toScale + ")", q, u), g = !0, m = q, n = u);
            stopEvent(p[0])
        }
    });
    this.side.bind(_event._end, function() {
        if (bookType == BookType.zoom_book) {
            a.side.css({
                cursor: ""
            });
            a.translateX = m;
            a.translateY = n;
            var b = a.side[0];
            try {
                b.releaseCapture ?
                    b.releaseCapture() : window.captureEvents(Event.MOUSEMOVE | Event.MOUSEUP)
            } catch (c) {}
            g && a.resetSize();
            g = f = e = !1
        }
    });
    isTouch && (this.side.hammer().on("swipeleft", function() {
        if (!0 == zoomBook.isFlipping) return !1;
        2 == bookType && nextPageFun()
    }), this.side.hammer().on("swiperight", function() {
        if (!0 == zoomBook.isFlipping) return !1;
        2 == bookType && previousPageFun()
    }));
    this.side.hammer().on("doubletap", function() {
        if (zoomBook.isFlipping == true || this.isZomming == true || bookType != BookType.zoom_book || isIE10()) return false;
        a.animateFit();
        window.setTimeout(function() {
            toolBar.btnZoom.trigger(_event._end)
        }, 300)
    });
    2 == browserType && (_event._mousewheel = "DOMMouseScroll");
    this.side.bind(_event._mousewheel, function(b) {
        if (bookType != BookType.zoom_book || a.isZomming == true || zoomBook.isFlipping == true) return false;
        var c = b.originalEvent,
            d = Math.max(-1, Math.min(1, c.wheelDelta || -c.detail)),
            e = -0.5 * a.toScale;
        d > 0 && (e = 1 * a.toScale);
        var d = a.toScale,
            e = d + e,
            f = Point(c.pageX, c.pageY),
            g = Point(a.side.offset().left, a.side.offset().top),
            c = getTransform(a.side[0]),
            j =
            (f.x - g.x) / d,
            f = (f.y - g.y) / d;
        a.side.width();
        a.side.height();
        j = (d - e) * a.side.width() * (j / a.side.width());
        d = (d - e) * a.side.height() * (f / a.side.height());
        a.animateZoom(e, j + c.x, d + c.y, 400);
        stopEvent(b);
        return false
    })
};
zoomSide.prototype.initMM = function() {
    this.MMbg.empty();
    this.linkArray = [];
    this.youtubeArray = [];
    this.videoArray = [];
    this.audioArray = [];
    this.imageArray = [];
    this.buttonArray = [];
    this.flashShowArray = [];
    this.flashSwfArray = [];
    this.lineArray = [];
    this.arrowArray = [];
    this.roundArray = [];
    this.reArray = [];
    this.textArray = [];
    this.areaArray = [];
    this.calloutArray = [];
    this.atextArray = [];
    this.startextArray = [];
    this.aminArray = [];
    this.atimageArray = [];
    this.alimageArray = [];
    this.slideShowArray = [];
    this.efftextArray = [];
    this.soundArray = [];
    this.bannerArray = [];
    this.carouselArray = [];
    this.dynshowArray = [];
    this.jumpArray = [];
    this.rotate3DArray = [];
    this.vimeoArray = [];
    if (!(0 >= this.imgIndex || pageEditor.length < this.imgIndex || null == pageEditor[this.imgIndex - 1][0]))
        for (var a = 0; a < pageEditor[this.imgIndex - 1].length; a++) {
            var b = pageEditor[this.imgIndex - 1][a];
            if (void 0 != b)
                if (pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_LINK) {
                    var c = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        downColor: b.downColor,
                        downAlpha: b.downAlpha,
                        overColor: b.overColor,
                        overAlpha: b.overAlpha,
                        outColor: b.outColor,
                        outAlpha: b.outAlpha,
                        action: b.action
                    };
                    this.linkArray.push(new initLink(this.MMbg, c, this.width, this.height))
                } else if (pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_YOUTUBE || pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_YOUTUBE1 || pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_YOUTUBE2 || pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_YOUTUBE3 ||
                pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_YOUTUBE4) c = {
                width: b.location.width,
                height: b.location.height,
                x: b.location.x,
                y: b.location.y,
                alpha: b.alpha,
                id: b.videoId,
                moviePlayTriggerEvt: b.moviePlayTriggerEvt,
                movieStopTriggerEvt: b.movieStopTriggerEvt
            }, pageEditor[this.imgIndex - 1][a].annotype != PageEditor.AnnoType.ANNO_YOUTUBE && (c.id = b.videoID), youtubeObj = new initYoutube(this.MMbg, c, this.width, this.height), this.youtubeArray.push(youtubeObj);
            else if (pageEditor[this.imgIndex - 1][a].annotype ==
                PageEditor.AnnoType.ANNO_VIMEO || pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_VIMEO2) c = {
                width: b.location.width,
                height: b.location.height,
                x: b.location.x,
                y: b.location.y,
                alpha: b.alpha,
                id: b.videoID,
                moviePlayTriggerEvt: b.moviePlayTriggerEvt,
                movieStopTriggerEvt: b.movieStopTriggerEvt
            }, vimeoObj = new initVimeo(this.MMbg, c, this.width, this.height), this.vimeoArray.push(vimeoObj);
            else if (pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_VIDEO) c = {
                width: b.location.width,
                height: b.location.height,
                x: b.location.x,
                y: b.location.y,
                alpha: b.alpha,
                src: b.url,
                moviePlayTriggerEvt: b.moviePlayTriggerEvt,
                movieStopTriggerEvt: b.movieStopTriggerEvt
            }, c = new initVideo(this.MMbg, c, this.width, this.height, "round"), this.videoArray.push(c);
            else if (pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_AUDIO) c = {
                width: b.location.width,
                height: b.location.height,
                x: b.location.x,
                y: b.location.y,
                alpha: b.alpha,
                src: b.soundURL,
                soundPlayTriggerEvt: b.soundPlayTriggerEvt,
                soundStopTriggerEvt: b.soundStopTriggerEvt
            }, c = new initAudio(this.MMbg,
                c, this.width, this.height), this.audioArray.push(c);
            else if (pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_IMAGE) c = pageEditor[this.imgIndex - 1][a], c = {
                width: c.location.width,
                height: c.location.height,
                x: c.location.x,
                y: c.location.y,
                alpha: c.alpha,
                src: c.url,
                action: c.action,
                mouseOver: c.mouseOverEffect
            }, this.imageArray.push(new initImage(this.MMbg, c, this.width, this.height));
            else if (pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_BUTTON) c = {
                width: b.location.width,
                height: b.location.height,
                x: b.location.x,
                y: b.location.y,
                alpha: b.alpha,
                src: b.url,
                action: b.action,
                buttonCaption: b.buttonCaption,
                captionY: b.captionY,
                HRate: b.HRate,
                Format: b.Format
            }, this.buttonArray.push(new initButton(this.MMbg, c, this.width, this.height));
            else if (pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_SWF) c = pageEditor[this.imgIndex - 1][a], c = {
                width: c.location.width,
                height: c.location.height,
                x: c.location.x,
                y: c.location.y,
                alpha: c.alpha,
                src: c.swfURL,
                shadow: c.shadow
            }, swfObj = new initFlashSwf(this.MMbg, c, this.width,
                this.height), this.flashSwfArray.push(swfObj);
            else if (pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_FLASHSHOW) c = pageEditor[this.imgIndex - 1][a], c = {
                width: c.location.width,
                height: c.location.height,
                x: c.location.x,
                y: c.location.y,
                alpha: c.alpha,
                photo: c.Images,
                repeatPlay: c.isRepeat
            }, flashObj = new initFlashShow(this.MMbg, c, this.width, this.height), this.flashShowArray.push(flashObj);
            else if (pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_LINE) c = {
                StartX: b.lineStartPX,
                StartY: b.lineStartPY,
                EndX: b.lineEndPX,
                EndY: b.lineEndPY,
                x: b.location.x,
                y: b.location.y,
                width: b.location.width,
                height: b.location.height,
                lineAlpha: b.lineAlpha,
                alpha: b.alpha,
                lineWidth: b.lineWidth,
                lineType: b.lineType,
                dotWidth: b.dotWidth,
                color: b.color,
                sh: b.shadow.hasDropShadow,
                sx: b.shadow.shadowBlurX,
                sy: b.shadow.shadowBlurY,
                se: b.shadow.shadowDistance,
                sr: b.shadow.shadowColor
            }, this.lineArray.push(new initLine(this.MMbg, c, this.width, this.height, this.imgIndex + a));
            else if (pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_ARROW) c = {
                StartX: b.lineStartPX,
                StartY: b.lineStartPY,
                EndX: b.lineEndPX,
                EndY: b.lineEndPY,
                x: b.location.x,
                y: b.location.y,
                width: b.location.width,
                height: b.location.height,
                alpha: b.alpha,
                lineWidth: b.lineWidth,
                lineType: b.lineType,
                dotWidth: b.dotWidth,
                color: b.color,
                sh: b.shadow.hasDropShadow,
                sx: b.shadow.shadowBlurX,
                sy: b.shadow.shadowBlurY,
                se: b.shadow.shadowDistance,
                arrowType: b.arrowType,
                sr: b.shadow.shadowColor
            }, this.arrowArray.push(new initArrow(this.MMbg, c, this.width, this.height, this.imgIndex + a));
            else if (pageEditor[this.imgIndex -
                    1][a].annotype == PageEditor.AnnoType.ANNO_ROUND) c = {
                x: b.location.x,
                y: b.location.y,
                width: b.location.width,
                height: b.location.height,
                alpha: b.alpha,
                fillStyle: b.fillStyle,
                color: b.color,
                ColorA: b.gradientColorA,
                ColorB: b.gradientColorB,
                angle: b.angle,
                spalpha: b.spalpha,
                borderWidth: b.borderWidth,
                borderColor: b.borderColor,
                borderAlpha: b.borderAlpha,
                sh: b.shadow.hasDropShadow,
                sx: b.shadow.shadowBlurX,
                sy: b.shadow.shadowBlurY,
                se: b.shadow.shadowDistance,
                sr: b.shadow.shadowColor,
                action: b.action
            }, this.roundArray.push(new initRound(this.MMbg,
                c, this.width, this.height, this.imgIndex + a));
            else if (pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_RECTANGLE) c = {
                x: b.location.x,
                y: b.location.y,
                width: b.location.width,
                height: b.location.height,
                alpha: b.alpha,
                fillStyle: b.fillStyle,
                color: b.color,
                ColorA: b.gradientColorA,
                ColorB: b.gradientColorB,
                angle: b.angle,
                spalpha: b.spalpha,
                borderWidth: b.borderWidth,
                borderColor: b.borderColor,
                borderAlpha: b.borderAlpha,
                sh: b.shadow.hasDropShadow,
                sx: b.shadow.shadowBlurX,
                sy: b.shadow.shadowBlurY,
                se: b.shadow.shadowDistance,
                sr: b.shadow.shadowColor,
                round: parseBool(b.round),
                roundWidth: Math.max(parseInt(b.ellipseWidth), parseInt(b.ellipseHeight)),
                action: b.action
            }, this.reArray.push(new initRe(this.MMbg, c, this.width, this.height, this.imgIndex + a));
            else if (pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_TEXT) c = {
                x: b.location.x,
                y: b.location.y,
                width: b.location.width,
                height: b.location.height,
                alpha: b.alpha,
                textStr: b.textStr,
                lineH: b.lineHeightRation,
                fontName: b.formats.defaultFormat.fontName,
                fontSize: b.formats.defaultFormat.fontSize,
                color: b.formats.defaultFormat.color,
                tbold: b.formats.defaultFormat.bold,
                italic: b.formats.defaultFormat.italic,
                bgalpha: b.background.alpha,
                fillBg: b.background.fillBg,
                bgcolor: b.background.color,
                sh: b.shadow.hasDropShadow,
                sx: b.shadow.shadowBlurX,
                sy: b.shadow.shadowBlurY,
                se: b.shadow.shadowDistance,
                sr: b.shadow.shadowColor,
                action: b.action
            }, this.textArray.push(new initText(this.MMbg, c, this.width, this.height, this.imgIndex + a));
            else if (pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_AREA) c = {
                x: b.location.x,
                y: b.location.y,
                width: b.location.width,
                height: b.location.height,
                alpha: b.alpha,
                color: b.color,
                rounds: b.round,
                ellipseWidth: b.ellipseWidth,
                ellipseHeight: b.ellipseHeight,
                sh: b.shadow.hasDropShadow,
                sx: b.shadow.shadowBlurX,
                sy: b.shadow.shadowBlurY,
                se: b.shadow.shadowDistance,
                sr: b.shadow.shadowColor,
                action: b.action
            }, this.areaArray.push(new initArea(this.MMbg, c, this.width, this.height, this.imgIndex + a));
            else if (pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_CALLOUT) c = {
                x: b.location.x,
                y: b.location.y,
                width: b.location.width,
                height: b.location.height,
                alpha: b.alpha,
                textStr: b.textStr,
                lineH: b.lineHeightRation,
                pageH: b.formats.defaultFormat.pageH,
                fontName: b.formats.defaultFormat.fontName,
                fontSize: b.formats.defaultFormat.fontSize,
                color: b.formats.defaultFormat.color,
                tbold: b.formats.defaultFormat.bold,
                italic: b.formats.defaultFormat.italic,
                bgalpha: b.background.alpha,
                fillBg: b.background.fillBg,
                bgcolor: b.background.color,
                direct: b.hookDirect,
                cx1: b.hookContr1RatioX,
                cy1: b.hookContr1RatioY,
                cx2: b.hookContr2RatioX,
                cy2: b.hookContr2RatioY,
                pointx: b.hookContrPointRatioX,
                pointy: b.hookContrPointRatioY,
                cornerRadiut: b.cornerRadiut,
                borderWidth: b.borderWidth,
                borderColor: b.borderColor,
                bordreAlpha: b.bordreAlpha,
                sh: b.shadow.hasDropShadow,
                sx: b.shadow.shadowBlurX,
                sy: b.shadow.shadowBlurY,
                se: b.shadow.shadowDistance,
                sr: b.shadow.shadowColor
            }, this.calloutArray.push(new initCallout(this.MMbg, c, this.width, this.height, this.imgIndex + a));
            else if (pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_ATEXT) c = {
                x: b.location.x,
                y: b.location.y,
                width: b.location.width,
                height: b.location.height,
                alpha: b.alpha,
                textStr: b.strText,
                fontName: b.format.font,
                fontSize: b.format.size,
                color: b.format.color,
                tbold: b.format.bold,
                italic: b.format.italic,
                align: b.format.align,
                action: b.action,
                repeat: b.repeat,
                moveSpeed: b.moveSpeed,
                sh: b.shadow.hasDropShadow,
                sx: b.shadow.shadowBlurX,
                sy: b.shadow.shadowBlurY,
                se: b.shadow.shadowDistance,
                sr: b.shadow.shadowColor
            }, this.atextArray.push(new initAText(this.MMbg, c, this.width, this.height, this.imgIndex + a));
            else if (pageEditor[this.imgIndex -
                    1][a].annotype == PageEditor.AnnoType.ANNO_STARTEXT) c = {
                x: b.location.x,
                y: b.location.y,
                width: b.location.width,
                height: b.location.height,
                alpha: b.alpha,
                textStr: b.strText,
                fontName: b.format.font,
                fontSize: b.format.size,
                color: b.format.color,
                tbold: b.format.bold,
                italic: b.format.italic,
                align: b.format.align,
                action: b.action,
                repeat: b.repeat,
                moveSpeed: b.moveSpeed,
                lineH: b.HRate,
                sh: b.shadow.hasDropShadow,
                sx: b.shadow.shadowBlurX,
                sy: b.shadow.shadowBlurY,
                se: b.shadow.shadowDistance,
                sr: b.shadow.shadowColor
            }, this.startextArray.push(new initStarText(this.MMbg,
                c, this.width, this.height, this.imgIndex + a));
            else if (pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_TEXTANIM) c = {
                x: b.location.x,
                y: b.location.y,
                width: b.location.width,
                height: b.location.height,
                alpha: b.alpha,
                effectType: b.effectType,
                textStr: b.textStr,
                fontName: b.formats.defaultFormat.fontName,
                fontSize: b.formats.defaultFormat.fontSize,
                color: b.formats.defaultFormat.color,
                tbold: b.formats.defaultFormat.bold,
                italic: b.formats.defaultFormat.italic,
                action: b.action,
                lineH: b.HRate,
                sh: b.shadow.hasDropShadow,
                sx: b.shadow.shadowBlurX,
                sy: b.shadow.shadowBlurY,
                se: b.shadow.shadowDistance,
                sr: b.shadow.shadowColor
            }, this.aminArray.push(new initAminText(this.MMbg, c, this.width, this.height, this.imgIndex + a));
            else if (pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_ATIMAGE) c = {
                width: b.location.width,
                height: b.location.height,
                x: b.location.x,
                y: b.location.y,
                alpha: b.alpha,
                src: b.url,
                action: b.action
            }, atimageObj = new initPngImage(this.MMbg, c, this.width, this.height), this.atimageArray.push(atimageObj);
            else if (pageEditor[this.imgIndex -
                    1][a].annotype == PageEditor.AnnoType.ANNO_EFFECTTEXT) c = {
                x: b.location.x,
                y: b.location.y,
                width: b.location.width,
                height: b.location.height,
                alpha: b.alpha,
                textStr: b.htmlText,
                action: b.action,
                moveSpeed: b.effectStyle,
                lineH: b.HRate,
                sh: b.shadow.hasDropShadow,
                sx: b.shadow.shadowBlurX,
                sy: b.shadow.shadowBlurY,
                se: b.shadow.shadowDistance,
                sr: b.shadow.shadowColor
            }, this.efftextArray.push(new initEffText(this.MMbg, c, this.width, this.height, this.imgIndex + a));
            else if (pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_ADVANCEDSOUND) c = {
                width: b.location.width,
                height: b.location.height,
                x: b.location.x,
                y: b.location.y,
                alpha: b.alpha,
                src: b.soundList.sound,
                skinType: b.skinType,
                soundPlay: b.soundPlayTriggerEvt
            }, this.soundArray.push(new initSound(this.MMbg, c, this.width, this.height, this.imgIndex + a));
            else if (pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_CAROUSEL) c = {
                width: b.location.width,
                height: b.location.height,
                x: b.location.x,
                y: b.location.y,
                alpha: b.alpha,
                images: b.Images
            }, this.carouselArray.push(new initCarousel(this.MMbg,
                c, this.width, this.height, this.imgIndex + a));
            else if (pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_DYNSHOW) c = {
                width: b.location.width,
                height: b.location.height,
                x: b.location.x,
                y: b.location.y,
                alpha: b.alpha,
                images: b.Images,
                borderWidth: b.borderWidth
            }, this.dynshowArray.push(new initDynamicShow(this.MMbg, c, this.width, this.height, this.imgIndex + a));
            else if (pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_BANNER) c = {
                width: b.location.width,
                height: b.location.height,
                x: b.location.x,
                y: b.location.y,
                alpha: b.alpha,
                action: b.action,
                banners: b.banners
            }, this.bannerArray.push(new initBanner(this.MMbg, c, this.width, this.height, this.imgIndex + a));
            else if (pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_FLIPJUMP) c = {
                    width: b.location.width,
                    height: b.location.height,
                    x: b.location.x,
                    y: b.location.y,
                    alpha: b.alpha,
                    images: b.Images,
                    addBackground: parseBool(b.addBack),
                    addBorder: parseBool(b.addBorder),
                    backgroundColor: b.backgroundColor,
                    backgroundAlpha: b.backgroundColorAlpha,
                    borderColor: b.backgroundBorderColor
                },
                this.jumpArray.push(new initFlipJump(this.MMbg, c, this.width, this.height, this.imgIndex + a));
            else if (pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_PLUGIN && pageEditor[this.imgIndex - 1][a].className == PLUGIN_ROTATE3D) c = {
                width: b.location.width,
                height: b.location.height,
                x: b.location.x,
                y: b.location.y,
                alpha: b.alpha,
                images: b.componentData.Images,
                addBackground: parseBool(b.componentData.addBack),
                addBorder: parseBool(b.componentData.addBorder),
                backgroundColor: b.componentData.backColor,
                backgroundAlpha: b.componentData.backAlpha,
                borderColor: b.componentData.borderColor,
                sh: parseBool(b.shadow.hasDropShadow),
                sx: b.shadow.shadowBlurX,
                sy: b.shadow.shadowBlurY,
                se: b.shadow.shadowDistance,
                sr: b.shadow.shadowColor
            }, this.rotate3DArray.push(new initRotate3D(this.MMbg, c, this.width, this.height, this.imgIndex + a));
            else if (pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_VIDEO1) c = {
                width: b.location.width,
                height: b.location.height,
                x: b.location.x,
                y: b.location.y,
                alpha: b.alpha,
                src: b.videoURL,
                moviePlayTriggerEvt: b.moviePlayTriggerEvt,
                movieStopTriggerEvt: b.movieStopTriggerEvt
            }, c = new initVideo(this.MMbg, c, this.width, this.height, "smallblack"), this.videoArray.push(c);
            else if (pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_VIDEO2) c = {
                width: b.location.width,
                height: b.location.height,
                x: b.location.x,
                y: b.location.y,
                alpha: b.alpha,
                src: b.videoURL,
                moviePlayTriggerEvt: b.moviePlayTriggerEvt,
                movieStopTriggerEvt: b.movieStopTriggerEvt
            }, c = new initVideo(this.MMbg, c, this.width, this.height), this.videoArray.push(c);
            else if (pageEditor[this.imgIndex -
                    1][a].annotype == PageEditor.AnnoType.ANNO_PLUGIN && pageEditor[this.imgIndex - 1][a].className == PLUGIN_VIDEO1) c = {
                width: b.location.width,
                height: b.location.height,
                x: b.location.x,
                y: b.location.y,
                alpha: b.alpha,
                src: b.componentData.videoURL,
                moviePlayTriggerEvt: b.moviePlayTriggerEvt,
                movieStopTriggerEvt: b.movieStopTriggerEvt
            }, c = new initVideo(this.MMbg, c, this.width, this.height, "classic"), this.videoArray.push(c);
            else if (pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_PLUGIN && pageEditor[this.imgIndex -
                    1][a].className == PLUGIN_VIDEO2) c = {
                width: b.location.width,
                height: b.location.height,
                x: b.location.x,
                y: b.location.y,
                alpha: b.alpha,
                src: b.componentData.videoURL,
                moviePlayTriggerEvt: b.moviePlayTriggerEvt,
                movieStopTriggerEvt: b.movieStopTriggerEvt
            }, c = new initVideo(this.MMbg, c, this.width, this.height), this.videoArray.push(c);
            else if (pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_AUDIO1) c = {
                width: b.location.width,
                height: b.location.height,
                x: b.location.x,
                y: b.location.y,
                alpha: b.alpha,
                src: b.soundList == {} ? "" : b.soundList.sound,
                key: "path",
                soundPlayTriggerEvt: b.soundPlayTriggerEvt,
                soundStopTriggerEvt: b.soundStopTriggerEvt
            }, c = new initAudio(this.MMbg, c, this.width, this.height, "advanced"), this.audioArray.push(c);
            else if (pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_AUDIO2) c = {
                    width: b.location.width,
                    height: b.location.height,
                    x: b.location.x,
                    y: b.location.y,
                    alpha: b.alpha,
                    src: b.data == {} ? "" : b.data.item,
                    key: "fname",
                    soundPlayTriggerEvt: b.soundPlayTriggerEvt,
                    soundStopTriggerEvt: b.soundStopTriggerEvt
                },
                c = new initAudio(this.MMbg, c, this.width, this.height, "wave"), this.audioArray.push(c);
            else if (pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_PLUGIN && pageEditor[this.imgIndex - 1][a].className in audioThemeNames) {
                var c = {
                        width: b.location.width,
                        height: b.location.height,
                        x: b.location.x,
                        y: b.location.y,
                        alpha: b.alpha,
                        src: b.componentData.songs == {} ? "" : b.componentData.songs.song,
                        key: "url",
                        soundPlayTriggerEvt: b.soundPlayTriggerEvt,
                        soundStopTriggerEvt: b.soundStopTriggerEvt
                    },
                    b = void 0,
                    d = pageEditor[this.imgIndex -
                        1][a].className;
                "GlassAudioPlayer" == d && (b = "glass");
                "SimpleAudioPlayer" == d && (b = "simple");
                "StandardAudioPlayer" == d && (b = "enjoy");
                "StandardAudioPlayer02" == d && (b = "decent");
                "StandardAudioPlayer03" == d && (b = "tree");
                "StandardAudioPlayer04" == d && (b = "christmas");
                "StandardAudioPlayer05" == d && (b = "turnonoff");
                "StandardAudioPlayer06" == d && (b = "fade");
                c = new initAudio(this.MMbg, c, this.width, this.height, b);
                this.audioArray.push(c)
            } else pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_ALPHATRANSITIONBANNER ?
                (c = pageEditor[this.imgIndex - 1][a], c = {
                    width: c.location.width,
                    height: c.location.height,
                    x: c.location.x,
                    y: c.location.y,
                    alpha: c.alpha,
                    src: c.url,
                    action: c.action,
                    images: c.Images.node
                }, this.alimageArray.push(new initAlphaTransitionBanner(this.MMbg, c, this.width, this.height))) : pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_EMBEDDEDSLIDESHOW ? (c = pageEditor[this.imgIndex - 1][a], c = {
                        width: c.location.width,
                        height: c.location.height,
                        x: c.location.x,
                        y: c.location.y,
                        alpha: c.alpha,
                        images: c.Images.Image
                    },
                    this.slideShowArray.push(new initEmbeddedSlideshow(this.MMbg, c, this.width, this.height))) : pageEditor[this.imgIndex - 1][a].annotype == PageEditor.AnnoType.ANNO_PRINT && (c = pageEditor[this.imgIndex - 1][a], c = {
                    width: c.location.width,
                    height: c.location.height,
                    x: c.location.x,
                    y: c.location.y,
                    alpha: c.alpha,
                    overAlpha: c.overAlpha,
                    borderColor: c.borderColor,
                    overColor: c.overColor,
                    borderWidth: c.barderWidth,
                    printTitle: c.printTitle,
                    printDesc: c.printDesc
                }, this.areaArray.push(new initPrint(this.MMbg, c, this.width, this.height,
                    this.imgIndex)))
        }
};
zoomSide.prototype.MMResize = function(a, b) {
    for (var c = 0; c < this.linkArray.length; c++) this.linkArray[c].onResize(a, b);
    for (c = 0; c < this.youtubeArray.length; c++) this.youtubeArray[c].onResize(a, b);
    for (c = 0; c < this.videoArray.length; c++) this.videoArray[c].onResize(a, b);
    for (c = 0; c < this.audioArray.length; c++) this.audioArray[c].onResize(a, b);
    for (c = 0; c < this.imageArray.length; c++) this.imageArray[c].onResize(a, b);
    for (c = 0; c < this.buttonArray.length; c++) this.buttonArray[c].onResize(a, b);
    for (c = 0; c < this.flashShowArray.length; c++) this.flashShowArray[c].onResize(a, b);
    for (c = 0; c < this.flashSwfArray.length; c++) this.flashSwfArray[c].onResize(a, b);
    for (c = 0; c < this.lineArray.length; c++) this.lineArray[c].onResize(a, b);
    for (c = 0; c < this.arrowArray.length; c++) this.arrowArray[c].onResize(a, b);
    for (c = 0; c < this.roundArray.length; c++) this.roundArray[c].onResize(a, b);
    for (c = 0; c < this.reArray.length; c++) this.reArray[c].onResize(a, b);
    for (c = 0; c < this.textArray.length; c++) this.textArray[c].onResize(a, b);
    for (c = 0; c < this.areaArray.length; c++) this.areaArray[c].onResize(a, b);
    for (c = 0; c < this.calloutArray.length; c++) this.calloutArray[c].onResize(a,
        b);
    for (c = 0; c < this.atextArray.length; c++) this.atextArray[c].onResize(a, b);
    for (c = 0; c < this.startextArray.length; c++) this.startextArray[c].onResize(a, b);
    for (c = 0; c < this.aminArray.length; c++) this.aminArray[c].onResize(a, b);
    for (c = 0; c < this.atimageArray.length; c++) this.atimageArray[c].onResize(a, b);
    for (c = 0; c < this.efftextArray.length; c++) this.efftextArray[c].onResize(a, b);
    for (c = 0; c < this.soundArray.length; c++) this.soundArray[c].onResize(a, b);
    for (c = 0; c < this.bannerArray.length; c++) this.bannerArray[c].onResize(a,
        b);
    for (c = 0; c < this.carouselArray.length; c++) this.carouselArray[c].onResize(a, b);
    for (c = 0; c < this.dynshowArray.length; c++) this.dynshowArray[c].onResize(a, b);
    for (c = 0; c < this.jumpArray.length; c++) this.jumpArray[c].onResize(a, b);
    for (c = 0; c < this.rotate3DArray.length; c++) this.rotate3DArray[c].onResize(a, b);
    for (c = 0; c < this.vimeoArray.length; c++) this.vimeoArray[c].onResize(a, b);
    for (c = 0; c < this.slideShowArray.length; c++) this.slideShowArray[c].onResize(a, b);
    for (c = 0; c < this.alimageArray.length; c++) this.alimageArray[c].onResize(a,
        b)
};
zoomSide.prototype.highlightSearch = function(a) {
    highlightSearchFun(this.searchHighlight, a)
};
zoomSide.prototype.clearHighlight = function() {
    clearHighlightFun(this.searchHighlight)
};

function initZoomBook(a) {
    this.bookContainer = $("<div style='left:0px;right:0px;top:0px;bottom:0px;position:absolute;display:none;'></div>");
    this.book = $("<div></div>");
    this.prePage = new zoomSide(this.book);
    this.nextPage = new zoomSide(this.book);
    this.showPage = new zoomSide(this.book);
    this.width = zoomPageWidth;
    this.height = zoomPageHeight;
    this.prePage.setChildIndex(1);
    this.showPage.setChildIndex(3);
    this.nextPage.setChildIndex(2);
    this.diffPageCount = 0;
    this.currentIndex = 1;
    this.showingPage = this.flipPage = null;
    this.isFlipping = !1;
    isTouch ? this.initEvent() : (this.controlBar = new zoomControlBar(this.bookContainer), this.controlBar.setPosition((windowWidth - this.controlBar.width) / 2, 20));
    a.append(this.bookContainer);
    this.bookContainer.append(this.book);
    this.book.css({
        width: this.width + "px",
        height: this.height + "px",
        position: "absolute"
    });
    this.fillNear(1)
}
initZoomBook.prototype.onResize = function(a, b) {
    var c = getPageWidthHeight(a, b, zoomPageWidth, zoomPageHeight);
    this.width = c.x;
    this.height = c.y;
    this.book.css({
        width: this.width + "px",
        height: this.height + "px",
        left: (a - this.width) / 2 + leftMargin + "px",
        top: (b - this.height) / 2 + topMargin + "px"
    });
    this.prePage.onWinResize(a, b, !0);
    this.showPage.onWinResize(a, b);
    this.nextPage.onWinResize(a, b, !0);
    this.controlBar && this.controlBar.setPosition((windowWidth - this.controlBar.width) / 2, 20);
    this.prePage.setXY((a - this.width) / 2, (b - this.height) /
        2);
    this.showPage.setXY((a - this.width) / 2, (b - this.height) / 2);
    this.nextPage.setXY((a - this.width) / 2, (b - this.height) / 2);
    this.prePage.translate(-(a - this.width) / 2 - this.prePage.getWidth() - leftMargin - 10, 0);
    this.nextPage.translate((a - this.width) / 2 + this.width + rightMargin + 10, 0)
};
initZoomBook.prototype.setTranslate = function(a, b, c) {
    b = translate(b, c);
    a.css({
        "-webkit-transform": b,
        "-moz-transform": b,
        "-o-transform": b,
        "-ms-transform": b
    })
};
initZoomBook.prototype.gotoPage = function(a) {
    this.prePage.clearHighlight();
    this.nextPage.clearHighlight();
    if (this.currentIndex == a || 1 > a || a > originTotalPageCount || this.isFlipping) {
        if (1 > a || a > originTotalPageCount) _tipsBox.setCaption(1 > a ? "This is the first page" : "This is the last page"), _tipsBox.showTipsBox()
    } else {
        this.isFlipping = !0;
        this.diffPageCount = a - this.currentIndex;
        var b = 0,
            c = 0,
            d = this.showPage,
            e = void 0,
            f = this,
            j = Point(0, (windowWidth - this.width) / 2 + 10 + this.width);
        centerP = d.getCenterTransform();
        this.currentIndex >
            a ? (e = this.prePage, b = j.y, c = -j.y) : (e = this.nextPage, b = -j.y, c = j.y);
        tragetToLeft = centerP.x;
        e.fillContent(a);
        (function() {
            var g = getTransform(d.side[0]);
            e.forceReset();
            var j = d.getScaleFromFit(),
                m = 1 / j,
                n = 30,
                l = bookConfig.flippingTime * 1E3;
            l != void 0 && l > 0 && (n = l / 20);
            var p = 0,
                q = window.setInterval(function() {
                    var l = Point(0, 0),
                        z = Point(0, 0);
                    l.x = $.easing.swing(null, p, g.x, b - g.x, n);
                    l.y = $.easing.swing(null, p, g.y, -g.y, n);
                    z.x = $.easing.swing(null, p, c, tragetToLeft - c, n);
                    var s = 1,
                        A = 1,
                        s = $.easing.swing(null, p, 1, m - 1, n),
                        A = $.easing.swing(null,
                            p, 1, j - 1, n);
                    p++;
                    d.toScale = s;
                    d.translate(l.x, l.y);
                    e.toScale = A;
                    e.translate(z.x, z.y);
                    if (p >= n) {
                        window.clearInterval(q);
                        window.setTimeout(function() {
                            d.resetSize();
                            e.resetSize();
                            f.showPage.noZoom();
                            auto_player.resetTimer();
                            f.changePage();
                            f.endFlip(a);
                            f.isFlipping = false
                        }, 20)
                    }
                }, 20)
        })()
    }
};
initZoomBook.prototype.changePage = function() {
    var a = null;
    0 < this.diffPageCount ? (a = this.showPage, this.showPage = this.nextPage, this.nextPage = this.prePage) : (a = this.nextPage, this.nextPage = this.showPage, this.showPage = this.prePage);
    this.prePage = a
};
initZoomBook.prototype.addSearchHighlight = function() {
    this.showPage.highlightSearch(this.currentIndex)
};
initZoomBook.prototype.clearSearchHighlight = function() {
    this.showPage.clearHighlight()
};
initZoomBook.prototype.endFlip = function(a) {
    this.currentIndex = a;
    this.fillNear(a);
    setCurrentIndexTextField(this.currentIndex, !1);
    window.location.hash = "#p=" + this.currentIndex;
    sendvisitinfo(1, this.currentIndex);
    thumbnail.clearHighLight();
    thumbnail.setHighLight(this.currentIndex);
    this.prePage.translate(-(windowWidth - this.width) / 2 - this.width - 10, 0);
    this.nextPage.translate((windowWidth - this.width) / 2 + this.width + 10, 0);
    this.addSearchHighlight()
};
initZoomBook.prototype.setVisible = function(a) {
    this.bookContainer.css({
        display: a ? "block" : "none"
    });
    isTouch || this.controlBar.setVisible(a)
};
initZoomBook.prototype.setPosition = function(a, b) {
    this.book.css({
        left: a + "px",
        top: b + "px"
    })
};
initZoomBook.prototype.fillNear = function(a) {
    1 < a && this.prePage.fillContent(a - 1);
    this.showPage.fillContent(a);
    a < originTotalPageCount && this.nextPage.fillContent(a + 1)
};
initZoomBook.prototype.initEvent = function() {};
initZoomBook.prototype.initMouseEvt = function() {
    var a = this,
        b = Point(0, 0),
        c = !1,
        d = null;
    this.book.bind(_event._down, function(e) {
        if (bookType == BookType.zoom_book) return c = !0, b.x = e.pageX, b.y = e.pageY, d = {
            x: a.book.offset().left,
            y: a.book.offset().top
        }, !1
    });
    this.book.bind(_event._end, function() {
        bookType == BookType.zoom_book && (c = !1)
    });
    this.book.bind(_event._move, function(e) {
        bookType == BookType.zoom_book && c && bookType == BookType.zoom_book && a.book.css({
            left: e.pageX - b.x + d.x + "px",
            top: e.pageY - b.y + d.y + "px"
        })
    });
    this.book.bind("mouseleave",
        function() {})
};
initZoomBook.prototype.initTouchEvt = function() {
    var a = this,
        b = Point(0, 0),
        c = Point(0, 0),
        d = !1,
        e = !1,
        f = null,
        j;
    this.book.bind(_event._down, function(g) {
        if (bookType == BookType.zoom_book) {
            var j = a.book[0];
            j.setCapture ? j.setCapture() : window.captureEvents(Event.MOUSEMOVE | Event.MOUSEUP);
            g = isTouch ? g.originalEvent.touches : [g];
            g = g.originalEvent.touches;
            1 == g.length ? (d = !0, e = !1, b.x = g[0].pageX, b.y = g[0].pageY, f = {
                x: a.book.offset().left,
                y: a.book.offset().top
            }) : 2 == g.length && (a.showPage.hideMM(), e = !0, d = !1, b.x = g[0].pageX, b.y =
                g[0].pageY, c.x = g[1].pageX, c.y = g[1].pageY, f = {
                    x: g[0].pageX,
                    y: g[0].pageY,
                    left: 0,
                    top: 0,
                    width: a.book.width(),
                    height: a.book.height()
                }, a.prePage.setVisible(!1), a.nextPage.setVisible(!1))
        }
    });
    this.book.bind(_event._end, function() {
        if (bookType == BookType.zoom_book) {
            var b = a.book[0];
            b.releaseCapture ? b.releaseCapture() : window.captureEvents(Event.MOUSEMOVE | Event.MOUSEUP);
            e = d = !1;
            a.prePage.setVisible(!0);
            a.nextPage.setVisible(!0);
            a.showPage.showMM()
        }
    });
    this.book.bind(_event._move, function(g) {
        if (bookType == BookType.zoom_book) {
            g =
                g.originalEvent.touches;
            if (d) a.book.css({
                left: g[0].pageX - b.x + f.x + "px",
                top: g[0].pageY - b.y + f.y + "px"
            });
            else if (e) {
                var k = Point(g[0].pageX, g[0].pageY),
                    m = Point(g[1].pageX, g[1].pageY),
                    g = Math.sqrt(Math.pow(c.x - b.x, 2) + Math.pow(c.y - b.y, 2)),
                    k = Math.sqrt(Math.pow(m.x - k.x, 2) + Math.pow(m.y - k.y, 2));
                j = Math.max((f.width + 2 * (k - g)) / f.width, 1);
                a.showPage.sideImg.css({
                    "-webkit-transform-origin": b.x + "px " + b.y + "px",
                    "-webkit-transform": "scale(" + j + ")"
                })
            }
            return !1
        }
    })
};
initZoomBook.prototype.zoom = function(a) {
    this.showPage.zoom(a)
};
initZoomBook.prototype.noZoom = function() {
    this.showPage.noZoom()
};
initZoomBook.prototype.getLeft = function() {
    return this.book.offset().left
};
initZoomBook.prototype.getTop = function() {
    return this.book.offset().top
};
initZoomBook.prototype.show = function() {
    this.setVisible(!0);
    this.prePage.showPage();
    this.nextPage.showPage();
    this.showPage.hidePage();
    var a = this;
    window.setTimeout(function() {
        a.showPage.showPage();
        a.addSearchHighlight(this.currentIndex)
    }, 500)
};
initZoomBook.prototype.hide = function() {
    this.setVisible(!1)
};

function autoFlip() {
    this.autoPlay = getBool("autoPlayAutoStart", !1) && getBool("AutoPlayButtonVisible", !0);
    this.Duration = getInt("autoPlayDuration", 3);
    this.loopCount = getInt("autoPlayLoopCount", 1);
    this.loopNum = 0;
    this.autoPlay ? this.startTimer() : this.timer = -1
}
autoFlip.prototype.startTimer = function() {
    var a = this;
    this.timer = window.setInterval(function() {
        a.onTimer()
    }, 1E3 * this.Duration)
};
autoFlip.prototype.stopTimer = function() {
    -1 !== this.timer && (window.clearInterval(this.timer), this.timer = -1)
};
autoFlip.prototype.resetTimer = function() {
    this.isPlaying() && (this.stopTimer(), this.startTimer())
};
autoFlip.prototype.onTimer = function() {
    0 == bookType && flipBook.currentPageIndex == totalPageCount || 1 == bookType && $(singlePageBook).data().currentPageIndex == originTotalPageCount || 2 == bookType && zoomBook.currentIndex == originTotalPageCount ? (this.loopNum++, -1 == this.loopCount || this.loopCount > this.loopNum ? firstPageFun() : (this.stop(), toolBar.changeButtonColor(bookConfig.iconColor))) : nextPageFun()
};
autoFlip.prototype.start = function() {
    this.autoPlay = !0;
    this.startTimer()
};
autoFlip.prototype.stop = function() {
    this.autoPlay = !1;
    this.stopTimer()
};
autoFlip.prototype.isPlaying = function() {
    return this.autoPlay
};
var setBackGround = function() {
        var a = gradientColorA,
            b = gradientColorB,
            c = gradientColorAngle,
            d = $("<img />"),
            e = backGroundImgURL,
            f = "0% 0%,100% 0%";
        switch (c) {
            case 45:
                f = "0% 0%,100% 100%";
                break;
            case 90:
                f = "0% 0%,0% 100%";
                break;
            case 135:
                f = "100% 0%,0% 100%";
                break;
            case 180:
                f = "100% 0%,0% 0%";
            case 0:
                f = "0% 0%,100% 0%"
        }
        1 == browserType ? bookContainer.css("background-image", "-webkit-gradient(linear," + f + ",from(" + a + "),to(" + b + "))") : 2 == browserType ? bookContainer.css("background-image", "-moz-linear-gradient(left " + c + "deg," +
            a + "," + b + ")") : 3 == browserType && bookContainer.css("filter", "progid:DXImageTransform.Microsoft.Gradient(GradientType=1, EndColorStr=" + b + ", StartColorStr=" + a + ");");
        if ("" != e && "undefined" != e) {
            var j = new Image;
            j.src = e;
            j.onload = function() {
                j.complete && (d.attr("src", e), bookContainer.append(d), d.css("z-index", 0), d.width(windowWidth), d.height(windowHeight))
            }
        }
        $.fn.extend(bookContainer, {
            resizeBackGroundImg: function() {
                d.width(windowWidth);
                d.height(windowHeight)
            }
        })
    },
    initBackground = function(a, b, c, d, e, f, j) {
        var g = $("<div></div>"),
            k = $("<div></div>"),
            m = $("<img />"),
            n = e,
            l = f,
            p = function(a, b, c) {
                var d = c * Math.PI / 180,
                    c = Math.abs(b * Math.sin(d)) + Math.abs(a * Math.cos(d)),
                    a = Math.abs(b * Math.cos(d)) + Math.abs(a * Math.sin(d));
                return Point(c, a)
            },
            d = d % 360;
        g.css({
            position: "absolute",
            left: "0px",
            top: "0px",
            width: n + "px",
            height: l + "px",
            "z-index": -1
        });
        k.css({
            position: "absolute",
            "z-index": 0
        });
        1 == browserType ? k.css({
            "background-image": "-webkit-linear-gradient(" + d + "deg, " + b + ", " + c + ")",
            width: n + "px",
            height: l + "px"
        }) : 2 == browserType ? k.css({
            "background-image": "-moz-linear-gradient(" +
                d + "deg, " + b + ", " + c + ")",
            width: n + "px",
            height: l + "px"
        }) : 4 == browserType ? k.css({
            "background-image": "-o-linear-gradient(" + d + "deg, " + b + ", " + c + ")",
            width: n + "px",
            height: l + "px"
        }) : 3 == browserType ? (p(n, l, d), k.css({
            filter: "progid:DXImageTransform.Microsoft.Gradient(GradientType=1, EndColorStr=" + c + ", StartColorStr=" + b + ");",
            width: n + "px",
            height: l + "px"
        })) : k.css({
            "background-image": "linear-gradient(" + d + "deg, " + b + ", " + c + ")",
            width: n + "px",
            height: l + "px"
        });
        void 0 != j && "" != j && (m.attr({
            src: j
        }), m.load(function() {
            g.append(m);
            m.css({
                width: n +
                    "px",
                height: l + "px",
                position: "absolute",
                "z-index": 1
            })
        }));
        a.append(g);
        g.append(k);
        this.onResize = function(a, e) {
            n = a;
            l = e;
            g.css({
                width: a + "px",
                height: e + "px"
            });
            m.css({
                width: a + "px",
                height: e + "px"
            });
            if (browserType == 3) {
                p(a, e, d);
                k.css({
                    filter: "progid:DXImageTransform.Microsoft.Gradient(GradientType=1, EndColorStr=" + c + ", StartColorStr=" + b + ");",
                    width: a + "px",
                    height: e + "px"
                })
            } else k.css({
                width: a + "px",
                height: e + "px"
            })
        }
    };
var buttonType = function() {};
buttonType.caption_button = 0;
buttonType.icon_button = 1;
buttonType.double_button = 2;
var buttonAlign = function() {};
buttonAlign.icon_left = 0;
buttonAlign.icon_top = 1;
buttonAlign.icon_right = 2;
buttonAlign.icon_bottom = 3;

function button(a, b, c, d, e) {
    this.background = $("<div style = 'position:relative;'></div>");
    this.caption = "button1";
    this.iconURL = "";
    this.mainColor = "#888888";
    this.height = this.width = 40;
    this.buttonType = a;
    this.config = c;
    this.iconBox = $("<img style = 'position:absolute'></img>");
    this.needResize = e;
    this.asImgButton = d;
    this.create();
    $(b).append(this.background);
    $(this.background).asButton()
}
button.prototype.create = function() {
    var a = this;
    this.background.css({
        position: "absolute",
        width: this.width + "px",
        height: this.height + "px",
        "-webkit-border-radius": "2px",
        "-moz-border-radius": "2px",
        "border-radius": "2px",
        cursor: "pointer"
    });
    void 0 != this.config.mainColor && (this.mainColor = this.config.mainColor, this.background.css({
        "-color": this.config.mainColor
    }));
    this.buttonType != buttonType.icon_button && (this.caption = this.config.caption, this.captionBox = new label(this.caption, this.background), this.setPosition());
    if (this.buttonType != buttonType.caption_button) {
        this.iconURL = this.config.iconURL;
        var b = new Image;
        b.src = this.iconURL;
        b.onload = function() {
            if (b.complete == true) {
                $(a.iconBox).attr("src", a.iconURL);
                a.background.append(a.iconBox);
                a.setPosition();
                a.asImgButton && $(a.iconBox).asImageButton()
            }
        }
    }
};
button.prototype.setPosition = function() {
    if (this.buttonType == buttonType.double_button) {
        var a = this.captionBox.getWidth(),
            b = this.captionBox.getHeight(),
            c = this.iconBox.width(),
            d = this.iconBox.height();
        switch (this.config.align) {
            case buttonAlign.icon_left:
                this.width = a + c + 12;
                this.height = Math.max(d, b) + 6;
                $(this.iconBox).css({
                    top: (this.height - d) / 2 + "px",
                    left: "4px"
                });
                this.captionBox.setLabelPosition((this.height - b) / 2, 4, ["top", "right"]);
                break;
            case buttonAlign.icon_top:
                this.width = Math.max(c, a) + 6;
                this.height = b + d +
                    8;
                this.iconBox.css({
                    top: "2px",
                    left: (this.width - c) / 2 + "px"
                });
                this.captionBox.setLabelPosition((this.width - a) / 2, 2, ["left", "bottom"]);
                break;
            case buttonAlign.icon_right:
                this.width = a + c + 12;
                this.height = Math.max(d, b) + 6;
                $(this.iconBox).css({
                    top: (this.height - d) / 2 + "px",
                    right: "4px"
                });
                this.captionBox.setLabelPosition((this.height - b) / 2, 4, ["top", "left"]);
                break;
            case buttonAlign.icon_bottom:
                this.width = Math.max(c, a) + 6, this.height = b + d + 8, $(this.iconBox).css({
                    bottom: "2px",
                    left: (this.width - c) / 2 + "px"
                }), this.captionBox.setLabelPosition(2, (this.width - a) / 2, ["top", "left"])
        }
    } else this.buttonType == buttonType.caption_button ? (this.width = this.captionBox.getWidth() + 10, this.height = this.captionBox.getHeight() + 10, this.captionBox.setLabelPosition(5, 2)) : this.buttonType == buttonType.icon_button && (this.width = $(this.iconBox).width(), this.height = $(this.iconBox).height(), $(this.iconBox).css({
        top: "0px",
        left: "0px"
    }));
    if (this.needResize) this.onResize(85, 50);
    else $(this.background).css({
        width: this.width,
        height: this.height + "px"
    })
};
button.prototype.resize = function(a, b) {
    this.onResize(a, b)
};
button.prototype.onResize = function(a, b) {
    this.width = a;
    this.height = b;
    $(this.background).css({
        width: a + "px",
        height: b + "px"
    });
    $(this.iconBox).css({
        position: "absolute",
        top: "10px",
        left: "5px"
    })
};
button.prototype.getWidth = function() {
    return this.width
};
button.prototype.getHeight = function() {
    return this.height
};
button.prototype.setCSS = function(a) {
    $(this.background).css(a)
};
button.prototype.setButtonPosition = function(a, b, c) {
    void 0 == c && (c = ["left", "top"]);
    this.background.css(c[0], a + "px");
    this.background.css(c[1], b + "px")
};
button.prototype.setVisible = function(a) {
    $(this.background).css({
        display: a ? "block" : "none"
    })
};
button.prototype.changeIcon = function(a) {
    this.iconURL = a;
    self = this;
    $(self.iconBox).attr("src", self.iconURL);
    !0 == self.iconBox[0].colorChanged && (self.iconBox[0].colorChanged = !1);
    this.setPosition()
};
button.prototype.changeCaption = function(a) {
    this.captionBox.setCaption(a);
    this.setPosition()
};
button.prototype.getCaptionWidth = function() {
    return this.captionBox.getWidth()
};
button.prototype.setIconPosition = function(a, b) {
    this.iconBox.css({
        left: a + "px",
        top: b + "px"
    })
};
button.prototype.setColor = function(a) {
    this.mainColor = a;
    $(this.iconBox).changeButtonColor(a);
    this.buttonType != buttonType.icon_button && (this.captionBox.setFont("12px", a, "Tahoma"), $(this.background).css({
        "text-shadow": "1px 1px #666666"
    }))
};
button.prototype.onMouseDown = function(a, b) {
    this.background.bind(_event._down, function(c) {
        b.call(a, c);
        return !1
    })
};
button.prototype.onMouseUp = function(a, b) {
    3 == browserType ? this.background.bind("click", function(c) {
        b.call(a, c);
        return !1
    }) : this.background.bind(_event._end, function() {
        b.call(a);
        return !1
    })
};
button.prototype.onMouseOver = function(a, b) {
    this.background.bind(_event._move, function() {
        b.call(a);
        return !1
    })
};
button.prototype.mouseEnterShine = function(a, b) {
    this.background.mouseEnterShine(a, b)
};
button.prototype.mouseEnterJump = function() {
    this.background.mouseEnterJump()
};
button.prototype.mouseEnterLight = function(a) {
    var b = this;
    this.background.css({
        "border-radius": "5px"
    });
    this.background.bind(_event._enter, function() {
        b.background.css({
            background: a
        })
    });
    this.background.bind(_event._leave, function() {
        b.background.css({
            background: ""
        })
    })
};
button.prototype.onMouseOut = function() {};
button.prototype.onMouseLeave = function() {};
button.prototype.onMouseMove = function() {};
button.prototype.remove = function() {
    this.background.remove()
};
var demoBar, initDemoBar = function() {
    var a = homePage;
    demoBar = $("<div></div>");
    demoBar.css({
        width: "305px",
        height: "70px",
        position: "absolute",
        "background-color": "#cccccc",
        opacity: 0.5,
        "z-index": 10,
        "-moz-border-radius": "5px",
        "-webkit-border-radius": "5px",
        "border-radius": "5px"
    });
    var b = $("<img />");
    b.css({
        position: "absolute",
        top: "10px",
        left: "5px"
    });
    var c = $("<div></div>");
    c.css({
        position: "absolute",
        top: "13px",
        left: "65px"
    });
    var d = $("<span>" + productName + "</span>"),
        a = $("<a href='" + a + "' target='_blank'>" + a + "</a>");
    a.css({
        position: "absolute",
        top: "25px",
        left: "0px"
    });
    d.css({
        "font-size": "15px",
        color: "#333333"
    });
    tmpContainer.append(demoBar);
    demoBar.append(c);
    c.append(d);
    c.append(a);
    $.fn.extend(demoBar, {
        setDemoPosition: function() {
            demoBar.css({
                top: (windowHeight - 70) / 2 + "px",
                left: (windowWidth - 305) / 2 + "px"
            })
        },
        loadImg: function() {
            b.load(function() {
                demoBar.append(b)
            });
            b.attr({
                src: uiBaseURL + "demo.png"
            })
        }
    });
    demoBar.loadImg();
    demoBar.setDemoPosition()
};

function initLeftOrRightButton(a, b) {
    this.buttonBar = $("<div></div>");
    this.buttonIcon = $("<img />");
    this.buttonBackColor;
    this.height = this.width = 0;
    this.buttonBar.css({
        position: "absolute",
        left: b ? "0px" : "auto",
        right: b ? "auto" : "0px"
    });
    a.append(this.buttonBar);
    this.buttonBar.append(this.buttonIcon);
    var c = this;
    this.buttonIcon.attr("src", b ? uiBaseURL + "previous_normal.png" : uiBaseURL + "next_normal.png");
    this.buttonIcon.load(function() {
        0 == userConfig.shortcutButtonWidth && 0 == userConfig.shortcutButtonHeight ? (c.width =
            this.width, c.height = this.height) : 0 == userConfig.shortcutButtonWidth ? (c.width = this.width * userConfig.shortcutButtonHeight / this.height, c.height = userConfig.shortcutButtonHeight) : 0 == userConfig.shortcutButtonHeight ? (c.width = userConfig.shortcutButtonWidth, c.height = this.height * userConfig.shortcutButtonWidth / this.width) : (c.width = userConfig.shortcutButtonWidth, c.height = userConfig.shortcutButtonHeight);
        c.buttonBar.css({
            width: c.width + "px",
            height: c.height + "px",
            top: (windowHeight - c.height) / 2 + "px"
        });
        c.buttonIcon.css({
            width: c.width +
                "px",
            height: c.height + "px"
        })
    });
    this.buttonIcon.asImageButton();
    this.buttonBar.bind(_event._end, function() {
        b ? previousPageFun() : nextPageFun()
    });
    this.buttonBar.bind(_event._down, function(a) {
        stopEvent(a)
    })
}
initLeftOrRightButton.prototype.onResize = function(a, b) {
    this.buttonBar.css({
        width: a + "px",
        height: b + "px"
    });
    this.buttonIcon.css({
        width: a + "px",
        height: b + "px"
    });
    this.width = a;
    this.height = b;
    this.setPosition()
};
initLeftOrRightButton.prototype.setPosition = function() {
    this.buttonBar.css({
        top: (windowHeight - this.height) / 2 + "px"
    })
};

function initLeftButton(a) {
    this.buttonBar = $("<div></div>");
    this.buttonIcon = null;
    this.buttonBackColor;
    this.height = this.width = 50;
    this.showing = !0;
    this.init();
    0 == userConfig.shortcutButtonWidth && 0 == userConfig.shortcutButtonHeight ? (this.width = this.width, this.height = this.height) : 0 == userConfig.shortcutButtonWidth ? (this.width = this.width * userConfig.shortcutButtonHeight / this.height, this.height = userConfig.shortcutButtonHeight) : 0 == userConfig.shortcutButtonHeight ? (this.width = userConfig.shortcutButtonWidth, this.height =
        this.height * userConfig.shortcutButtonWidth / this.width) : (this.width = userConfig.shortcutButtonWidth, this.height = userConfig.shortcutButtonHeight);
    a.append(this.buttonBar);
    this.buttonBar.append(this.buttonIcon);
    this.buttonBar.css({
        width: this.width + "px",
        height: this.height + "px",
        top: (windowHeight - this.height) / 2 + "px"
    });
    this.buttonIcon.css({
        width: this.width + "px",
        height: this.height + "px",
        "z-index": "95"
    });
    this.buttonIcon.asImageButton();
    this.buttonBar.bind(_event._down, function(a) {
        stopEvent(a)
    })
}
initLeftButton.prototype.init = function() {
    var a = this;
    this.buttonIcon = $(getImage(toolBarIconsURL[17]));
    this.width = this.buttonIcon[0].width;
    this.height = this.buttonIcon[0].height;
    this.buttonBar.css({
        position: "absolute",
        left: -this.width - 10 + "px",
        right: "auto"
    });
    this.buttonBar.bind(_event._end, function() {
        rightToLeft ? nextPageFun() : previousPageFun()
    });
    this.buttonBar.bind("mouseover", function() {
        a.buttonBar.css({
            cursor: "pointer"
        })
    })
};
initLeftButton.prototype.onResize = function(a, b) {
    this.buttonBar.css({
        width: a + "px",
        height: b + "px"
    });
    this.buttonIcon.css({
        width: a + "px",
        height: b + "px"
    });
    this.width = a;
    this.height = b;
    this.setPosition()
};
initLeftButton.prototype.setPosition = function() {
    this.buttonBar.css({
        top: (windowHeight - this.height - toolBar.getHeight() + toolBar.getTopHeight()) / 2 + "px"
    })
};
initLeftButton.prototype.show = function() {
    this.buttonBar.animate({
        left: 0
    }, 500)
};
initLeftButton.prototype.setShow = function(a) {
    this.showing = a;
    !0 == a ? this.buttonBar.css({
        display: "block"
    }) : this.buttonBar.css({
        display: "none"
    })
};
initLeftButton.prototype.setVisible = function(a) {
    !0 == a ? this.buttonBar.css({
        display: "block"
    }) : this.buttonBar.css({
        display: "none"
    })
};

function initRightButton(a) {
    initLeftButton.call(this, a)
}
$.extend(initRightButton.prototype, initLeftButton.prototype);
initRightButton.prototype.init = function() {
    var a = this;
    this.buttonIcon = $(getImage(toolBarIconsURL[19]));
    this.width = this.buttonIcon[0].width;
    this.height = this.buttonIcon[0].height;
    this.buttonBar.css({
        position: "absolute",
        right: -a.width - 10 + "px",
        left: "auto"
    });
    this.buttonBar.bind(_event._end, function() {
        rightToLeft ? previousPageFun() : nextPageFun()
    });
    this.buttonBar.bind("mouseover", function() {
        a.buttonBar.css({
            cursor: "pointer"
        })
    })
};
initRightButton.prototype.show = function() {
    this.buttonBar.animate({
        right: 0
    }, 500)
};

function searchElement(a, b, c) {
    var d = $("<div style='position: absolute'></div>"),
        e = getString("searchColor", "#ffff00"),
        f = getInt("searchAlpha", 0.3);
    d.css({
        top: a.top * c + "px",
        left: a.left * b + "px",
        width: b * a.width + "px",
        height: c * a.height + "px",
        "background-color": e,
        opacity: f
    });
    $.fn.extend(d, {
        onResize: function(b, c) {
            d.css({
                top: a.top * c + "px",
                left: a.left * b + "px",
                width: b * a.width + "px",
                height: c * a.height + "px"
            })
        }
    });
    return d
};

function searchItem(a, b, c, d) {
    this.width = d;
    this.height = 85;
    this.background = $("<div></div>");
    this.textField = new label(b, this.background);
    this.mainColor = colorAdd(bookConfig.searchBackground, 112);
    this.pageIndex = a;
    this.mouseLeaveColor = colorAdd(this.mainColor, 15);
    this.mouseOverColor = colorDiv(this.mainColor, 15);
    var d = colorDiv(this.mouseLeaveColor, 20),
        e = colorAdd(this.mainColor, 20);
    $(this.background).css({
        "background-color": this.mouseLeaveColor,
        width: this.width + "px",
        height: this.height + "px",
        position: "absolute",
        "border-bottom": "1px solid " + d,
        "border-top": "1px solid " + e,
        cursor: "pointer"
    });
    $(this.background).css({
        "text-shadow": "1px 1px " + colorAdd(this.mainColor, 40)
    });
    this.textField.onResize(this.width - 20, this.height - 16);
    this.textField.setLabelPosition(10, 8);
    this.isMouseMove = !1;
    this.downPoint = Point(0, 0);
    var f = this;
    $(c).append(this.background);
    $(this.background).bind(_event._end, function() {
        isSearchDrag || gotoPageFun(f.pageIndex)
    });
    this.textField.setCaption("<b>P." + a + ": </b>" + this.cutText(b, searchWord));
    this.textField.riseAWord(searchWord);
    this.textField.setFont("12px", bookConfig.searchFontColor, "arial");
    this.initEvent()
}
searchItem.prototype.onResize = function(a, b) {
    this.width = a;
    this.height = b;
    $(this.background).css({
        width: a + "px",
        height: b + "px"
    });
    this.textField.onResize(a - 20, b - 16)
};
searchItem.prototype.setPosition = function(a, b) {
    $(this.background).css({
        top: b + "px",
        left: a + "px"
    })
};
searchItem.prototype.getWidth = function() {
    return this.width
};
searchItem.prototype.getHeight = function() {
    return this.height
};
searchItem.prototype.cutText = function(a, b) {
    if (120 > a.length || "" == b) return a;
    var c = a.length,
        d = a.toLowerCase().indexOf(b.toLowerCase()),
        e;
    60 <= d ? (e = Math.max(60 <= c - d ? d - 60 : c - 120, 0), e = ".." + a.substring(e, d)) : e = a.substring(0, d);
    c = 60 < c - d ? a.substring(d, 60 <= d ? d + 60 : 120) + ".." : a.substring(d, c);
    return e + c
};
searchItem.prototype.initEvent = function() {
    var a = this;
    this.background.bind("mouseenter", function() {
        a.background.css({
            background: a.mouseOverColor
        })
    });
    this.background.bind("mouseleave", function() {
        a.background.css({
            background: a.mouseLeaveColor
        })
    })
};

function form(a, b) {
    this.height = this.width = 300;
    this.titleHeight = 40;
    $(this).data();
    void 0 == bookConfig.formColor && (bookConfig.formColor = "#888888");
    this.formConfig = $.extend({
        width: this.width,
        height: this.height,
        scrollbarWidth: 11
    }, a);
    this.formConfig.closeIconURL = uiBaseURL + "closeForm.png";
    this.formBackground = $('<div style="position:absolute;"></div>');
    this.background = $('<div style="position:absolute;"></div>');
    $(b).append(this.formBackground);
    $(this.formBackground).append(this.background);
    this.create();
    this.visible = !1
}
form.prototype.create = function() {
    $(this).data();
    var a = this;
    colorDiv(this.formConfig.mainColor, 80);
    var b = colorDiv(this.formConfig.mainColor, 40);
    colorAdd(this.formConfig.mainColor, 40);
    this.titleBox = $('<div style="position:absolute;"></div>');
    this.contentBox = $('<div style="position:absolute;"></div>');
    this.formBackground.append(this.titleBox);
    this.formBackground.append(this.contentBox);
    this.formBackground.css({
        width: this.formConfig.width + this.formConfig.scrollbarWidth + "px",
        height: this.formConfig.height + "px"
    });
    this.background.css({
        "background-color": this.formConfig.mainColor,
        width: this.formConfig.width + "px",
        height: this.formConfig.height + "px",
        "-moz-border-radius": "0px",
        "-webkit-border-radius": "0px",
        "border-radius": "0px",
        "border-width": "0px",
        "border-style": "0 none"
    });
    this.background.css({
        "-webkit-box-shadow": "0 0 15px rgba(40, 0, 0, 0.7)",
        "-moz-box-shadow": "0 0 15px rgba(40, 0, 0, 0.7)",
        "-o-box-shadow": "0 0 15px rgba(40, 0, 0, 0.7)",
        "box-shadow": "0 0 15px rgba(40, 0, 0, 0.7)"
    });
    this.titleBox.css({
        "border-width": "0px",
        "border-bottom": "1px solid " + b,
        "-moz-border-radius": "5px 5px 0px 0px",
        "-webkit-border-radius": "5px 5px 0px 0px",
        "border-radius": "5px 5px 0px 0px",
        left: "0px",
        top: "0px",
        width: this.formConfig.width + "px",
        "line-height": this.titleHeight + "px",
        height: this.titleHeight + "px",
        "vertical-align": "middle",
        "text-shadow": "1px 1px #000000"
    });
    this.titleBox.setGradient(this.formConfig.mainColor, !1);
    b = this.titleHeight + 1;
    this.contentBox.css({
        top: b + "px",
        left: "0px",
        width: this.formConfig.width + this.formConfig.scrollbarWidth +
            "px",
        height: this.formConfig.height - b + "px"
    });
    this.initTitleBox();
    this.drapable = !1;
    this.formPositionY = this.formPositionX = this.mouseDownPointY = this.mouseDownPointX = 0;
    $(this.titleBox).bind(_event._down, function(b) {
        var d = a.titleBox[0];
        d.setCapture ? d.setCapture() : window.captureEvents(Event.MOUSEMOVE | Event.MOUSEUP);
        b = isTouch ? b.originalEvent.touches : [b];
        a.drapable = !0;
        a.mouseDownPointX = b[0].pageX;
        a.mouseDownPointY = b[0].pageY;
        a.formPositionX = $(a.titleBox).offset().left;
        a.formPositionY = $(a.titleBox).offset().top;
        return !1
    });
    $(this.titleBox).bind(_event._end, function() {
        var b = a.titleBox[0];
        b.releaseCapture ? b.releaseCapture() : window.captureEvents(Event.MOUSEMOVE | Event.MOUSEUP);
        return a.drapable = !1
    });
    $(this.titleBox).bind(_event._move, function(b) {
        b = isTouch ? b.originalEvent.touches : [b];
        if (a.drapable) {
            var d = b[0].pageX - a.mouseDownPointX,
                b = b[0].pageY - a.mouseDownPointY;
            $(a.formBackground).css({
                left: a.formPositionX + d + "px",
                top: a.formPositionY + b + "px"
            })
        }
        return !1
    });
    $(this.titleBox).bind("mouseleave", function() {
        return a.drapable = !1
    });
    $(this.formBackground).bind(_event._down, function() {
        3 == browserType ? event.cancelBubble = !0 : event.stopPropagation()
    });
    $(this.formBackground).bind(_event._move, function() {
        3 == browserType ? event.cancelBubble = !0 : event.stopPropagation()
    });
    $(this.formBackground).bind(_event._end, function() {})
};
form.prototype.initTitleBox = function() {
    $(this).data();
    this.captionBox = new label(this.formConfig.caption, this.titleBox);
    this.captionBox.setFont(12, "#cccccc", "arial");
    this.closeButton = new button(1, this.titleBox, {
        iconURL: this.formConfig.closeIconURL
    }, !0);
    this.captionBox.getHeight();
    this.captionBox.setLabelPosition(15);
    this.closeButton.setButtonPosition(5, 5, ["right", "top"]);
    this.closeButton.onMouseUp(this, this.closeForm)
};
form.prototype.setTop = function(a) {
    this.formBackground.css({
        top: a + "px"
    })
};
form.prototype.getWidth = function() {
    return this.width
};
form.prototype.setWidth = function(a) {
    $(this).data();
    this.width = a;
    100 > a && (this.width = 100);
    this.formBackground.css({
        width: this.width + this.formConfig.scrollbarWidth + "px"
    });
    this.contentBox.css({
        width: this.width + this.formConfig.scrollbarWidth + "px"
    });
    this.background.css({
        width: this.width + "px"
    });
    this.titleBox.css({
        width: this.width + "px"
    })
};
form.prototype.getHeight = function() {
    return this.height
};
form.prototype.setHeight = function(a) {
    $(this).data();
    this.height = a;
    100 >= a && (this.height = 100);
    this.formBackground.css({
        height: this.height + "px"
    });
    this.background.css({
        height: this.height + "px"
    });
    this.contentBox.css({
        height: this.height - (this.titleHeight + 1) + "px"
    })
};
form.prototype.resize = function(a, b) {
    this.onResize(a, b)
};
form.prototype.onResize = function(a, b) {
    this.setWidth(a);
    this.setHeight(b)
};
form.prototype.setColor = function() {};
form.prototype.closeForm = function() {
    $(this.formBackground).css({
        display: "none"
    })
};
form.prototype.setCaption = function(a) {
    this.formConfig.caption = a;
    this.captionBox.setCaption(a)
};
var searchWord = "",
    searchPageArr = [],
    isSearchDrag = !1;

function searchForm(a, b) {
    form.call(this, a, b);
    this.textField = $('<input id="search_text_textField" class=\'inputInnerShadow\' style="position : absolute" type="text" size="13">');
    this.textPadding = 15;
    this.buttonAreaWidth = 60;
    this.titleHeight = 40;
    this.textContent = $("<div id='textContent'></div>");
    this.resultContent = $("<div id='resultContent'></div>");
    this.contentBac = colorAdd(bookConfig.searchBackground, 112);
    this.searchButton = $("<div></div>");
    var c = $("<img src='" + uiBaseURL + "searchButton.png'/>");
    $(c).css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.searchButton.append(c);
    this.textContent.append(this.searchButton);
    colorAdd(bookConfig.searchBackground, 40);
    this.searchButton.mouseEnterGradient(bookConfig.searchBackground, colorDiv(bookConfig.searchBackground, 30), colorAdd(bookConfig.searchBackground, 105));
    this.searchButton.css({
        width: 36,
        height: 36,
        position: "absolute"
    });
    this.searchButton.css({
        "border-radius": "5px"
    });
    this.textField.css({
        top: "16px",
        left: this.textPadding + "px",
        width: this.background.width() - this.textPadding - this.buttonAreaWidth +
            "px",
        height: "30px",
        background: "#ffffff",
        "-moz-border-radius": "5px",
        "-webkit-border-radius": "5px",
        "border-radius": "0px",
        "border-width": "1px",
        "border-left": "1px solid " + colorDiv(this.contentBac, 40),
        "border-top": "1px solid " + colorDiv(this.contentBac, 40),
        "border-right-width": "0px",
        "border-bottom-width": "0px",
        "border-style": "0 none",
        color: "black",
        "padding-left": "5px"
    });
    this.textField.css({
        "font-family": "Tahoma"
    });
    this.searchButton.css({
        right: 8 + this.formConfig.scrollbarWidth + "px",
        top: (this.textContentHeight -
            36) / 2 + "px"
    });
    this.searchItemsBox = $("<div></div>");
    this.searchScrollBac = $("<div></div>");
    this.searchScrollBox = $("<div></div>");
    this.lblSearchTotalItem = new label(" ", this.contentBox);
    this.lblSearchTotalItem.setFont("12px", "#FFFFFF", null);
    this.itemArr = [];
    this.contentBox.append(this.textContent);
    this.contentBox.append(this.resultContent);
    this.contentBox.append(this.searchScrollBac);
    this.contentBox.append(this.searchScrollBox);
    this.contentBox.append(this.textField);
    void 0 == window.textForPages && (window.textForPages = []);
    var c = colorDiv(this.contentBac, 40),
        d = colorAdd(this.contentBac, 40);
    this.textContentHeight = 60;
    this.resultContentHeight = 25;
    this.textContent.css({
        width: this.width + "px",
        height: this.textContentHeight + "px",
        top: "0px",
        left: "0px",
        background: this.contentBac
    });
    this.resultContent.css({
        width: this.width + "px",
        height: this.resultContentHeight + "px",
        "line-height": this.resultContentHeight + "px",
        top: this.textContentHeight + 1 + "px",
        left: "0px",
        position: "absolute"
    });
    this.searchScrollBac.css({
        position: "absolute",
        width: this.width +
            "px",
        height: this.height - this.titleHeight - this.textContentHeight - this.resultContentHeight - 5 + "px",
        "overflow-y": "auto",
        top: this.textContentHeight + this.resultContentHeight + 3 + "px",
        left: "0px",
        background: this.contentBac
    });
    this.searchScrollBox.css({
        position: "absolute",
        width: this.width + this.formConfig.scrollbarWidth + "px",
        height: this.height - this.titleHeight - this.textContentHeight - this.resultContentHeight - 5 + "px",
        "overflow-y": "auto",
        top: this.textContentHeight + this.resultContentHeight + 3 + "px",
        left: "0px"
    });
    this.searchScrollBac.css({
        "border-top": "1px solid " +
            d
    });
    this.resultContent.css({
        "border-top": "1px solid " + colorAdd(this.contentBac, 40),
        "border-bottom": "1px solid " + colorDiv(this.contentBac, 90)
    });
    this.resultContent.setGradient(colorDiv(this.contentBac, 50), !1);
    this.textContent.css({
        "border-top": "1px solid " + colorAdd(this.contentBac, 40)
    });
    this.textContent.css({
        "border-bottom": "1px solid " + c
    });
    this.resultContent.css({
        color: "#ffffff",
        "font-family": "Tahoma",
        "font-size": "12px",
        "vertical-align": "middle",
        "text-shadow": "1px 1px #000000"
    });
    this.lblSearchTotalItem.setLabelPosition(20,
        40);
    this.formBackground.css({
        top: "10px",
        left: -(240 + this.formConfig.scrollbarWidth) - 20 + "px",
        "z-index": 99,
        opacity: 1
    });
    this.initEvent();
    this.captionBox.setFont("12px", "#FFFFFF", "arial");
    this.captionBox.setCaption("<strong>Search</strong>");
    this.mouseDownY = -1;
    this.scrollMouseDown = !1
}
$.extend(searchForm.prototype, form.prototype);
$.extend(searchForm.prototype, {
    initEvent: function() {
        var a = this;
        this.searchButton.mouseup(function() {
            a.searchStart()
        });
        this.textField.bind("keydown", function(b) {
            13 == b.keyCode && a.searchStart()
        });
        this.contentBox.bind(_event._down, function(b) {
            a.scrollMouseDown = !0;
            isSearchDrag = !1;
            b = isTouch ? b.originalEvent.touches : [b];
            a.mouseDownY = b[0].pageY
        });
        this.contentBox.bind(_event._move, function(b) {
            a.scrollMouseDown && (b = isTouch ? b.originalEvent.touches : [b], 20 < Math.abs(a.mouseDownY - b[0].pageY) && (isSearchDrag = !0))
        });
        this.contentBox.bind(_event._end, function() {
            a.scrollMouseDown = !1
        })
    },
    addItems: function(a) {
        this.itemArr = [];
        searchPageArr = [];
        for (var b = 0; b < a.length; b++) {
            var c = a[b],
                d = new searchItem(c.search_page, c.search_text, this.searchScrollBox, this.width);
            this.itemArr.push(d);
            searchPageArr.push(c.search_page);
            d.setPosition(0, b * (d.getHeight() + 2))
        }
        this.itemCount = a.length
    },
    onScrollBoxResize: function(a, b) {
        this.searchScrollBac.css({
            width: a + "px",
            height: b - this.titleHeight - this.textContentHeight - this.resultContentHeight -
                5 + "px",
            top: this.textContentHeight + this.resultContentHeight + 3 + "px"
        });
        this.searchScrollBox.css({
            width: a + this.formConfig.scrollbarWidth + "px",
            height: b - this.titleHeight - this.textContentHeight - this.resultContentHeight - 5 + "px",
            top: this.textContentHeight + this.resultContentHeight + 3 + "px"
        });
        this.textContent.css({
            width: a + "px",
            height: this.textContentHeight + "px",
            top: "0px",
            left: "0px"
        });
        this.resultContent.css({
            width: a + "px",
            height: this.resultContentHeight + 1 + "px",
            top: this.textContentHeight + 1 + "px",
            left: "0px"
        })
    },
    clearItems: function() {
        this.resultContent.html("");
        this.searchScrollBox.empty();
        searchWord = "";
        this.lblSearchTotalItem.setCaption("");
        this.textField.val("");
        this.itemCount = 0
    },
    searchStart: function() {
        sendvisitinfo(6, flipBook.getCurrentPageIndex());
        var a = this.textField.val();
        0 < bookConfig.leastSearchChar && a.length < bookConfig.leastSearchChar ? this.resultContent.html("&nbsp;&nbsp;The search text is too short.") : (this.searchScrollBox.empty(), this.resultContent.html(""), searchWord = a, a = searchFromPages(textForPages, a), this.resultContent.html("&nbsp;&nbsp;Pages : " +
            a.length), this.addItems(a), flipBook.addSearchHighlight(), singlePageBook.addSearchHighlight(), zoomBook.addSearchHighlight(), this.lblSearchTotalItem.setCaption(""))
    },
    search: function(a) {
        sendvisitinfo(6, flipBook.getCurrentPageIndex());
        0 < bookConfig.leastSearchChar && a.length < bookConfig.leastSearchChar ? this.resultContent.html("&nbsp;&nbsp;The search text is too short.") : (this.searchScrollBox.empty(), searchWord = a, a = searchFromPages(textForPages, a), this.resultContent.html("&nbsp;&nbsp;Pages : " + a.length), this.addItems(a),
            flipBook.addSearchHighlight(), singlePageBook.addSearchHighlight(), zoomBook.addSearchHighlight(), this.lblSearchTotalItem.setCaption(""))
    },
    closeForm: function() {
        if (this.isSearchShow) {
            var a = this,
                b = windowWidth / 4,
                b = Math.max(300, b);
            this.formBackground.animate({
                left: -b - 20
            }, 400, function() {
                a.clearItems();
                a.itemArr = [];
                a.isSearchShow = !1
            });
            this.itemCount = 0;
            flipBook.clearSearchHighlight();
            singlePageBook.clearSearchHighlight();
            zoomBook.clearSearchHighlight()
        }
    },
    showForm: function() {
        var a = this;
        this.formBackground.animate({
                left: 10
            },
            400,
            function() {
                a.textField.focus();
                a.isSearchShow = !0
            });
        if ($("#preSearch")) {
            var b = $("#preSearch").val();
            "" != b && void 0 != b && (this.textField.val(b), this.search(b))
        }
    },
    onResizeA: function(a, b) {
        this.width = 100 > a ? 100 : a;
        this.height = 100 > b ? 100 : b;
        this.formBackground.css({
            width: this.width + this.formConfig.scrollbarWidth + "px",
            height: this.height + "px"
        });
        this.background.css({
            width: this.width + "px",
            height: this.height + "px"
        });
        this.titleBox.css({
            width: this.width + "px"
        });
        this.contentBox.css({
            width: this.width + this.formConfig.scrollbarWidth +
                "px",
            height: this.height - $(this.titleBox).height() + "px"
        });
        this.searchItemsBox.css({
            width: this.width + this.formConfig.scrollbarWidth + "px",
            height: this.height - this.titleHeight - this.textContentHeight - this.resultContentHeight - 5 + "px",
            top: this.textContentHeight + this.resultContentHeight + 3 + "px"
        });
        this.searchScrollBox.css({
            width: this.width + this.formConfig.scrollbarWidth + "px",
            height: this.height - this.titleHeight - this.textContentHeight - this.resultContentHeight - 5 + "px",
            top: this.textContentHeight + this.resultContentHeight +
                3 + "px"
        });
        this.searchScrollBac.css({
            width: this.width + "px",
            height: this.height - this.titleHeight - this.textContentHeight - this.resultContentHeight - 5 + "px",
            top: this.textContentHeight + this.resultContentHeight + 3 + "px"
        });
        this.textContent.css({
            width: this.width + "px",
            height: this.textContentHeight + "px",
            top: "0px",
            left: "0px"
        });
        this.resultContent.css({
            width: this.width + "px",
            height: this.resultContentHeight + "px",
            top: this.textContentHeight + 1 + "px",
            left: "0px"
        })
    },
    onResize: function(a, b) {
        this.width = 100 > a ? 100 : a;
        this.height = 100 >
            b ? 100 : b;
        this.setWidth(a);
        this.setHeight(b);
        this.formBackground.css({
            left: (this.isSearchShow ? 10 : -(this.width + this.formConfig.scrollbarWidth) - 20) + "px"
        });
        var c = a - this.textPadding - this.buttonAreaWidth;
        this.searchItemsBox.css({
            width: this.width + this.formConfig.scrollbarWidth + "px",
            height: this.height - this.titleHeight - this.textContentHeight - this.resultContentHeight - 5 + "px",
            top: this.textContentHeight + this.resultContentHeight + 3 + "px"
        });
        this.searchScrollBac.css({
            width: this.width + "px",
            height: this.height - this.titleHeight -
                this.textContentHeight - this.resultContentHeight - 5 + "px",
            top: this.textContentHeight + this.resultContentHeight + 3 + "px"
        });
        this.searchScrollBox.css({
            width: this.width + this.formConfig.scrollbarWidth + "px",
            height: this.height - this.titleHeight - this.textContentHeight - this.resultContentHeight - 5 + "px",
            top: this.textContentHeight + this.resultContentHeight + 3 + "px"
        });
        this.textContent.css({
            width: this.width + "px",
            height: this.textContentHeight + "px",
            top: "0px",
            left: "0px"
        });
        this.resultContent.css({
            width: this.width + "px",
            height: this.resultContentHeight +
                "px",
            top: this.textContentHeight + 1 + "px",
            left: "0px"
        });
        this.textField.css({
            width: c + "px"
        });
        this.searchButton.css({
            width: 36,
            height: 36,
            position: "absolute"
        });
        this.searchButton.css({
            right: 8 + this.formConfig.scrollbarWidth + "px",
            top: (this.textContentHeight - 36) / 2 + "px"
        });
        for (c = 0; c < this.itemArr.length; c++) this.itemArr[c].onResize(this.width, 85)
    },
    correctPosition: function(a) {
        this.formBackground.offset().left + 290 > a && this.formBackground.css({
            left: a - 320 + "px"
        })
    },
    isSearchShow: !1
});

function shareButton(a, b) {
    this.config = $.extend({
        iconURL: "",
        caption: "",
        link: ""
    }, b);
    this.bg = $("<div></div>");
    this.icon = $("<img />");
    this.caption = new label(this.config.caption, this.bg);
    this.width = 200;
    this.height = 40;
    this.bg.css({
        position: "absolute",
        width: this.width + "px",
        height: this.height + "px",
        "-webkit-border-radius": "6px",
        "-moz-border-radius": "6px",
        "-o-border-radius": "6px",
        "-ms-border-radius": "6px",
        "border-radius": "6px",
        "background-color": "#666666"
    });
    this.icon.attr({
        src: this.config.iconURL
    });
    this.icon.css({
        position: "absolute",
        left: "5px",
        top: "-7px"
    });
    a.append(this.bg);
    this.bg.append(this.icon);
    this.caption.setLabelPosition(40, 10);
    this.initEvent()
}
shareButton.prototype.onResize = function(a, b) {
    this.bg.css({
        width: a + "px",
        height: b + "px"
    })
};
shareButton.prototype.initEvent = function() {
    this.bg.css({
        cursor: "pointer"
    });
    var a = this;
    this.bg.bind(_event._down, function() {
        window.open(a.config.link, "_blank")
    })
};
shareButton.prototype.setPosition = function(a, b) {
    this.bg.css({
        left: a + "px",
        top: b + "px"
    })
};

function shareForm(a, b) {
    form.call(this, a, b);
    this.visible = !1;
    this.addItem();
    this.setButtonPos();
    this.background.css({
        left: -windowWidth / 2 - 20 + "px",
        overflow: "hidden"
    })
}
$.extend(shareForm.prototype, form.prototype);
shareForm.prototype.addItem = function() {
    var a = window.location.href,
        b = window.document.title,
        c = window.location.pathname,
        c = c.substring(0, c.lastIndexOf("/")) + "/files/thumb/1.jpg",
        a = "?&url=" + a + "&title=" + b + "&description=" + bookDescription + "&screenshot=" + c,
        b = {
            iconURL: uiBaseURL + "facebook.png",
            caption: "Facebook",
            link: "http://api.addthis.com/oexchange/0.8/forward/facebook/offer" + a
        },
        c = {
            iconURL: uiBaseURL + "google.png",
            caption: "Google+",
            link: "http://api.addthis.com/oexchange/0.8/forward/igoogle/offer" + a
        },
        d = {
            iconURL: uiBaseURL +
                "myspace.png",
            caption: "MySpace",
            link: "http://api.addthis.com/oexchange/0.8/forward/myspace/offer" + a
        },
        e = {
            iconURL: uiBaseURL + "twitter.png",
            caption: "Twitter",
            link: "http://api.addthis.com/oexchange/0.8/forward/twitter/offer" + a
        },
        f = {
            iconURL: uiBaseURL + "digg.png",
            caption: "Digg",
            link: "http://api.addthis.com/oexchange/0.8/forward/digg/offer" + a
        },
        j = {
            iconURL: uiBaseURL + "more.png",
            caption: "More",
            link: "http://api.addthis.com/oexchange/0.8/offer" + a
        };
    this.emailButton = new shareButton(this.contentBox, {
        iconURL: uiBaseURL +
            "email.png",
        caption: "Email",
        link: "http://api.addthis.com/oexchange/0.8/forward/email/offer" + a
    });
    this.fbButton = new shareButton(this.contentBox, b);
    this.ggButton = new shareButton(this.contentBox, c);
    this.msButton = new shareButton(this.contentBox, d);
    this.twButton = new shareButton(this.contentBox, e);
    this.diggButton = new shareButton(this.contentBox, f);
    this.moreButton = new shareButton(this.contentBox, j)
};
shareForm.prototype.onResize = function(a, b) {
    this.width = 100 > a ? 100 : a;
    this.height = 100 > b ? 100 : b;
    this.background.css({
        width: this.width + "px",
        height: this.height + "px",
        left: this.visible ? "0px" : -this.width - 20 + "px"
    });
    this.titleBox.css({
        width: this.width + "px"
    });
    this.contentBox.css({
        width: this.width + "px",
        height: this.height - this.titleBox.height() + "px"
    });
    this.emailButton.onResize(this.width / 2 - 20, 40);
    this.fbButton.onResize(this.width / 2 - 20, 40);
    this.ggButton.onResize(this.width / 2 - 20, 40);
    this.msButton.onResize(this.width /
        2 - 20, 40);
    this.twButton.onResize(this.width / 2 - 20, 40);
    this.diggButton.onResize(this.width / 2 - 20, 40);
    this.moreButton.onResize(this.width / 2 - 20, 40);
    this.setButtonPos()
};
shareForm.prototype.setButtonPos = function() {
    this.emailButton.setPosition(5, 10);
    this.fbButton.setPosition(this.width / 2, 10);
    this.ggButton.setPosition(5, 68);
    this.msButton.setPosition(this.width / 2, 68);
    this.twButton.setPosition(5, 126);
    this.diggButton.setPosition(this.width / 2, 126);
    this.moreButton.setPosition(5, 184)
};
shareForm.prototype.show = function() {
    var a = this;
    this.background.animate({
        left: 0
    }, 400, function() {
        a.visible = !0;
        window.setTimeout(function() {
            a.background.css({
                left: "0px"
            })
        }, 100)
    })
};
shareForm.prototype.hide = function() {
    var a = this;
    this.background.animate({
        left: -(this.width + 20)
    }, 400, function() {
        a.visible = !1;
        window.setTimeout(function() {
            a.background.css({
                left: -(this.width + 20) + "px"
            })
        }, 100)
    })
};
shareForm.prototype.closeForm = function() {
    this.hide()
};

function bookMarkTab(a, b, c, d) {
    this.fnShow = b;
    this.fnHide = c;
    this.maxWidth = d ? d : 300;
    this.config = $.extend({
        caption: "",
        color: "#888"
    }, a);
    if (this.config.pageIndex && !("" == this.config.caption || this.config.pageIndex > originTotalPageCount)) this.bg = $("<div></div>"), this.caption = new label(this.config.caption, this.bg), this.width = this.caption.getWidth() + 30, this.width = this.width > this.maxWidth ? this.maxWidth : this.width, this.height = 60, this.hiding = this.showing = !1, this.bg.css({
        color: "#EEEEEE",
        "font-family": "arial,tahoma,sans-serif",
        "font-size": "12px",
        position: "absolute",
        width: this.width + "px",
        height: this.height + "px",
        "background-color": this.config.color,
        border: "1px solid " + colorDiv(this.config.color, 10),
        cursor: "pointer"
    }), this.bg.append(this.caption), this.caption.setLabelPosition(5, 8), this.initEvent()
}
bookMarkTab.prototype.resize = function(a, b) {
    a > this.maxWidth && (a = this.maxWidth);
    this.width = a;
    this.height = b;
    this.bg.css({
        width: a + "px",
        height: b + "px"
    })
};
bookMarkTab.prototype.setPosition = function(a, b, c) {
    c ? this.bg.css({
        top: b + "px",
        right: a + "px",
        left: "auto"
    }) : this.bg.css({
        top: b + "px",
        left: a + "px",
        right: "auto"
    })
};
bookMarkTab.prototype.show = function() {
    if (!this.showing) {
        this.showing = !0;
        var a = this;
        this.bg.animate({
            top: 0
        }, 150, function() {
            a.showing = !1
        })
    }
};
bookMarkTab.prototype.hide = function() {
    if (!this.hiding) {
        this.hiding = !0;
        var a = this;
        this.bg.animate({
            top: 30
        }, 150, function() {
            a.hiding = !1
        })
    }
};
bookMarkTab.prototype.setMaxWidth = function(a) {
    this.maxWidth = a;
    this.resize(this.width, this.height)
};
bookMarkTab.prototype.getWidth = function() {
    return this.width
};
bookMarkTab.prototype.initEvent = function() {
    var a = this;
    this.bg.bind("mouseover", function() {
        a.show()
    });
    this.bg.bind("mouseleave", function() {
        a.hide()
    });
    this.bg.bind(_event._down, function() {
        gotoPageFun(a.config.pageIndex)
    })
};

function tabBox(a) {
    this.tabArray = [];
    this.bg = $("<div></div>");
    this.width = 400;
    this.height = 60;
    this.tipBoxHeight = this.tipBoxWidth = 70;
    this.bg.css({
        position: "absolute",
        width: this.width + "px",
        height: this.height + "px",
        overflow: "hidden",
        "z-index": 20,
        "font-family": "arial,tahoma,sans-serif",
        "font-size": "12px"
    });
    a.append(this.bg)
}
tabBox.prototype.resize = function(a, b, c) {
    this.width = a;
    this.height = b;
    this.bg.css({
        width: this.width + "px",
        height: this.height + "px"
    });
    this.setTabPosition(c)
};
tabBox.prototype.setPosition = function(a, b) {
    this.bg.css({
        left: a + "px",
        top: b + "px"
    })
};
tabBox.prototype.rotate = function(a) {
    a = rotate(a);
    this.bg.css({
        "-webkit-transform-origin": "0% 0%",
        "-moz-transform-origin": "0% 0%",
        "-ms-transform-origin": "0% 0%",
        "-o-transform-origin": "0% 0%",
        "-webkit-transform": a,
        "-moz-transform": a,
        "-ms-transform": a,
        "-o-transform": a
    })
};
tabBox.prototype.show = function() {
    this.bg.css({
        display: "block"
    })
};
tabBox.prototype.hide = function() {
    this.bg.css({
        display: "none"
    })
};
tabBox.prototype.setItem = function(a) {
    this.tabArray = a || [];
    this.setTabPosition()
};
tabBox.prototype.initItem = function(a) {
    for (var b = 0; b < this.tabArray.length; b++) this.bg.append(this.tabArray[b].bg);
    this.setTabPosition(a)
};
tabBox.prototype.setTabPosition = function(a) {
    for (var b = 0, c = 0, d = 0; d < this.tabArray.length; d++) b += this.tabArray[d].getWidth(), this.bg.append(this.tabArray[d]);
    if (b <= this.width)
        for (b = 0; b < this.tabArray.length; b++) this.tabArray[b].setPosition(c, 30, a), c = c + this.tabArray[b].getWidth() + 2;
    else
        for (d = 0; d < this.tabArray.length; d++) this.tabArray[d].setPosition(c, 30, a), c += this.tabArray[d].getWidth() * this.width / b
};

function initBookMarkTab(a, b) {
    this.isRight = b;
    this.tabArray = [];
    this.leftBox = new tabBox(a);
    this.rightBox = new tabBox(a);
    this.leftTabArr = [];
    this.rightTabArr = [];
    this.tipBox = $("<div></div>");
    this.tipImg = $("<img />");
    this.tipLabel = new label("page 1", this.tipBox);
    a.append(this.tipBox);
    this.tipBox.append(this.tipImg);
    this.tipBoxHeight = this.tipBoxWidth = 70;
    this.tipBox.css({
        width: this.tipBoxWidth + "px",
        height: this.tipBoxHeight + "px",
        position: "absolute",
        left: (windowWidth - this.tipBoxWidth) / 2 + "px",
        top: (windowHeight -
            this.tipBoxHeight) / 2 - 200 + "px",
        opacity: 0,
        "z-index": 10
    });
    this.tipImg.attr({
        src: ""
    });
    this.tipLabel.setLabelPosition(5, this.tipBoxHeight - 25);
    0 != bmtConfig.length && (this.setPosition(), this.initItem())
}
initBookMarkTab.prototype.resize = function(a, b) {
    this.leftBox.resize(a, b, !0);
    this.rightBox.resize(a, b, !1);
    this.setPosition()
};
initBookMarkTab.prototype.setPosition = function() {
    this.leftBox.setPosition(-60, flipBook.height);
    this.rightBox.setPosition(flipBook.width + 60, 0);
    this.leftBox.rotate(-90);
    this.rightBox.rotate(90)
};
initBookMarkTab.prototype.initItem = function() {
    for (var a = 0; a < bmtConfig.length; a++) this.tabArray.push(new bookMarkTab(bmtConfig[a], this.showTipBox, this.hideTipBox));
    this.isRight ? (this.leftBox.tabArray = this.tabArray, this.leftBox.initItem(!0)) : (this.rightBox.tabArray = this.tabArray, this.rightBox.initItem(!1))
};
initBookMarkTab.prototype.showTipBox = function(a) {
    this.tipLabel.setCaption("page " + a);
    this.tipBox.animate({
        opacity: 1,
        top: (windowHeight - this.tipBoxHeight) / 2
    }, {
        duration: 300
    })
};
initBookMarkTab.prototype.hideTipBox = function() {
    var a = this,
        b = (windowHeight - this.tipBoxHeight) / 2 - 200;
    this.tipBox.animate({
        opacity: 0
    }, 300, function() {
        a.tipBox.css({
            top: b + "px"
        })
    })
};
initBookMarkTab.prototype.separated = function(a) {
    this.leftTabArr = [];
    this.rightTabArr = [];
    if (this.isRight)
        for (var b = 0; b < this.tabArray.length; b++) this.tabArray[b].config.pageIndex >= a ? this.leftTabArr.push(this.tabArray[b]) : this.rightTabArr.push(this.tabArray[b]);
    else
        for (b = 0; b < this.tabArray.length; b++) this.tabArray[b].config.pageIndex >= a ? this.rightTabArr.push(this.tabArray[b]) : this.leftTabArr.push(this.tabArray[b]);
    this.leftBox.tabArray = this.leftTabArr;
    this.rightBox.tabArray = this.rightTabArr;
    this.leftBox.initItem(!0);
    this.rightBox.initItem(!1)
};
initBookMarkTab.prototype.show = function() {
    this.leftBox.show();
    this.rightBox.show()
};
initBookMarkTab.prototype.hide = function() {
    this.leftBox.hide();
    this.rightBox.hide()
};

function treeNode(a, b) {
    this.config = $.extend({
        caption: "untitled",
        page: 0,
        width: 280,
        height: 35,
        backColor: bookConfig.bookmarkBackground,
        fontColor: bookConfig.bookmarkFontColor,
        level: 0,
        padding: 10
    }, a);
    var c = this;
    this.background = $('<div style="position:relative; overflow : hidden;"></div>');
    this.contentBox = $('<div style="position:absolute;"></div>');
    this.textField = new label(this.config.caption, this.contentBox);
    this.expandButton = new button(1, this.contentBox, {
        iconURL: uiBaseURL + "closed.png"
    }, !1, !0);
    this.children = [];
    this.opened = this.hasChild = !1;
    this.totalHeight = 0;
    this.showing = !1;
    this.textField.shortWord(25);
    this.isDrag = !1;
    this.expandButton.setVisible(!1);
    $(b).append(this.background);
    $(this.background).append(this.contentBox);
    this.expandButton.setButtonPosition(-10, 0);
    this.textField.setLabelPosition(13, 10);
    var d = this.config.width - 2 * this.config.padding;
    $(this.contentBox).css({
        width: d + "px",
        height: this.config.height + "px",
        color: this.config.fontColor,
        left: 12 * Math.max(this.config.level, 0) + 5 + "px",
        cursor: "pointer",
        "font-family": "arial,tahoma,sans-serif",
        "font-size": "12px"
    });
    $(this.background).css({
        width: d + "px",
        height: this.config.height + "px",
        left: +this.config.padding + "px",
        top: +this.config.padding + "px",
        "background-color": this.config.backColor,
        "-moz-border-radius": "5px",
        "-webkit-border-radius": "5px",
        "border-radius": "5px",
        "border-left": "0px solid #CCCCCC",
        "border-right": "0px solid #CCCCCC",
        "border-bottom": "0px solid #CCCCCC",
        "font-family": "arial,tahoma,sans-serif",
        "font-size": "12px"
    });
    this.fontColor = bookConfig.bookmarkFontColor;
    this.downBackColor = this.config.backColor;
    this.textShadow = "";
    this.expandButton.onMouseUp(this, this.onExpand);
    $(this.contentBox).bind(_event._down, function() {
        isBookmarkDrag || gotoPageFun(c.config.page);
        var a = colorAdd(c.config.backColor, 50);
        $(c.background).css({
            "background-color": a
        });
        $(c.contentBox).css({
            color: "#8c97cb"
        });
        $(c.contentBox).css({
            "text-shadow": "0 0 30px #8c97cb, 0 0 70px #8c97cb"
        })
    });
    $(this.background).bind(_event._enter, function() {
        var a = colorAdd(c.config.backColor, 50);
        $(c.background).css({
            "background-color": a
        });
        $(c.contentBox).css({
            color: "#8c97cb"
        });
        $(c.contentBox).css({
            "text-shadow": "0 0 30px #8c97cb, 0 0 70px #8c97cb"
        })
    });
    $(this.background).bind(_event._end, function() {
        $(c.background).css({
            "background-color": c.downBackColor
        });
        $(c.contentBox).css({
            color: c.fontColor
        });
        $(c.contentBox).css({
            "text-shadow": c.textShadow
        })
    });
    $(this.background).bind(_event._leave, function() {
        $(c.background).css({
            "background-color": c.downBackColor
        });
        $(c.contentBox).css({
            color: c.fontColor
        });
        $(c.contentBox).css({
            "text-shadow": c.textShadow
        })
    })
}
treeNode.prototype.setBorderTop = function() {
    $(this.background).css("border-top", "0px solid #CCCCCC")
};
treeNode.prototype.setButtonVisible = function(a) {
    this.expandButton.setVisible(a)
};
treeNode.prototype.setHasChildren = function(a) {
    (this.hasChild = a) && $(this.contentBox).css({
        "font-weight": "bold"
    })
};
treeNode.prototype.setVisible = function(a) {
    $(this.background).css({
        display: a ? "block" : "none"
    })
};
treeNode.prototype.getIsExpand = function() {
    return this.opened
};
treeNode.prototype.setIsExpand = function(a) {
    this.opened = a
};
treeNode.prototype.getBackground = function() {
    return this.background
};
treeNode.prototype.getWidth = function() {
    return this.config.width
};
treeNode.prototype.getHeight = function() {
    return this.config.height
};
treeNode.prototype.setCaption = function(a) {
    this.config.caption = a
};
treeNode.prototype.setColor = function() {};
treeNode.prototype.setPosition = function(a, b, c) {
    void 0 == c && (c = ["left", "top"]);
    $(this.background).css(c[0], a + "px");
    $(this.background).css(c[1], b + "px")
};
treeNode.prototype.onResize = function(a, b) {
    this.config.width = a + 13;
    b && (this.config.height = b);
    this.background.css({
        width: this.config.width - this.config.padding + "px",
        height: this.config.height + "px"
    })
};
treeNode.prototype.getTotalHeight = function() {
    return this.totalHeight
};
treeNode.prototype.expand = function() {
    if (this.hasChild) {
        this.expandButton.changeIcon(uiBaseURL + "opened.png");
        for (var a = 0; a < this.children.length; a++) this.children[a].setVisible(!0), this.children[a].getIsExpand() ? this.children[a].expand() : this.children[a].bookMarkEnter();
        $(this.contentBox).css({
            color: bookConfig.bookmarkFontColor
        });
        this.fontColor = bookConfig.bookmarkFontColor;
        this.downBackColor = this.config.backColor;
        this.textShadow = ""
    } else this.expandButton.changeIcon(uiBaseURL + "bookMarkEnter.png")
};
treeNode.prototype.bookMarkEnter = function() {
    this.hasChild || this.expandButton.changeIcon(uiBaseURL + "bookMarkEnter.png")
};
treeNode.prototype.collapse = function() {
    if (this.hasChild) {
        this.expandButton.changeIcon(uiBaseURL + "closed.png");
        for (var a = 0; a < this.children.length; a++) this.children[a].setVisible(!1), this.children[a].collapse();
        $(this.contentBox).css({
            color: bookConfig.bookmarkFontColor
        });
        this.fontColor = bookConfig.bookmarkFontColor;
        this.downBackColor = this.config.backColor;
        this.textShadow = ""
    }
};
treeNode.prototype.onExpand = function() {
    this.opened ? this.collapse() : this.expand();
    this.opened = !this.opened;
    $(this.background).css({
        "background-color": this.config.backColor
    })
};
treeNode.prototype.addChildren = function(a) {
    this.children.push(a)
};
treeNode.prototype.addNode = function(a) {
    this.children.push(new treeNode(a, this.background))
};
treeNode.prototype.deleteNode = function() {};
treeNode.prototype.getPageIndex = function() {
    return this.config.page
};
var isBookmarkDrag = !1;

function tableContent(a, b) {
    form.call(this, a, b);
    this.scrollMask = $('<div style = "position : absolute;"></div>');
    this.scrollBox = $('<div style = "position : absolute; width : 190px; height : 300px; overflow-y : auto;"></div>');
    this.scrollMouseDown = !1;
    this.mouseDownY = -1;
    this.height = this.width = 200;
    this.showing = !1;
    this.itemArr = [];
    $(this.contentBox).append(this.scrollMask);
    $(this.contentBox).append(this.scrollBox);
    this.closeForm();
    this.captionBox.setFont("12px", "#cccccc", "arial");
    this.captionBox.setCaption("<strong>Table of Content</strong>");
    this.initScrollEvent();
    try {
        this.addContent(ols, !1)
    } catch (c) {
        $("#btnBookmark").css({
            display: "none"
        }), bookmarkButtonEnable = !1
    }
    var d = windowWidth / 4 + this.formConfig.scrollbarWidth,
        d = Math.max(300, d);
    this.formBackground.css({
        opacity: 1,
        "z-index": 99,
        top: "10px",
        left: -d - 20 + "px",
        width: "200px"
    });
    this.scrollMask.css({
        "border-top": "1px solid " + colorAdd(bookConfig.bookmarkBackground, 40)
    });
    this.captionBox.setFontSize(16)
}
$.extend(tableContent.prototype, form.prototype);
tableContent.prototype.addContent = function(a, b, c) {
    for (var d = 0; d < a.length; d++) {
        var e = new treeNode(a[d], this.scrollBox);
        this.itemArr.push(e);
        !b && 0 == d && e.setBorderTop();
        b && (c.addChildren(e), e.setVisible(!1));
        1 <= a[d].children.length ? (e.setButtonVisible(!0), e.setHasChildren(!0), this.addContent(a[d].children, !0, e)) : (e.setButtonVisible(!0), e.bookMarkEnter())
    }
};
tableContent.prototype.onResize = function(a, b) {
    this.width = 100 > a ? 100 : a;
    this.height = 100 > b ? 100 : b;
    this.showing || this.formBackground.css({
        left: -(this.width + this.formConfig.scrollbarWidth + 20) + "px"
    });
    this.setWidth(a);
    this.setHeight(b);
    $(this.scrollMask).css({
        width: this.width + "px",
        height: this.height - this.titleBox.height() + "px"
    });
    $(this.scrollBox).css({
        width: this.width + this.formConfig.scrollbarWidth + "px",
        height: this.height - this.titleBox.height() - 15 + "px",
        top: "1px"
    });
    for (var c = 0; c < this.itemArr.length; c++) this.itemArr[c].onResize(this.width -
        30)
};
tableContent.prototype.showForm = function() {
    var a = this;
    this.formBackground.animate({
        left: 10
    }, 400, function() {
        a.showing = !0
    })
};
tableContent.prototype.closeForm = function() {
    var a = this,
        b = windowWidth / 4 + this.formConfig.scrollbarWidth,
        b = Math.max(300, b);
    this.formBackground.animate({
        left: -b - 20
    }, 400, function() {
        a.showing = !1
    })
};
tableContent.prototype.getShowStatu = function() {
    return this.showing
};
tableContent.prototype.setShowStatu = function(a) {
    this.showing = a
};
tableContent.prototype.setPosition = function(a, b, c) {
    void 0 == c && (c = ["left", "top"]);
    $(this.formBackground).css(c[0], a + "px");
    $(this.formBackground).css(c[1], b + "px")
};
tableContent.prototype.initScrollEvent = function() {
    var a = this;
    $(this.scrollBox).bind(_event._down, function(b) {
        a.scrollMouseDown = !0;
        isBookmarkDrag = !1;
        b = isTouch ? b.originalEvent.touches : [b];
        a.mouseDownY = b[0].pageY;
        3 == browserType ? event.cancelBubble = !0 : event.stopPropagation()
    });
    $(this.scrollBox).bind(_event._move, function(b) {
        a.scrollMouseDown && (b = isTouch ? b.originalEvent.touches : [b], Math.abs(a.mouseDownY - b[0].pageY))
    });
    $(this.scrollBox).bind(_event._end, function() {
        a.scrollMouseDown = !1
    })
};

function thumbnailCell(a) {
    this.background = $("<div></div>");
    this.img = $("<img />");
    this.imgBac = $("<div></div>");
    this.pageIndex = -1;
    this.width = 108;
    this.height = 151;
    this.imgHeight = this.imgWidth = -1;
    $(a).append(this.background);
    $(this.background).css({
        position: "absolute",
        width: this.width + "px",
        height: this.height + "px"
    });
    $(this.imgBac).append(this.img);
    $(this.imgBac).css({
        position: "absolute"
    });
    $(this.imgBac).css({
        "-webkit-box-shadow": "0 0 5px rgba(40, 0, 0, 1)",
        "-moz-box-shadow": "0 0 5px rgba(40, 0, 0, 1)",
        "-o-box-shadow": "0 0 5px rgba(40, 0, 0, 1)",
        "box-shadow": "0 0 5px rgba(40, 0, 0, 1)"
    });
    this.textHeight = 30;
    this.textWidth = 64;
    this.pageTextField = $("<div class='numbering'></div>");
    this.pageTextField.css({
        color: "#ffffff",
        background: "#000000",
        "font-size": "18px",
        opacity: 0.7
    });
    this.pageTextField.css({
        "text-align": "center",
        "vertical-align": "middle"
    });
    this.pageTextField.css({
        "border-radius": "5px"
    });
    this.pageTextField.css({
        width: this.textWidth + "px",
        height: this.textHeight + "px",
        "line-height": this.textHeight +
            "px",
        position: "absolute"
    });
    this.pageTextField.css({
        left: (this.width - this.textWidth) / 2 + "px",
        bottom: "5px"
    });
    this.pageTextField.css({
        display: "none"
    });
    $(this.background).css({
        "text-shadow": "0 0 10px #8c97cb, 0 0 20px #8c97cb,0 0 30px #8c97cb, 0 0 40px #8c97cb,0 0 50px #8c97cb, 0 0 60px #8c97cb"
    });
    $(this.pageTextField).css({
        "-webkit-box-shadow": "0 0 10px #8c97cb",
        "-moz-box-shadow": "0 0 10px #8c97cb",
        "-o-box-shadow": "0 0 10px #8c97cb",
        "box-shadow": "0 0 10px #8c97cb"
    })
}
thumbnailCell.prototype.getPageIndex = function() {
    return this.pageIndex
};
thumbnailCell.prototype.getWidth = function() {
    return this.width
};
thumbnailCell.prototype.getHeight = function() {
    return this.height
};
thumbnailCell.prototype.setPosition = function(a, b, c) {
    void 0 == c && (c = ["left", "top"]);
    $(this.background).css(c[0], a + "px");
    $(this.background).css(c[1], b + "px")
};
thumbnailCell.prototype.onResize = function(a, b) {
    $(this.background).css({
        width: a + "px",
        height: b + "px"
    });
    this.onResizeImage(a, b)
};
thumbnailCell.prototype.onResizeImage = function() {
    var a = getPageWidthHeight(this.width, this.height, zoomPageWidth, zoomPageHeight);
    this.imgWidth = a.x;
    this.imgHeight = a.y;
    $(this.img).css({
        width: a.x + "px",
        height: a.y + "px"
    });
    $(this.imgBac).css({
        width: a.x + "px",
        height: a.y + "px"
    });
    $(this.imgBac).css({
        left: (this.width - a.x) / 2 + "px",
        top: (this.height - a.y) / 2 + "px"
    })
};
thumbnailCell.prototype.setImgPosition = function(a) {
    switch (a) {
        case "l":
            $(this.imgBac).css({
                left: "0px",
                right: "auto"
            });
            break;
        case "r":
            $(this.imgBac).css({
                right: "0px",
                left: "auto"
            });
            break;
        case "c":
            $(this.imgBac).css({
                left: (this.width - this.imgWidth) / 2 + "px",
                right: "auto"
            })
    }
};
thumbnailCell.prototype.setCaption = function() {};
thumbnailCell.prototype.fillImage = function(a) {
    this.pageIndex = a;
    $(this.img).attr("src", getPageDir(a, "thumb"));
    $(this.background).append(this.imgBac);
    $(this.imgBac).append(this.img);
    this.onResizeImage(this.width, this.height);
    $(this.background).append(this.pageTextField);
    this.pageTextField.html("<b>" + a + "</b>")
};
thumbnailCell.prototype.showBorder = function() {
    $(this.background).css({
        border: "1px solid #444444"
    })
};
thumbnailCell.prototype.hideBorder = function() {
    $(this.background)[0].style.border = ""
};
thumbnailCell.prototype.getTextField = function() {
    return this.pageTextField
};
thumbnailCell.prototype.hideTextField = function() {
    this.pageTextField.setCSS({
        display: "none"
    })
};
thumbnailCell.prototype.showTextField = function(a) {
    var b = this;
    this.background.bind(_event._enter, function() {
        b.pageTextField.css({
            display: a
        })
    });
    this.background.bind(_event._down, function() {
        b.pageTextField.css({
            display: a
        })
    });
    this.background.bind(_event._end, function() {
        b.pageTextField.css({
            display: "none"
        })
    });
    this.background.bind(_event._leave, function() {
        b.pageTextField.css({
            display: "none"
        })
    })
};
thumbnailCell.prototype.showCell = function(a) {
    $(this.background).css({
        display: a ? "block" : "none"
    })
};
thumbnailCell.prototype.onMouseUp = function(a, b) {
    var c = this;
    $(this.background).bind(_event._end, function() {
        b.call(a, c)
    });
    $(this.background).bind(_event._enter, function() {
        c.background.css({
            cursor: "pointer"
        })
    })
};
thumbnailCell.prototype.highLight = function() {
    $(this.background).css({
        border: "2px solid #ff8040"
    })
};
thumbnailCell.prototype.onMouseOver = function() {
    var a = this;
    $(this.background).css({
        border: ""
    });
    $(this.background).bind(_event._enter, function() {
        a.background.css({
            border: "2px solid #0080ff"
        })
    });
    $(this.background).bind(_event._leave, function() {
        a.background.css({
            border: ""
        })
    })
};
thumbnailCell.prototype.clearMouseOver = function() {
    var a = this;
    $(this.background).bind(_event._enter, function() {
        a.background.css({
            border: ""
        })
    });
    $(this.background).bind(_event._leave, function() {
        a.background.css({
            border: ""
        })
    })
};
thumbnailCell.prototype.onMouseOverUp = function() {
    var a = this;
    $(this.background).bind(_event._enter, function() {
        a.background.css({
            border: "2px solid #0080ff"
        })
    });
    $(this.background).bind(_event._leave, function() {
        a.background.css({
            border: "2px solid #ff8040"
        })
    })
};
thumbnailCell.prototype.clearHighLight = function() {
    $(this.background).css({
        border: ""
    })
};
var isThumbDrag = !1;

function thumbnailBar(a) {
    this.background = $("<div class='thumbBar'></div>");
    this.contentBox = $("<div class='thumbBG'></div>");
    this.contentBac = $("<div class='thumbBG'></div>");
    this.scrollBox = $("<div class='thumbBox'></div>");
    this.mouseDown = this.showing = !1;
    this.scrollBoxX = this.mouseDownX = -1;
    this.width = 800;
    this.height = 230;
    this.contentHeight = 151;
    this.mainColor = "#888888";
    this.thumbArray = [];
    this.lastMoveTime = this.lastMoveX = -1;
    this.mergeing = this.moveLeft = !1;
    $(this.contentBac).css({
        background: bookConfig.thumbnailColor
    });
    isNaN(bookConfig.thumbnailAlpha) ||
        "" == bookConfig.thumbnailAlpha || null == bookConfig.thumbnailAlpha || void 0 == bookConfig.thumbnailAlpha ? $(this.contentBac).css({
            opacity: 0.3
        }) : $(this.contentBac).css({
            opacity: bookConfig.thumbnailAlpha / 100
        });
    $(this.contentBox).css({
        "-webkit-box-shadow": "0 0 5px rgba(40, 0, 0, 0.8)",
        "-moz-box-shadow": "0 0 5px rgba(40, 0, 0, 0.8)",
        "-o-box-shadow": "0 0 5px rgba(40, 0, 0, 0.8)",
        "box-shadow": "0 0 5px rgba(40, 0, 0, 0.8)"
    });
    this.background.css({
        height: this.height + "px",
        bottom: (windowHeight - this.height) / 2 + "px"
    });
    this.contentBox.css({
        height: this.height - 10 + "px"
    });
    this.contentBac.css({
        height: this.height - 10 + "px"
    });
    this.scrollBox.css({
        height: this.contentHeight + "px",
        top: (this.height - 10 - this.contentHeight) / 2 + "px"
    });
    $(a).append(this.background);
    $(this.background).append(this.contentBac);
    $(this.background).append(this.contentBox);
    $(this.contentBox).append(this.scrollBox);
    this.contentBox.css({
        "border-top": "1px solid #ffffff"
    });
    this.contentBox.css({
        "border-bottom": "1px solid #ffffff"
    });
    this.closeButton = new button(1,
        this.contentBox, {
            iconURL: uiBaseURL + "close.png"
        }, !0);
    this.closeButton.setButtonPosition(35, 0, ["right", "top"]);
    this.addItem();
    this.initEvent();
    this.setHighLight(1);
    this.currentCellIndex = 1;
    this.fillNearByImages(0);
    this.background.css({
        display: "none"
    })
}
thumbnailBar.prototype.onResize = function() {
    var a = $(this.background).width(),
        b = $(this.scrollBox).width();
    if (a > b) $(this.scrollBox).css({
        left: (a - b) / 2 + "px"
    });
    else {
        var c = $(this.scrollBox).offset().left;
        0 < c && (c = 0);
        c < a - b && (c = a - b);
        $(this.scrollBox).css({
            left: c + "px"
        })
    }
    this.background.css({
        height: this.height + "px",
        bottom: (windowHeight - this.height) / 2 + "px"
    })
};
thumbnailBar.prototype.setPosition = function(a, b, c) {
    void 0 == c && (c = ["left", "top"]);
    $(this.background).css(c[0], a + "px");
    $(this.background).css(c[1], b + "px")
};
thumbnailBar.prototype.addItem = function() {
    for (var a = 0; a <= originTotalPageCount;) {
        var b = 0 == a ? new thumbnailItem(this.scrollBox, 1) : new thumbnailItem(this.scrollBox, a);
        b.getWidth();
        b.setPosition(this.thumbArray.length * (b.getWidth() + 60) + 5, 5);
        this.thumbArray.push(b);
        a += 2
    }
    $(this.scrollBox).css({
        width: this.thumbArray.length * (b.getWidth() + 60) + 10 + "px"
    });
    this.mergeAll()
};
thumbnailBar.prototype.resetItemPosition = function() {
    for (var a = 0, b = 0; b < this.thumbArray.length; b++) {
        var c = this.thumbArray[b];
        0 == b ? (c.setPosition(5, 5), a = 170) : (c.setPosition(a, 5), a = a + c.getWidth() + 60)
    }
    $(this.scrollBox).css({
        width: a + "px"
    })
};
thumbnailBar.prototype.mergeAll = function() {
    if (!this.mergeing) {
        for (var a = 0; a < this.thumbArray.length; a++) this.thumbArray[a].merge();
        this.resetItemPosition();
        this.mergeing = !0
    }
};
thumbnailBar.prototype.fissionAll = function() {
    for (var a = 0; a < this.thumbArray.length; a++) this.thumbArray[a].fission();
    this.resetItemPosition();
    this.mergeing = !1
};
thumbnailBar.prototype.getShowStatu = function() {
    return this.showing
};
thumbnailBar.prototype.setShowStatu = function(a) {
    this.showing = a
};
thumbnailBar.prototype.showshow = function() {
    $(this.background).fadeIn(500);
    this.showing = !0;
    void 0 != leftShortcutButton && null != leftShortcutButton && leftShortcutButton.setShow(!1);
    void 0 != rightShortcutButton && null != rightShortcutButton && rightShortcutButton.setShow(!1)
};
thumbnailBar.prototype.hideBox = function() {
    $(this.background).fadeOut(500);
    this.showing = !1;
    void 0 != leftShortcutButton && null != leftShortcutButton && leftShortcutButton.setShow(!0);
    void 0 != rightShortcutButton && null != rightShortcutButton && rightShortcutButton.setShow(!0)
};
thumbnailBar.prototype.initEvent = function() {
    var a = this;
    this.background.bind(_event._down, function() {
        return !1
    });
    this.closeButton.onMouseUp(this, this.hideBox);
    $(this.contentBox).bind(_event._down, function(b) {
        a.mouseDown = !0;
        isThumbDrag = !1;
        b = isTouch ? b.originalEvent.touches : [b];
        a.mouseDownX = b[0].pageX;
        a.scrollBoxX = $(a.scrollBox).offset().left;
        return !1
    });
    $(this.contentBox).bind(_event._move, function(b) {
        if (a.mouseDown) {
            var b = isTouch ? b.originalEvent.touches : [b],
                c = a.mouseDownX - b[0].pageX;
            20 < Math.abs(c) && (isThumbDrag = !0);
            $(a.background).width() > $(a.scrollBox).width() || (c = a.scrollBoxX - c, 0 < c && (c = 0), c < $(a.background).width() - $(a.scrollBox).width() && (c = $(a.background).width() - $(a.scrollBox).width()), $(a.scrollBox).css({
                left: c + "px"
            }), a.moveLeft = a.lastMoveX > b[0].pageX ? !0 : !1, a.lastMoveX = b[0].pageX, a.lastMoveTime = (new Date).getTime())
        }
    });
    $(this.contentBox).bind(_event._end, function() {
        a.mouseDown = !1;
        if (100 > (new Date).getTime() - a.lastMoveTime && -1 != a.lastMoveTime) {
            var b = a.moveLeft ? -30 : 30;
            a.tweener($(a.scrollBox).offset().left,
                b, 10)
        }
    });
    $(this.contentBox).bind("mouseleave", function() {
        a.mouseDown = !1
    })
};
thumbnailBar.prototype.setHighLight = function(a) {
    this.currentCellIndex = a;
    var b = Math.floor(a / 2);
    if (!(a > originTotalPageCount))
        if (this.thumbArray[b].highLight(a), this.clearHighLight(b), $(this.background).width() > $(this.scrollBox).width()) $(this.scrollBox).css({
            left: ($(this.background).width() - $(this.scrollBox).width()) / 2 + "px"
        });
        else {
            var a = $(this.scrollBox).offset().left,
                c = $(this.background).width(),
                d = (b - 1) * (this.thumbArray[b].getWidth() + 60) + 75,
                b = this.thumbArray[b].getWidth();
            this.tweener(a, -(d + a - (c - b) /
                2) / 6, 6)
        }
};
thumbnailBar.prototype.clearHighLight = function(a) {
    for (var b = 0; b < this.thumbArray.length; b++) b != a && this.thumbArray[b].clearHighLight()
};
thumbnailBar.prototype.tweener = function(a, b, c) {
    var d = function(a, b) {
            for (var c = b / 2, d = (a - a / 4) / c, e = Array(b), f = 0; f < b; f++) e[f] = f < c ? a - (c - f) * d : a + (f - c + 1) * d;
            return e.reverse()
        }(b, c),
        e = a,
        f = 0,
        j = this,
        g = window.setInterval(function() {
            e += d[f];
            f++;
            f == c && (e = a + b * c);
            0 < e && (e = 0);
            e < $(j.background).width() - $(j.scrollBox).width() && (e = $(j.background).width() - $(j.scrollBox).width());
            $(j.scrollBox).css({
                left: e + "px"
            });
            f >= c && (window.clearInterval(g), j.fillNearByImages(e))
        }, 30)
};
thumbnailBar.prototype.fillNearByImages = function(a) {
    var b = Math.ceil(this.background.width() / 65) + 2;
    this.background.width() > this.scrollBox.width() ? (a = 0, b = originTotalPageCount + 1) : a = 0 == a ? 0 : a == this.background.width() - this.scrollBox.width() ? originTotalPageCount - b : this.currentCellIndex - Math.ceil(b / 2);
    for (var a = Math.ceil(a / 2), c, d = 0; d < Math.ceil(b / 2); d++) c = a + d, this.thumbArray[c] && this.thumbArray[c].addImage()
};

function thumbnailItem(a, b) {
    this.background = $("<div></div>");
    this.itemB = new thumbnailCell(this.background);
    this.itemA = new thumbnailCell(this.background);
    this.width = 216;
    this.height = 151;
    this.isMerge = this.isDoublePage = !0;
    this.pageIndex = b;
    this.fillImage = !1;
    this.mainColor = "#000000";
    var c = b + 1;
    this.textHeight = 34;
    this.textWidth = 94;
    this.textField = $("<div class='numbering'></div>");
    $(this.background).append(this.textField);
    this.textField.css({
        color: "#ffffff",
        background: "#000000",
        "font-size": "18px",
        opacity: 0.7
    });
    this.textField.css({
        "text-align": "center",
        "vertical-align": "middle"
    });
    this.textField.css({
        "border-radius": "5px"
    });
    this.textField.css({
        width: this.textWidth + "px",
        height: this.textHeight + "px",
        "line-height": this.textHeight + "px",
        position: "absolute"
    });
    this.textField.css({
        left: (this.width - this.textWidth) / 2 + "px",
        bottom: "5px"
    });
    this.textField.html("<b>" + b + "-" + c + "</b>");
    this.textField.css({
        display: "none"
    });
    $(this.background).css({
        "text-shadow": "0 0 10px #8c97cb, 0 0 20px #8c97cb,0 0 30px #8c97cb, 0 0 40px #8c97cb,0 0 50px #8c97cb, 0 0 60px #8c97cb"
    });
    $(this.textField).css({
        "-webkit-box-shadow": "0 0 10px #8c97cb",
        "-moz-box-shadow": "0 0 10px #8c97cb",
        "-o-box-shadow": "0 0 10px #8c97cb",
        "box-shadow": "0 0 10px #8c97cb"
    });
    $(a).append(this.background);
    $(this.background).css({
        position: "absolute",
        width: this.width + "px",
        height: this.height + "px"
    });
    1 != b && b != totalPageCount ? (this.itemA.setPosition(0, 0), this.itemB.setPosition(0, 0, ["right", "top"]), this.itemB.onMouseUp(this, this.onItemMouseUp), this.onMouseOver()) : (this.itemA.setPosition(0, 0), this.itemB.showCell(!1),
        this.textField.css({
            display: "none"
        }), this.setBorder(!1), this.itemA.onMouseOver());
    this.itemA.onMouseUp(this, this.onItemMouseUp)
}
thumbnailItem.prototype.getWidth = function() {
    return this.width
};
thumbnailItem.prototype.addImage = function() {
    this.fillImage || (this.itemA.fillImage(this.pageIndex), 1 != this.pageIndex && this.pageIndex != totalPageCount ? this.itemB.fillImage(this.pageIndex + 1) : this.itemA.showTextField("block"), this.fillImage = !0)
};
thumbnailItem.prototype.setPosition = function(a, b, c) {
    void 0 == c && (c = ["left", "top"]);
    $(this.background).css(c[0], a + "px");
    $(this.background).css(c[1], b + "px")
};
thumbnailItem.prototype.onResize = function(a, b) {
    this.width = a;
    this.height = b;
    $(this.background).css({
        width: a + "px",
        height: b + "px"
    })
};
thumbnailItem.prototype.resetItem = function() {};
thumbnailItem.prototype.fission = function() {
    1 == this.pageIndex || this.pageIndex == totalPageCount || (this.setBorder(!1), this.onResize(this.width, 151), this.itemA.setImgPosition("c"), this.itemB.setImgPosition("c"), this.showTextField(!1), this.isMerge = !1)
};
thumbnailItem.prototype.merge = function() {
    1 == this.pageIndex || this.pageIndex == totalPageCount || (this.setBorder(!1), this.onResize(this.width, 151), this.itemA.setImgPosition("l"), this.itemB.setImgPosition("r"), this.showTextField(!0), this.isMerge = !0)
};
thumbnailItem.prototype.showBorder = function() {
    $(this.background).css({
        border: "1px solid #444444"
    })
};
thumbnailItem.prototype.hideBorder = function() {
    $(this.background)[0].style.border = ""
};
thumbnailItem.prototype.showTextField = function(a) {
    var b = this,
        c = a ? "block" : "none",
        a = a ? "none" : "block";
    this.background.bind(_event._enter, function() {
        b.textField.css({
            display: c
        })
    });
    this.background.bind(_event._down, function() {
        b.textField.css({
            display: c
        })
    });
    this.background.bind(_event._end, function() {
        b.textField.css({
            display: "none"
        })
    });
    this.background.bind(_event._leave, function() {
        b.textField.css({
            display: "none"
        })
    });
    this.itemA.showTextField(a);
    this.itemB.showTextField(a)
};
thumbnailItem.prototype.setBorder = function(a) {
    a ? $(this.background).css({
        border: "1px solid #444444"
    }) : $(this.background)[0].style.border = "";
    this.itemA.hideBorder();
    this.itemB.hideBorder()
};
thumbnailItem.prototype.onItemMouseUp = function(a) {
    isThumbDrag || (a = a.getPageIndex(), gotoPageFun(a))
};
thumbnailItem.prototype.highLight = function(a) {
    this.isMerge ? 1 == a || a == totalPageCount ? (this.itemA.highLight("#ffffff"), this.itemA.onMouseOverUp(), this.itemA.showTextField("block")) : ($(this.background).css({
        border: "2px solid #ff8040"
    }), this.onMouseOverUp()) : a == this.pageIndex ? (this.itemA.highLight("#ffffff"), this.itemA.onMouseOverUp(), this.itemA.showTextField("block")) : (this.itemB.highLight("#ffffff"), this.itemB.onMouseOverUp(), this.itemB.showTextField("block"))
};
thumbnailItem.prototype.onMouseOver = function() {
    var a = this;
    $(this.background).css({
        border: ""
    });
    $(this.background).bind(_event._enter, function() {
        a.background.css({
            border: "2px solid #0080ff"
        })
    });
    $(this.background).bind(_event._leave, function() {
        a.background.css({
            border: ""
        })
    })
};
thumbnailItem.prototype.onMouseOverUp = function() {
    var a = this;
    $(this.background).bind(_event._enter, function() {
        a.background.css({
            border: "2px solid #0080ff"
        })
    });
    $(this.background).bind(_event._leave, function() {
        a.background.css({
            border: "2px solid #ff8040"
        })
    })
};
thumbnailItem.prototype.clearMouseOver = function() {
    var a = this;
    $(this.background).bind(_event._enter, function() {
        a.background.css({
            border: ""
        })
    });
    $(this.background).bind(_event._leave, function() {
        a.background.css({
            border: ""
        })
    })
};
thumbnailItem.prototype.clearHighLight = function() {
    this.isMerge ? 1 == this.pageIndex || this.pageIndex == totalPageCount ? (this.itemA.onMouseOver(), this.itemB.onMouseOver()) : (this.onMouseOver(), this.itemA.clearMouseOver(), this.itemB.clearMouseOver()) : (this.itemA.onMouseOver(), this.itemB.onMouseOver(), this.clearMouseOver());
    this.itemA.clearHighLight();
    this.itemB.clearHighLight()
};

function loadToolBar(a, b) {
    this.visible = !1;
    this.icons = b;
    this.topBg = $('<div class="fbTopBar" id = "fbTopBar"></div>');
    this.logoBar = $("<div id='logoBar' class='bottom left' style='position: absolute;left: 0px;right: auto;z-index: 1;'></div>");
    this.pageBar = $("<div class='bottom left' style='position: absolute;left: 0px;right: auto;z-index: 3;'></div>");
    this.searchBar = $("<div class='bottom right' style='position: absolute;left: auto;right: 0px;z-index: 2;'></div>");
    this.toolBG = $("<div class='fbToolBar' id='fbToolBar'></div>");
    this.buttonBar = $("<div class='bottom left' style='position: absolute;left: 0px;right: auto;z-index: 3;'></div>");
    this.pageButtonBar = $("<div class='bottom right' style='position: absolute;left: auto;right: 0px;z-index: 3;'></div>");
    this.btnLast = $("<div title='Last Page' id='btnLast' class='numbering'></div>");
    this.btnNext = $("<div title='Next Page' id='btnRight' class='numbering'></div>");
    this.btnPrevious = $("<div title='Previous Page'  id='btnLeft' class='numbering'></div>");
    this.edtPageNumber = $("<div class='numbering' id='tfPageIndex'><input type='text' class='inputInnerShadow' id='currentPageIndexTextField' size='13' value='' style='text-align: center' class='radiotext' /></div>");
    this.btnFirst = $("<div title='First Page' id='btnFirst' class='numbering' ></div>");
    this.btnZoom = $("<div title='Zoom In' id='btnZoom' class='numbering'></div>");
    this.btnAutoPlay = $("<div title='Auto Play' id='btnAutoPlay' class='numbering' ></div>");
    this.btnThumb = $("<div title='Thumbnails'  id='btnThumb' class='numbering'></div>");
    this.btnShare = $("<div title='Share'  id='btnShare' class='numbering'></div>");
    this.edtPreSearch = $("<div class='numbering' id='preSearchContent'><input type='text' class='inputInnerShadow' id='preSearch' size='13' value='' style='text-align: left' class='radiotext'/></div>");
    this.btnSearch = $("<div title='Search' id='btnSearch' class='numbering'></div>");
    this.btnBookMark = $("<div title='Bookmark' id='btnBookmark' class='numbering'></div>");
    this.btnDownload = $("<div title='Download' id='btnDownload' class='numbering'></div>");
    this.btnSound = $("<div title='Sound On' id='btnSound' class='numbering'></div>");
    this.btnHome = $("<div title='Home' id='btnHome' class='numbering'></div>");
    this.btnPrint = $("<div title='Print' id='btnPrint' class='numbering'></div>");
    this.btnHelp = $("<div title='Help' id='btnHelp' class='numbering'></div>");
    this.btnAbout = $("<div title='About' id='btnAbout' class='numbering'></div>");
    this.lblPage = $("<div id='lblPage' style='color:white' ");
    this.btnLanguage = $("<div title='Language' id='btnLanguage' class='numbering'></div>");
    this.btnMore = $("<div title='More' id='btnMore' class='numbering'></div>");
    this.topBorder = $("<div></div>");
    this.topDownBorder = $("<div></div>");
    this.topBottomBorder = $("<div></div>");
    this.toolBorder = $("<div></div>");
    this.toolDownBorder = $("<div></div>");
    this.toolBottomBorder = $("<div></div>");
    a.append(this.topBg);
    a.append(this.toolBG);
    this.topBg.append(this.logoBar);
    this.topBg.append(this.pageBar);
    this.topBg.append(this.searchBar);
    this.topBg.append(this.topBorder);
    this.topBg.append(this.topDownBorder);
    this.topBg.append(this.topBottomBorder);
    this.searchBar.append(this.btnSearch);
    this.searchBar.append(this.edtPreSearch);
    this.pageBar.append(this.edtPageNumber);
    this.toolBG.append(this.buttonBar);
    this.toolBG.append(this.pageButtonBar);
    this.toolBG.append(this.toolBorder);
    this.toolBG.append(this.toolDownBorder);
    this.toolBG.append(this.toolBottomBorder);
    this.pageButtonBar.append(this.btnLast);
    this.pageButtonBar.append(this.btnNext);
    this.pageButtonBar.append(this.btnPrevious);
    this.pageButtonBar.append(this.btnFirst);
    this.buttonBar.append(this.btnZoom);
    this.buttonBar.append(this.btnAutoPlay);
    this.buttonBar.append(this.btnThumb);
    this.buttonBar.append(this.btnShare);
    this.buttonBar.append(this.btnBookMark);
    this.buttonBar.append(this.btnDownload);
    this.buttonBar.append(this.btnSound);
    this.buttonBar.append(this.btnHome);
    this.buttonBar.append(this.btnPrint);
    this.buttonBar.append(this.btnHelp);
    this.buttonBar.append(this.btnAbout);
    this.buttonBar.append(this.btnLanguage);
    this.buttonBar.append(this.btnMore);
    this.btnLast.append(getImage(toolBarIconsURL[1])).asButton().attr("title", getLanguage("btnLastPage", "Last"));
    this.btnNext.append(getImage(toolBarIconsURL[2])).asButton().attr("title", getLanguage("btnNextPage", "Next"));
    this.btnPrevious.append(getImage(toolBarIconsURL[3])).asButton().attr("title", getLanguage("btnPrePage",
        "Previous"));
    this.btnFirst.append(getImage(toolBarIconsURL[4])).asButton().attr("title", getLanguage("btnFirstPage", "First"));
    this.btnZoom.append(getImage(toolBarIconsURL[5])).asButton().attr("title", getLanguage("btnZoomIn", "Zoom In"));
    this.btnAutoPlay.append(getImage(toolBarIconsURL[7])).asButton().attr("title", getLanguage("btnAutoFlip", "Auto Flip"));
    this.btnThumb.append(getImage(toolBarIconsURL[9])).asButton().attr("title", getLanguage("btnThumb", "Thumbnails"));
    this.btnShare.append(getImage(toolBarIconsURL[10])).asButton().attr("title",
        getLanguage("btnSocialShare", "Share"));
    this.btnSearch.append(getImage(toolBarIconsURL[11])).asButton().attr("title", getLanguage("btnSearch", "Search"));
    this.btnBookMark.append(getImage(toolBarIconsURL[14])).asButton().attr("title", getLanguage("btnBookMark", "Book Mark"));
    this.btnDownload.append(getImage(toolBarIconsURL[12])).asButton().attr("title", getLanguage("btnDownload", "Download"));
    this.btnHome.append(getImage(toolBarIconsURL[13])).asButton().attr("title", getLanguage("btnGoToHome", "Home"));
    this.btnPrint.append(getImage(toolBarIconsURL[21])).asButton().attr("title",
        getLanguage("btnPrint", "Print"));
    this.btnSound.append(getImage(toolBarIconsURL[15])).asButton().attr("title", getLanguage("btnSoundOn", "soundOn"));
    this.btnHelp.append(getImage(toolBarIconsURL[22])).asButton().attr("title", getLanguage("btnHelp", "Help"));
    this.btnAbout.append(getImage(toolBarIconsURL[23])).asButton().attr("title", getLanguage("btnAbout", "About"));
    this.btnLanguage.append(getImage(toolBarIconsURL[25])).asButton().attr("title", getLanguage("btnLanguage", "LanguageChange"));
    this.btnMore.append(getImage(toolBarIconsURL[24])).asButton().attr("title",
        getLanguage("btnMore", "More"));
    this.edtPageNumber.children("input").css({
        color: bookConfig.pageNumColor
    });
    this.btnLast.css({
        width: "30px",
        height: "30px"
    });
    this.btnNext.css({
        width: "30px",
        height: "30px"
    });
    this.btnPrevious.css({
        width: "30px",
        height: "30px"
    });
    this.btnFirst.css({
        width: "30px",
        height: "30px"
    });
    this.btnZoom.css({
        width: "30px",
        height: "30px"
    });
    this.btnAutoPlay.css({
        width: "30px",
        height: "30px"
    });
    this.btnThumb.css({
        width: "30px",
        height: "30px"
    });
    this.btnShare.css({
        width: "30px",
        height: "30px"
    });
    this.btnSearch.css({
        width: "30px",
        height: "30px"
    });
    this.btnBookMark.css({
        width: "30px",
        height: "30px"
    });
    this.btnDownload.css({
        width: "30px",
        height: "30px"
    });
    this.btnHome.css({
        width: "30px",
        height: "30px"
    });
    this.btnPrint.css({
        width: "30px",
        height: "30px"
    });
    this.btnSound.css({
        width: "30px",
        height: "30px"
    });
    this.btnHelp.css({
        width: "30px",
        height: "30px"
    });
    this.btnAbout.css({
        width: "30px",
        height: "30px"
    });
    this.btnLanguage.css({
        width: "30px",
        height: "30px"
    });
    this.btnMore.css({
        width: "30px",
        height: "30px"
    });
    this.btnLast.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.btnNext.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.btnPrevious.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.btnFirst.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.btnZoom.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.btnAutoPlay.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.btnThumb.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.btnShare.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.btnSearch.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.btnBookMark.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.btnDownload.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.btnHome.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.btnPrint.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.btnSound.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.btnHelp.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.btnAbout.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.btnLanguage.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.btnMore.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    rightToLeft && (this.btnFirst.attr({
        title: getLanguage("btnLastPage", "Last")
    }), this.btnLast.attr({
        title: getLanguage("btnFirstPage", "First")
    }), this.btnNext.attr({
        title: getLanguage("btnPrePage", "Previous")
    }), this.btnPrevious.attr({
        title: getLanguage("btnNextPage",
            "Next")
    }));
    getBool("autoPlayAutoStart", !1) && (this.btnAutoPlay.empty().append(getImage(toolBarIconsURL[8])), this.btnAutoPlay.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    }), this.btnAutoPlay.attr("title", getLanguage("btnStopAutoFlip", "Stop Auto Flip")));
    thumbnail = new thumbnailBar(tmpContainer);
    this.printBody = new printBar(tmpContainer);
    this.helpBody = new helpBar(tmpContainer);
    this.aboutBody = new aboutBar(tmpContainer);
    this.sharePanel = new sharePanel(tmpContainer);
    this.languagePanel = new languageChange(tmpContainer);
    initShareBar();
    initLogoBar();
    moreBar = new initMoreBar;
    userConfig.autoPlayButtonVisible || this.btnAutoPlay.css("display", "none");
    zoomButtonEnable || this.btnZoom.css("display", "none");
    thumbButtonEnable || this.btnThumb.css("display", "none");
    shareButtonEnable || this.btnShare.css("display", "none");
    searchButtonEnable || this.btnSearch.css("display", "none");
    bookmarkButtonEnable || this.btnBookMark.css("display", "none");
    userConfig.downloadButtonVisible || this.btnDownload.css({
        display: "none"
    });
    userConfig.homeButtonVisible ||
        this.btnHome.css({
            display: "none"
        });
    userConfig.printButtonVisible || this.btnPrint.css({
        display: "none"
    });
    userConfig.bgSoundButtonVisible || this.btnSound.css({
        display: "none"
    });
    userConfig.helpButtonVisible || this.btnHelp.css({
        display: "none"
    });
    userConfig.aboutButtonVisible || this.btnAbout.css({
        display: "none"
    });
    1 >= language.length && this.btnLanguage.css({
        display: "none"
    });
    this.initEvent()
}
loadToolBar.prototype.setButtonPosition = function() {
    var a = parseInt(windowWidth) - 10;
    this.topBg.css({
        width: a + "px",
        height: "35px",
        left: "5px",
        "border-radius": "5px"
    });
    this.toolBG.css({
        width: a + "px",
        height: "42px",
        left: "5px",
        "border-radius": "5px"
    });
    this.topBorder.css({
        top: "0px",
        left: "0px",
        position: "absolute"
    });
    this.topBorder.css({
        width: a + "px",
        height: "1px"
    });
    this.topBorder.css({
        opacity: "0.4",
        background: "#ffffff"
    });
    this.topDownBorder.css({
        top: "1px",
        left: "0px",
        position: "absolute"
    });
    this.topDownBorder.css({
        width: a +
            "px",
        height: "1px"
    });
    this.topDownBorder.css({
        opacity: "0.2",
        background: "#ffffff"
    });
    this.topBottomBorder.css({
        top: "34px",
        left: "0px",
        position: "absolute"
    });
    this.topBottomBorder.css({
        width: a + "px",
        height: "1px"
    });
    this.topBottomBorder.css({
        opacity: "0.3",
        background: "#111111"
    });
    this.toolBorder.css({
        top: "0px",
        left: "0px",
        position: "absolute"
    });
    this.toolBorder.css({
        width: a + "px",
        height: "1px"
    });
    this.toolBorder.css({
        opacity: "0.4",
        background: "#ffffff"
    });
    this.toolDownBorder.css({
        top: "1px",
        left: "0px",
        position: "absolute"
    });
    this.toolDownBorder.css({
        width: a + "px",
        height: "1px"
    });
    this.toolDownBorder.css({
        opacity: "0.2",
        background: "#ffffff"
    });
    this.toolBottomBorder.css({
        top: "41px",
        left: "0px",
        position: "absolute"
    });
    this.toolBottomBorder.css({
        width: a + "px",
        height: "1px"
    });
    this.toolBottomBorder.css({
        opacity: "0.3",
        background: "#111111"
    });
    $(this.topBg).css({
        "-webkit-box-shadow": "0 0 5px rgba(40, 0, 0, 0.5)",
        "-moz-box-shadow": "0 0 5px rgba(40, 0, 0, 0.5)",
        "-o-box-shadow": "0 0 5px rgba(40, 0, 0, 0.5)",
        "box-shadow": "0 0 5px rgba(40, 0, 0, 0.5)"
    });
    $(this.toolBG).css({
        "-webkit-box-shadow": "0 0 5px rgba(40, 0, 0, 0.5)",
        "-moz-box-shadow": "0 0 5px rgba(40, 0, 0, 0.5)",
        "-o-box-shadow": "0 0 5px rgba(40, 0, 0, 0.5)",
        "box-shadow": "0 0 5px rgba(40, 0, 0, 0.5)"
    });
    this.topBg.setGradient(bookConfig.toolbarColor);
    this.toolBG.setGradient(bookConfig.toolbarColor);
    var b = function(b) {
            return b < a - 100 ? !0 : !1
        },
        c = 10;
    b(c) && userConfig.homeButtonVisible ? (this.btnHome.css({
        top: "4px",
        left: c + "px"
    }), c += 35, this.btnHome.css({
        display: "block"
    }), moreConfig.homeButtonVisible = !1) : (this.btnHome.css({
        display: "none"
    }), this.btnMore.css({
        display: "block"
    }), moreConfig.homeButtonVisible = !0);
    b(c) && userConfig.downloadButtonVisible ? (this.btnDownload.css({
        top: "4px",
        left: c + "px"
    }), c += 35, this.btnDownload.css({
        display: "block"
    }), moreConfig.downloadButtonVisible = !1) : (this.btnDownload.css({
        display: "none"
    }), this.btnMore.css({
        display: "block"
    }), moreConfig.downloadButtonVisible = !0);
    b(c) && thumbButtonEnable ? (this.btnThumb.css({
            top: "4px",
            left: c + "px"
        }), c += 35, this.btnThumb.css({
            display: "block"
        }),
        moreConfig.thumbButtonEnable = !1) : (this.btnThumb.css({
        display: "none"
    }), this.btnMore.css({
        display: "block"
    }), moreConfig.thumbButtonEnable = !0);
    b(c) && zoomButtonEnable ? (this.btnZoom.css({
        top: "4px",
        left: c + "px"
    }), c += 35, this.btnZoom.css({
        display: "block"
    }), moreConfig.zoomButtonEnable = !1) : (this.btnZoom.css({
        display: "none"
    }), this.btnMore.css({
        display: "block"
    }), moreConfig.zoomButtonEnable = !0);
    b(c) && bookmarkButtonEnable ? (this.btnBookMark.css({
            top: "4px",
            left: c + "px"
        }), c += 35, this.btnBookMark.css({
            display: "block"
        }),
        moreConfig.bookmarkButtonEnable = !1) : (this.btnBookMark.css({
        display: "none"
    }), this.btnMore.css({
        display: "block"
    }), moreConfig.bookmarkButtonEnable = !0);
    b(c) && shareButtonEnable ? (this.btnShare.css({
        top: "4px",
        left: c + "px"
    }), c += 35, shareBar.setSharePosition(parseInt(windowWidth) - c - 95, 45), this.btnShare.css({
        display: "block"
    }), moreConfig.shareButtonEnable = !1) : (this.btnShare.css({
        display: "none"
    }), this.btnMore.css({
        display: "block"
    }), moreConfig.shareButtonEnable = !0);
    b(c) && userConfig.autoPlayButtonVisible ? (this.btnAutoPlay.css({
        top: "4px",
        left: c + "px"
    }), c += 35, this.btnAutoPlay.css({
        display: "block"
    }), moreConfig.autoPlayButtonVisible = !1) : (this.btnAutoPlay.css({
        display: "none"
    }), this.btnMore.css({
        display: "block"
    }), moreConfig.autoPlayButtonVisible = !0);
    b(c) && userConfig.printButtonVisible ? (this.btnPrint.css({
        top: "4px",
        left: c + "px"
    }), c += 35, this.btnPrint.css({
        display: "block"
    }), moreConfig.printButtonVisible = !1) : (this.btnPrint.css({
        display: "none"
    }), this.btnMore.css({
        display: "block"
    }), moreConfig.printButtonVisible = !0);
    b(c) && userConfig.bgSoundButtonVisible ?
        (this.btnSound.css({
            top: "4px",
            left: c + "px"
        }), c += 35, this.btnSound.css({
            display: "block"
        }), moreConfig.bgSoundButtonVisible = !1) : (this.btnSound.css({
            display: "none"
        }), this.btnMore.css({
            display: "block"
        }), moreConfig.bgSoundButtonVisible = !0);
    b(c) && 1 < language.length ? (this.btnLanguage.css({
        top: "4px",
        left: c + "px"
    }), this.btnLanguage.css({
        display: "block"
    }), c += 35, moreConfig.languageButtonVisible = !1) : (this.btnLanguage.css({
        display: "none"
    }), this.btnMore.css({
        display: "block"
    }), moreConfig.languageButtonVisible = !0);
    b(c) &&
        userConfig.helpButtonVisible ? (this.btnHelp.css({
            top: "4px",
            left: c + "px"
        }), c += 35, this.btnHelp.css({
            display: "block"
        }), moreConfig.helpButtonVisible = !1) : (this.btnHelp.css({
            display: "none"
        }), this.btnMore.css({
            display: "block"
        }), moreConfig.helpButtonVisible = !0);
    b(c) && userConfig.aboutButtonVisible ? (this.btnAbout.css({
        top: "4px",
        left: c + "px"
    }), c += 35, this.btnAbout.css({
        display: "block"
    }), moreConfig.aboutButtonVisible = !1) : (this.btnAbout.css({
        display: "none"
    }), this.btnMore.css({
        display: "block"
    }), moreConfig.aboutButtonVisible = !0);
    this.btnMore.css({
        top: "4px",
        left: c + "px"
    });
    moreBar.setMorePosition(parseInt(windowWidth) - c - 75, 45);
    var d = 10;
    b(c + 150 + d) ? (this.btnLast.css({
        right: d + "px",
        top: "4px"
    }), d += 35, this.btnNext.css({
        right: d + "px",
        top: "4px"
    }), d += 35, this.btnPrevious.css({
        right: d + "px",
        top: "4px"
    }), this.btnFirst.css({
        right: d + 35 + "px",
        top: "4px"
    }), this.btnFirst.css({
        display: "block"
    }), this.btnPrevious.css({
        display: "block"
    }), this.btnNext.css({
        display: "block"
    }), this.btnLast.css({
        display: "block"
    }), moreConfig.flipButtonVisible = !1) : (this.btnFirst.css({
            display: "none"
        }),
        this.btnPrevious.css({
            display: "none"
        }), this.btnNext.css({
            display: "none"
        }), this.btnLast.css({
            display: "none"
        }), this.btnMore.css({
            display: "block"
        }), moreConfig.flipButtonVisible = !0);
    d = 10;
    b(300) && searchButtonEnable ? (this.btnSearch.css({
        top: "0px",
        right: d + "px"
    }), d += this.btnSearch.width() + 6, this.edtPreSearch.css({
        top: "3px",
        right: d + "px"
    }), this.btnSearch.css({
        display: "block"
    }), this.edtPreSearch.css({
        display: "block"
    }), moreConfig.searchButtonEnable = !1) : (this.btnSearch.css({
            display: "none"
        }), this.edtPreSearch.css({
            display: "none"
        }),
        this.btnMore.css({
            display: "block"
        }), moreConfig.searchButtonEnable = !0);
    colorAdd(bookConfig.toolbarColor, 120);
    this.edtPageNumber.children("input").css({
        background: "#ffffff"
    });
    this.edtPreSearch.children("input").css({
        background: "#ffffff"
    });
    this.edtPageNumber.children("input").css({
        "border-radius": "0px"
    });
    this.edtPageNumber.children("input").css({
        "border-right-width": "0px"
    });
    this.edtPageNumber.children("input").css({
        "border-bottom-width": "0px"
    });
    this.edtPageNumber.children("input").css({
        "border-left": "1px solid " +
            colorDiv(bookConfig.toolbarColor, 20)
    });
    this.edtPageNumber.children("input").css({
        "border-top": "1px solid " + colorDiv(bookConfig.toolbarColor, 20)
    });
    this.edtPreSearch.children("input").css({
        padding: "2px"
    });
    this.edtPreSearch.children("input").css({
        "border-radius": "0px"
    });
    this.edtPreSearch.children("input").css({
        "border-right-width": "0px"
    });
    this.edtPreSearch.children("input").css({
        "border-bottom-width": "0px"
    });
    this.edtPreSearch.children("input").css({
        "border-top": "1px solid " + colorDiv(bookConfig.toolbarColor,
            20)
    });
    this.edtPreSearch.children("input").css({
        "border-left": "1px solid " + colorDiv(bookConfig.toolbarColor, 20)
    });
    b(400) ? (this.pageBar.css({
        left: (a - this.edtPageNumber.width()) / 2 - 2 + "px"
    }), this.edtPageNumber.css({
        display: "block"
    })) : (this.edtPageNumber.css({
        display: "none"
    }), this.btnMore.css({
        display: "block"
    }));
    this.changeButtonColor(bookConfig.iconColor);
    this.mouseEnterShine(bookConfig.toolbarColor, colorDiv(bookConfig.toolbarColor, 30), colorAdd(bookConfig.toolbarColor, 105));
    this.OnMouseOver();
    this.printBody.onResize();
    this.helpBody.onResize();
    this.aboutBody.onResize();
    this.sharePanel.onResize();
    this.languagePanel.onResize();
    moreBar.onResize(this.btnMore)
};
loadToolBar.prototype.changeButtonColor = function(a) {
    this.btnLast.empty().append(getImage(toolBarIconsURL[1])).asButton().attr("title", getLanguage("btnLastPage", "Last"));
    this.btnNext.empty().append(getImage(toolBarIconsURL[2])).asButton().attr("title", getLanguage("btnNextPage", "Next"));
    this.btnPrevious.empty().append(getImage(toolBarIconsURL[3])).asButton().attr("title", getLanguage("btnPrePage", "Previous"));
    this.btnFirst.empty().append(getImage(toolBarIconsURL[4])).asButton().attr("title", getLanguage("btnFirstPage",
        "First"));
    this.btnThumb.empty().append(getImage(toolBarIconsURL[9])).asButton().attr("title", getLanguage("btnThumb", "Thumbnails"));
    this.btnShare.empty().append(getImage(toolBarIconsURL[10])).asButton().attr("title", getLanguage("btnSocialShare", "Share"));
    this.btnSearch.empty().append(getImage(toolBarIconsURL[11])).asButton().attr("title", getLanguage("btnSearch", "Search"));
    this.btnBookMark.empty().append(getImage(toolBarIconsURL[14])).asButton().attr("title", getLanguage("btnBookMark", "Book Mark"));
    this.btnDownload.empty().append(getImage(toolBarIconsURL[12])).asButton().attr("title", getLanguage("btnDownload", "Download"));
    this.btnHome.empty().append(getImage(toolBarIconsURL[13])).asButton().attr("title", getLanguage("btnGoToHome", "Home"));
    this.btnPrint.empty().append(getImage(toolBarIconsURL[21])).asButton().attr("title", getLanguage("btnPrint", "Print"));
    this.btnHelp.empty().append(getImage(toolBarIconsURL[22])).asButton().attr("title", getLanguage("btnHelp", "Help"));
    this.btnAbout.empty().append(getImage(toolBarIconsURL[23])).asButton().attr("title",
        getLanguage("btnAbout", "About"));
    this.btnLanguage.empty().append(getImage(toolBarIconsURL[25])).asButton().attr("title", getLanguage("btnLanguage", "Chnage Language"));
    this.btnMore.empty().append(getImage(toolBarIconsURL[24])).asButton().attr("title", getLanguage("btnMore", "More"));
    this.btnLast.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.btnNext.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.btnPrevious.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.btnFirst.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.btnThumb.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.btnShare.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.btnSearch.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.btnBookMark.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.btnDownload.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.btnHome.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.btnPrint.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.btnHelp.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.btnAbout.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.btnLanguage.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    this.btnMore.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    2 == bookType ? this.btnZoom.empty().append(getImage(toolBarIconsURL[6])).attr("title", getLanguage("btnZoomOut",
        "Zoom Out")) : this.btnZoom.empty().append(getImage(toolBarIconsURL[5])).attr("title", getLanguage("btnZoomIn", "Zoom In"));
    this.btnZoom.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    });
    void 0 != auto_player && null != auto_player && (auto_player.isPlaying() ? this.btnAutoPlay.empty().append(getImage(toolBarIconsURL[8])).attr("title", getLanguage("btnStopAutoFlip", "Stop Auto Flip")) : this.btnAutoPlay.empty().append(getImage(toolBarIconsURL[7])).attr("title", getLanguage("btnAutoFlip", "Auto Flip")), this.btnAutoPlay.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    }));
    void 0 != isPlaying && (isPlaying ? this.btnSound.empty().append(getImage(toolBarIconsURL[15])).attr("title", getLanguage("btnSoundOn", "soundOn")) : this.btnSound.empty().append(getImage(toolBarIconsURL[16])).attr("title", getLanguage("btnSoundOff", "soundOff")), this.btnSound.children("img").css({
        "margin-left": "5px",
        "margin-top": "5px"
    }));
    userConfig.homeButtonVisible && this.btnHome.changeButtonColor(a);
    userConfig.downloadButtonVisible && this.btnDownload.changeButtonColor(a);
    thumbButtonEnable &&
        this.btnThumb.changeButtonColor(a);
    zoomButtonEnable && this.btnZoom.changeButtonColor(a);
    userConfig.printButtonVisible && this.btnPrint.changeButtonColor(a);
    bookmarkButtonEnable && this.btnBookMark.changeButtonColor(a);
    shareButtonEnable && this.btnShare.changeButtonColor(a);
    userConfig.autoPlayButtonVisible && this.btnAutoPlay.changeButtonColor(a);
    userConfig.bgSoundButtonVisible && this.btnSound.changeButtonColor(a);
    userConfig.helpButtonVisible && this.btnHelp.changeButtonColor(a);
    userConfig.aboutButtonVisible &&
        this.btnAbout.changeButtonColor(a);
    1 < language.length && this.btnLanguage.changeButtonColor(a);
    this.btnLast.changeButtonColor(a);
    this.btnNext.changeButtonColor(a);
    this.btnPrevious.changeButtonColor(a);
    this.btnFirst.changeButtonColor(a);
    searchButtonEnable && this.btnSearch.changeButtonColor(a);
    this.btnMore.changeButtonColor(a)
};
loadToolBar.prototype.OnMouseOver = function() {
    userConfig.homeButtonVisible && this.btnHome.mouseOverCursor();
    userConfig.printButtonVisible && this.btnPrint.mouseOverCursor();
    userConfig.downloadButtonVisible && this.btnDownload.mouseOverCursor();
    zoomButtonEnable && this.btnZoom.mouseOverCursor();
    bookmarkButtonEnable && this.btnBookMark.mouseOverCursor();
    shareButtonEnable && this.btnShare.mouseOverCursor();
    userConfig.autoPlayButtonVisible && this.btnAutoPlay.mouseOverCursor();
    userConfig.bgSoundButtonVisible && this.btnSound.mouseOverCursor();
    userConfig.helpButtonVisible && this.btnHelp.mouseOverCursor();
    userConfig.aboutButtonVisible && this.btnAbout.mouseOverCursor();
    thumbButtonEnable && this.btnThumb.mouseOverCursor();
    1 < language.length && this.btnLanguage.mouseOverCursor();
    this.btnLast.mouseOverCursor();
    this.btnNext.mouseOverCursor();
    this.btnPrevious.mouseOverCursor();
    this.btnFirst.mouseOverCursor();
    searchButtonEnable && this.btnSearch.mouseOverCursor();
    this.btnMore.mouseOverCursor()
};
loadToolBar.prototype.mouseEnterShine = function(a, b, c) {
    userConfig.homeButtonVisible && this.btnHome.mouseEnterGradient(a, b, c);
    userConfig.printButtonVisible && this.btnPrint.mouseEnterGradient(a, b, c);
    userConfig.downloadButtonVisible && this.btnDownload.mouseEnterGradient(a, b, c);
    zoomButtonEnable && this.btnZoom.mouseEnterGradient(a, b, c);
    bookmarkButtonEnable && this.btnBookMark.mouseEnterGradient(a, b, c);
    shareButtonEnable && this.btnShare.mouseEnterGradient(a, b, c);
    userConfig.autoPlayButtonVisible && this.btnAutoPlay.mouseEnterGradient(a,
        b, c);
    userConfig.bgSoundButtonVisible && this.btnSound.mouseEnterGradient(a, b, c);
    userConfig.helpButtonVisible && this.btnHelp.mouseEnterGradient(a, b, c);
    userConfig.aboutButtonVisible && this.btnAbout.mouseEnterGradient(a, b, c);
    thumbButtonEnable && this.btnThumb.mouseEnterGradient(a, b, c);
    1 < language.length && this.btnLanguage.mouseEnterGradient(a, b);
    this.btnLast.mouseEnterGradient(a, b, c);
    this.btnNext.mouseEnterGradient(a, b, c);
    this.btnPrevious.mouseEnterGradient(a, b, c);
    this.btnFirst.mouseEnterGradient(a, b, c);
    searchButtonEnable &&
        this.btnSearch.mouseEnterGradient(a, b, c);
    this.btnMore.mouseEnterGradient(a, b, c)
};
loadToolBar.prototype.show = function() {
    var a = this;
    this.topBg.animate({
        top: 5,
        opacity: 0.95
    }, 500);
    this.toolBG.animate({
        bottom: 5,
        opacity: 0.95
    }, 500, function() {
        a.visible = !0
    })
};
loadToolBar.prototype.getHeight = function() {
    return this.getTopHeight() + this.getBottomHeight()
};
loadToolBar.prototype.getTopHeight = function() {
    return this.topBg.height() + 5
};
loadToolBar.prototype.getBottomHeight = function() {
    return this.toolBG.height() + 5
};
loadToolBar.prototype.getLogoHeight = function() {
    return this.topBg.height()
};
loadToolBar.prototype.hide = function() {
    var a = this;
    this.topBg.animate({
        top: -50,
        opacity: 0
    }, 300);
    this.toolBG.animate({
        bottom: -50,
        opacity: 0
    }, 300, function() {
        a.visible = !1
    })
};
loadToolBar.prototype.initEvent = function() {
    var a = this;
    this.btnLast.bind(_event._end, function() {
        a.lastPage();
        isMoreShow && (moreBar.hideMoreBar(), isMoreShow = !1)
    });
    this.btnNext.bind(_event._end, function() {
        a.nextPage();
        isMoreShow && (moreBar.hideMoreBar(), isMoreShow = !1)
    });
    this.btnPrevious.bind(_event._end, function() {
        a.prePage();
        isMoreShow && (moreBar.hideMoreBar(), isMoreShow = !1)
    });
    this.btnFirst.bind(_event._end, function() {
        a.firstPage();
        isMoreShow && (moreBar.hideMoreBar(), isMoreShow = !1)
    });
    this.btnMore.bind(_event._end,
        function() {
            isMoreShow ? moreBar.hideMoreBar() : moreBar.showMoreBar();
            isMoreShow = !isMoreShow;
            return !1
        });
    this.btnZoom.bind(_event._end, function() {
        if (2 == bookType) {
            if (isIE10()) {
                alert(IE10_LIMIT);
                return
            }
            windowWidth < windowHeight ? (changeShowBook(1), bookType = 1, setCurrentIndexTextField($(singlePageBook).data().currentPageIndex), $(singlePageBook).data().gotoPage(zoomBook.currentIndex)) : (changeShowBook(0), bookType = 0, setCurrentIndexTextField(flipBook.currentPageIndex, !0), flipBook.gotoPage(zoomBook.currentIndex));
            thumbnail.clearHighLight();
            thumbnail.setHighLight(zoomBook.currentIndex);
            a.btnZoom.empty().append(getImage(toolBarIconsURL[5])).attr("title", getLanguage("btnZoomIn", "Zoom In"));
            a.btnZoom.children("img").css({
                "margin-left": "5px",
                "margin-top": "5px"
            })
        } else zoomBook.currentIndex = flipBook.currentPageIndex, zoomBook.showPage.fillContent(zoomBook.currentIndex), changeShowBook(2), bookType = 2, a.btnZoom.empty().append(getImage(toolBarIconsURL[6])).attr("title", getLanguage("btnZoomOut", "Zoom Out")), a.btnZoom.children("img").css({
            "margin-left": "5px",
            "margin-top": "5px"
        }), setCurrentIndexTextField(zoomBook.currentIndex, !1), thumbnail.clearHighLight(), thumbnail.setHighLight(zoomBook.currentIndex), auto_player.isPlaying() && (auto_player.stop(), a.btnAutoPlay.empty().append(getImage(toolBarIconsURL[7])).attr("title", getLanguage("btnAutoFlip", "Auto Flip")), a.btnAutoPlay.children("img").css({
            "margin-left": "5px",
            "margin-top": "5px"
        }));
        void 0 == a.changeZoomColor && (a.changeZoomColor = !1);
        a.changeZoomColor || (a.btnZoom.changeButtonColor(bookConfig.iconColor), a.changeZoomColor = !0);
        isMoreShow && (moreBar.hideMoreBar(), isMoreShow = !1)
    });
    this.btnAutoPlay.bind(_event._end, function() {
        auto_player.isPlaying() ? (auto_player.stop(), a.btnAutoPlay.empty().append(getImage(toolBarIconsURL[7])).attr("title", getLanguage("btnAutoFlip", "Auto Flip"))) : (auto_player.start(), a.btnAutoPlay.empty().append(getImage(toolBarIconsURL[8])).attr("title", getLanguage("btnStopAutoFlip", "Stop Auto Flip")));
        a.btnAutoPlay.children("img").css({
            "margin-left": "5px",
            "margin-top": "5px"
        });
        void 0 == a.changeAutoPlayColor &&
            (a.changeAutoPlayColor = !1);
        a.changeAutoPlayColor || (a.btnAutoPlay.changeButtonColor(bookConfig.iconColor), a.changeAutoPlayColor = !0);
        isMoreShow && (moreBar.hideMoreBar(), isMoreShow = !1)
    });
    this.btnThumb.bind(_event._end, function() {
        thumbnail.getShowStatu() ? thumbnail.hideBox() : thumbnail.showshow();
        isMoreShow && (moreBar.hideMoreBar(), isMoreShow = !1)
    });
    this.btnShare.bind(_event._end, function() {
        a.sharePanel.getShowStatu() ? a.sharePanel.hideBox() : a.sharePanel.showshow();
        isMoreShow && (moreBar.hideMoreBar(), isMoreShow = !1)
    });
    this.btnShare.bind(_event._down, function() {
        isMoreShow && (moreBar.hideMoreBar(), isMoreShow = !1);
        return !1
    });
    this.btnPrint.bind(_event._end, function() {
        a.printBody.getShowStatu() ? a.printBody.hideBox() : a.printBody.showshow();
        isMoreShow && (moreBar.hideMoreBar(), isMoreShow = !1)
    });
    this.btnSearch.bind(_event._end, function() {
        frmSearch.isSearchShow ? frmSearch.closeForm() : frmSearch.showForm();
        isMoreShow && (moreBar.hideMoreBar(), isMoreShow = !1)
    });
    this.edtPreSearch.bind("keydown", function(a) {
        13 == a.keyCode && !frmSearch.isSearchShow &&
            frmSearch.showForm();
        isMoreShow && (moreBar.hideMoreBar(), isMoreShow = !1)
    });
    this.btnBookMark.bind(_event._end, function() {
        frmBookmark.getShowStatu() ? frmBookmark.closeForm() : frmBookmark.showForm();
        isMoreShow && (moreBar.hideMoreBar(), isMoreShow = !1)
    });
    this.btnDownload.bind(_event._end, function() {
        "" != userConfig.downloadURL && (window.location = userConfig.downloadURL);
        isMoreShow && (moreBar.hideMoreBar(), isMoreShow = !1)
    });
    this.btnSound.bind(_event._end, function() {
        isPlaying ? a.btnSound.empty().append(getImage(toolBarIconsURL[16])).attr("title",
            getLanguage("btnSoundOff", "soundOff")) : a.btnSound.empty().append(getImage(toolBarIconsURL[15])).attr("title", getLanguage("btnSoundOn", "soundOn"));
        a.btnSound.children("img").css({
            "margin-left": "5px",
            "margin-top": "5px"
        });
        void 0 == a.changeSoundColor && (a.changeSoundColor = !1);
        a.changeSoundColor || (a.btnSound.changeButtonColor(bookConfig.iconColor), a.changeSoundColor = !0);
        isMoreShow && (moreBar.hideMoreBar(), isMoreShow = !1)
    });
    this.btnHelp.bind(_event._end, function() {
        a.helpBody.getShowStatu() ? a.helpBody.hideBox() :
            a.helpBody.showshow();
        isMoreShow && (moreBar.hideMoreBar(), isMoreShow = !1)
    });
    this.btnHome.bind(_event._end, function() {
        if (void 0 != userConfig.homeURL && "" != userConfig.homeURL) {
            var a = userConfig.homeURL;
            "http" != a.substr(0, 4) && (a = "http://" + a);
            window.open(a, "_tab")
        }
        isMoreShow && (moreBar.hideMoreBar(), isMoreShow = !1)
    });
    this.toolBG.bind(_event._down, function() {
        isShareShow && (shareBar.hideShareBar(), isShareShow = !1)
    });
    this.btnAbout.bind(_event._end, function() {
        a.aboutBody.getShowStatu() ? a.aboutBody.hideBox() : a.aboutBody.showshow();
        isMoreShow && (moreBar.hideMoreBar(), isMoreShow = !1)
    });
    this.btnLanguage.bind(_event._end, function() {
        a.languagePanel.getShowStatu() ? a.languagePanel.hideBox() : a.languagePanel.showshow();
        isMoreShow && (moreBar.hideMoreBar(), isMoreShow = !1)
    })
};
loadToolBar.prototype.lastPage = function() {
    rightToLeft ? firstPageFun() : lastPageFun()
};
loadToolBar.prototype.nextPage = function() {
    rightToLeft ? previousPageFun() : nextPageFun()
};
loadToolBar.prototype.prePage = function() {
    rightToLeft ? nextPageFun() : previousPageFun()
};
loadToolBar.prototype.firstPage = function() {
    rightToLeft ? lastPageFun() : firstPageFun()
};
loadToolBar.prototype.changeLanguage = function() {
    this.btnLast.attr("title", getLanguage("btnLastPage", "Last"));
    this.btnNext.attr("title", getLanguage("btnNextPage", "Next"));
    this.btnPrevious.attr("title", getLanguage("btnPrePage", "Previous"));
    this.btnFirst.attr("title", getLanguage("btnFirstPage", "First"));
    this.btnZoom.attr("title", 2 == bookType ? getLanguage("btnZoomOut", "Zoom Out") : getLanguage("btnZoomIn", "Zoom In"));
    this.btnAutoPlay.attr("title", auto_player.isPlaying() ? getLanguage("btnStopAutoFlip", "Stop Auto Flip") :
        getLanguage("btnAutoFlip", "Auto Flip"));
    this.btnThumb.attr("title", getLanguage("btnThumb", "Thumbnails"));
    this.btnShare.attr("title", getLanguage("btnSocialShare", "Share"));
    this.btnSearch.attr("title", getLanguage("btnSearch", "Search"));
    this.btnBookMark.attr("title", getLanguage("btnBookMark", "Book Mark"));
    this.btnDownload.attr("title", getLanguage("btnDownload", "Download"));
    this.btnHome.attr("title", getLanguage("btnGoToHome", "Home"));
    this.btnPrint.attr("title", getLanguage("btnPrint", "Print"));
    this.btnHelp.attr("title",
        getLanguage("btnHelp", "Help"));
    this.btnAbout.attr("title", getLanguage("btnAbout", "About"));
    this.btnLanguage.attr("title", getLanguage("btnLanguage", "Language"));
    this.btnMore.attr("title", getLanguage("btnMore", "More"));
    this.btnSound.attr("title", isPlaying ? getLanguage("btnSoundOn", "soundOn") : getLanguage("btnSoundOff", "soundOff"));
    rightToLeft && (this.btnFirst.attr({
        title: getLanguage("btnLastPage", "Last")
    }), this.btnLast.attr({
        title: getLanguage("btnFirstPage", "First")
    }), this.btnNext.attr({
        title: getLanguage("btnPrePage",
            "Previous")
    }), this.btnPrevious.attr({
        title: getLanguage("btnNextPage", "Next")
    }))
};

function printBar(a) {
    this.background = $("<div class='printBar'></div>");
    this.contentBack = $("<div class='printBack'></div>");
    this.contentBox = $("<div class='printBG'></div>");
    this.toolBox = $("<div class='printBox'></div>");
    this.checkBox = $("<div class='printBox'></div>");
    this.titleBox = $("<div class='printBox'></div>");
    this.printArea = $("<div></div>");
    this.printAll = $('<p><input type="radio" value="printAll" id="printAll" name="gender" checked=\'true\' onClick=\'setPrintValue("printAll")\'/><label for="printAll">Print All Pages</label></p>');
    this.printCurrent = $('<p><input type="radio" value="printCurrent" id="printCurrent" name="gender" onClick=\'setPrintValue("printCurrent")\'/><label for="printCurrent">Print Current Page</label></p>');
    this.printRange = $('<p><input type="radio" value="printRange" id="printRange" name="gender" onClick=\'setPrintValue("printRange")\'/><label for="printRange">Print Range </label><input id=\'rangeNum\' width=\'30px\' style=\'width:100px;left:50px\' type=\'text\'/><label for="example"> Example: 2,3,5-10</label></p>');
    this.printSubmit = $('<p><button type="button" style="width:49px;height:28px;">Print</button></p>');
    this.printSubmit.css({
        position: "absolute",
        right: 30,
        "margin-top": "5px"
    });
    setPrintValue("printAll");
    this.showing = !1;
    this.width = windowWidth;
    this.height = windowHeight;
    this.contentWidth = 330;
    this.contentHeight = 213;
    this.mainColor = "#888888";
    this.background.css({
        height: this.height + "px",
        bottom: "0px"
    });
    this.contentBox.css({
        height: this.contentHeight + "px",
        width: this.contentWidth + "px",
        left: (this.width - this.contentWidth) /
            2 + "px"
    });
    this.contentBack.css({
        height: this.contentHeight + 10 + "px",
        width: this.contentWidth + 10 + "px",
        left: (this.width - this.contentWidth) / 2 - 5 + "px"
    });
    this.contentBack.css({
        opacity: 0.5
    });
    this.toolBox.css({
        width: "330px",
        height: "31px",
        top: "0px",
        left: "0px",
        background: "#333333"
    });
    this.checkBox.css({
        width: "330px",
        height: "300px",
        top: "31px",
        left: "0px"
    });
    this.contentBox.css({
        top: (this.height - this.contentHeight) / 2 + "px"
    });
    this.contentBack.css({
        top: (this.height - this.contentHeight) / 2 - 5 + "px"
    });
    $(this.background).css({
        "-webkit-box-shadow": "0 0 5px rgba(40, 0, 0, 0.5)",
        "-moz-box-shadow": "0 0 5px rgba(40, 0, 0, 0.5)",
        "-o-box-shadow": "0 0 5px rgba(40, 0, 0, 0.5)",
        "box-shadow": "0 0 5px rgba(40, 0, 0, 0.5)"
    });
    $(a).append(this.background);
    $(a).append(this.contentBack);
    $(a).append(this.contentBox);
    $(this.contentBox).append(this.toolBox);
    $(this.contentBox).append(this.checkBox);
    $(this.checkBox).append(this.printAll);
    $(this.checkBox).append(this.printCurrent);
    $(this.checkBox).append(this.printRange);
    $(this.checkBox).append(this.printSubmit);
    this.contentBox.css({
        "text-shadow": "1px 1px #ffffff",
        background: "#dddddd"
    });
    this.closeButton = $("<div></div>");
    $(this.closeButton).css({
        top: "0px",
        right: "0px",
        position: "absolute"
    });
    $(this.closeButton).append($("<img src='" + uiBaseURL + "close.png'/>").asImageButton());
    this.titleBox.css({
        width: "20px",
        height: "20px",
        left: "15px",
        position: "absolute"
    });
    this.titleBox.css({
        color: "#ffffff",
        top: "7px"
    });
    this.titleBox.css({
        "text-shadow": "1px 1px #000000",
        "font-family": "verdana"
    });
    $(this.titleBox).html("Print");
    $(this.toolBox).append(this.closeButton);
    $(this.toolBox).append(this.titleBox);
    this.initEvent();
    this.background.css({
        display: "none"
    });
    this.contentBox.css({
        display: "none"
    });
    this.contentBack.css({
        display: "none"
    })
}

function setPrintValue(a) {
    printValue = a
}
printBar.prototype.onResize = function() {
    this.contentHeight = 213;
    this.contentWidth = 330;
    this.background.css({
        height: windowHeight + "px",
        bottom: "0px"
    });
    this.contentBox.css({
        height: this.contentHeight + "px",
        width: this.contentWidth + "px",
        left: (windowWidth - this.contentWidth) / 2 + "px"
    });
    this.contentBack.css({
        height: this.contentHeight + 10 + "px",
        width: this.contentWidth + 10 + "px",
        left: (windowWidth - this.contentWidth) / 2 - 5 + "px"
    });
    this.toolBox.css({
        width: "330px",
        height: "31px",
        top: "0px",
        left: "0px"
    });
    this.checkBox.css({
        width: "330px",
        height: "300px",
        top: "31px",
        left: "0px"
    });
    this.contentBox.css({
        top: (windowHeight - this.contentHeight) / 2 + "px"
    });
    this.contentBack.css({
        top: (windowHeight - this.contentHeight) / 2 - 5 + "px"
    });
    this.closeButton.css({
        top: "0px",
        right: "0px"
    });
    this.printAll.css({
        "margin-left": "10px"
    });
    this.printCurrent.css({
        "margin-left": "10px"
    });
    this.printRange.css({
        "margin-left": "10px"
    });
    $("#rangeNum").css({
        width: "50px",
        "margin-left": "10px",
        "margin-right": "10px"
    });
    $("#rangeNum").css({
        "border-right": "1px solid " + colorAdd("#ffffff",
            40)
    });
    $("#rangeNum").css({
        "border-bottom": "1px solid " + colorAdd("#ffffff", 40)
    });
    $("#rangeNum").css({
        "border-left": "1px solid " + colorDiv("#aaaaaa", 40)
    });
    $("#rangeNum").css({
        "border-top": "1px solid " + colorDiv("#aaaaaa", 40)
    });
    this.printArea.css({
        top: -windowHeight + "px",
        left: "0px"
    })
};
printBar.prototype.setPosition = function(a, b, c) {
    void 0 == c && (c = ["left", "top"]);
    $(this.background).css(c[0], a + "px");
    $(this.background).css(c[1], b + "px")
};
printBar.prototype.getShowStatu = function() {
    return this.showing
};
printBar.prototype.setShowStatu = function(a) {
    this.showing = a
};
printBar.prototype.showshow = function() {
    $(this.background).fadeIn(500);
    $(this.contentBox).fadeIn(500);
    $(this.contentBack).fadeIn(500);
    this.showing = !0
};
printBar.prototype.hideBox = function() {
    $(this.background).fadeOut(500);
    $(this.contentBox).fadeOut(500);
    $(this.contentBack).fadeOut(500);
    this.showing = !1
};
printBar.prototype.initEvent = function() {
    var a = this;
    this.background.bind(_event._down, function() {
        a.hideBox();
        a.showing = !1
    });
    this.closeButton.bind("mouseover", function() {
        a.closeButton.css({
            cursor: "pointer"
        })
    });
    this.printSubmit.bind(_event._down, function() {
        switch (printValue) {
            case "printAll":
                var b, c, d = 0,
                    e = 0;
                a.printArea.empty();
                for (var f = 1; f <= bookConfig.totalPageCount; f++) {
                    b = $("<div></div>");
                    f != bookConfig.totalPageCount && b.css({
                        "page-break-after": "always"
                    });
                    b.css({
                        position: "relative"
                    });
                    b.css({
                        width: 500,
                        height: 500
                    });
                    c = $("<img src = 'files/large/" + f + ".jpg'/>");
                    c.css({
                        "z-index": "200",
                        left: 0,
                        top: 0,
                        position: "absolute"
                    });
                    b.append(c);
                    if ("Show" == bookConfig.PrintButtonVisible && "" != bookConfig.printWatermarkFile) {
                        var j = $("<img src = '" + bookConfig.printWatermarkFile + "'/>");
                        j.css({
                            "z-index": "201",
                            left: 0,
                            top: 0,
                            position: "absolute"
                        });
                        e++;
                        j.load(function() {
                            d++;
                            d == bookConfig.totalPageCount + e && a.printArea.printArea()
                        });
                        b.append(j)
                    }
                    c.load(function() {
                        d++;
                        d == bookConfig.totalPageCount + e && a.printArea.printArea()
                    });
                    a.printArea.append(b)
                }
                break;
            case "printCurrent":
                if (2 == bookType) d = 0, a.printArea.empty(), b = $("<div></div>"), b.css({
                        position: "relative"
                    }), b.css({
                        width: 500,
                        height: 500
                    }), c = $("<img src = 'files/large/" + zoomBook.currentIndex + ".jpg'/>"), b.append(c), "Show" == bookConfig.PrintButtonVisible && "" != bookConfig.printWatermarkFile && (j = $("<img src = '" + bookConfig.printWatermarkFile + "'/>"), j.css({
                        "z-index": "201",
                        left: 0,
                        top: 0,
                        position: "absolute"
                    }), j.load(function() {
                        d++;
                        2 == d && a.printArea.printArea()
                    }), b.append(j)), c.load(function() {
                        d++;
                        d == 2 && a.printArea.printArea()
                    }),
                    a.printArea.append(b);
                else if (1 == bookType) d = 0, a.printArea.empty(), b = $("<div></div>"), b.css({
                    position: "relative"
                }), b.css({
                    width: 500,
                    height: 500
                }), c = $("<img src = 'files/large/" + $(singlePageBook).data().currentPageIndex + ".jpg'/>"), b.append(c), "Show" == bookConfig.PrintButtonVisible && "" != bookConfig.printWatermarkFile && (j = $("<img src = '" + bookConfig.printWatermarkFile + "'/>"), j.css({
                    "z-index": "201",
                    left: 0,
                    top: 0,
                    position: "absolute"
                }), j.load(function() {
                    d++;
                    2 == d && a.printArea.printArea()
                }), b.append(j)), c.load(function() {
                    d++;
                    d == 2 && a.printArea.printArea()
                }), a.printArea.append(b);
                else {
                    var g = d = 0,
                        e = 0;
                    a.printArea.empty();
                    g = 1 == flipBook.currentPageIndex || flipBook.currentPageIndex == bookConfig.totalPageCount ? 0 : 1;
                    for (f = 0; f <= g; f++) b = $("<div></div>"), f != g && b.css({
                            "page-break-after": "always"
                        }), b.css({
                            position: "relative"
                        }), b.css({
                            width: 500,
                            height: 500
                        }), j = 2 * parseInt(flipBook.currentPageIndex / 2) + f, 1 == flipBook.currentPageIndex && (j = 1), c = $("<img src = 'files/large/" + j + ".jpg'/>"), c.css({
                            "z-index": "200",
                            left: 0,
                            top: 0,
                            position: "absolute"
                        }),
                        b.append(c), "Show" == bookConfig.PrintButtonVisible && "" != bookConfig.printWatermarkFile && (j = $("<img src = '" + bookConfig.printWatermarkFile + "'/>"), j.css({
                            "z-index": "201",
                            left: 0,
                            top: 0,
                            position: "absolute"
                        }), e++, j.load(function() {
                            d++;
                            d == g + e + 1 && a.printArea.printArea()
                        }), b.append(j)), c.load(function() {
                            d++;
                            d == g + e + 1 && a.printArea.printArea()
                        }), a.printArea.append(b)
                }
                break;
            case "printRange":
                b = $("#rangeNum").val().split(",");
                c = [];
                e = g = f = 0;
                c = [];
                a.printArea.empty();
                for (f = 0; f < b.length; f++)
                    if (isNaN(b[f])) {
                        j = b[f].split("-");
                        for (d = parseInt(j[0]); d <= parseInt(j[1]); d++) c.push("<img src = 'files/large/" + d + ".jpg'/>")
                    } else c.push("<img src = 'files/large/" + b[f] + ".jpg'/>");
                for (f = 0; f < c.length; f++) b = $("<div></div>"), f != c.length - 1 && b.css({
                    "page-break-after": "always"
                }), b.css({
                    position: "relative"
                }), b.css({
                    width: 500,
                    height: 500
                }), $(c[f]).css({
                    "z-index": "200",
                    left: 0,
                    top: 0,
                    position: "absolute"
                }), b.append($(c[f])), "Show" == bookConfig.PrintButtonVisible && "" != bookConfig.printWatermarkFile && (j = $("<img src = '" + bookConfig.printWatermarkFile +
                    "'/>"), j.css({
                    "z-index": "201",
                    left: 0,
                    top: 0,
                    position: "absolute"
                }), e++, j.load(function() {
                    g++;
                    g == c.length + e && a.printArea.printArea()
                }), b.append(j)), $(c[f]).load(function() {
                    g++;
                    g == c.length + e && a.printArea.printArea()
                }), a.printArea.append(b)
        }
    });
    this.closeButton.bind(_event._end, function() {
        a.hideBox();
        a.showing = !1
    })
};

function sharePanel(a) {
    this.background = $("<div class='printBar' id='background'></div>");
    this.contentBack = $("<div class='printBack' id='contentBack'></div>");
    this.contentBox = $("<div class='printBG' id='contentBox'></div>");
    this.toolBox = $("<div class='printBox' id='toolBox'></div>");
    this.checkBox = $("<div class='printBox' id='checkBox'></div>");
    this.titleBox = $("<div class='printBox'></div>");
    this.shareUrl = $("<div class='printBox' id='shareUrl'></div>");
    this.shareCheck = $("<div class='printBox' id='shareCheck'></div>");
    this.shareCopy = $("<div class='printBox' id='shareCopy'></div>");
    this.shareUrlInput = $("<div class='printBox'><input type='text' id='utlField' size='13' style='text-align: left'/></div>");
    this.shareUrlSubmit = $('<button type="button">Copy</button>');
    this.shareCheckPanel = $("<div class='printBox'></div>");
    this.shareCheckTitle = $("<div class='printBox'></div>");
    this.shareCheckBar = $("<div class='printBox'></div>");
    this.textCheckField = new label("You can easily share this publication to social networks.Just cilck the appropriate button below.",
        this.shareCheckPanel);
    this.shareCopyPanel = $("<div class='printBox'></div>");
    this.shareCopyTitle = $("<div class='printBox'></div>");
    this.shareCopyTitle = $("<div class='printBox'></div>");
    this.shareCopyInput = $("<div class='printBox'><textarea id='copyField' size='13' style='text-align: left'/></div>");
    this.shareCopySubmit = $('<button type="button">Copy</button>');
    this.textCopyField = new label("Use the code below to embed this publication to your website.", this.shareCopyPanel);
    this.mainColor = colorAdd("#333333",
        160);
    this.showing = !1;
    this.width = windowWidth;
    this.height = windowHeight;
    this.contentWidth = 565;
    this.contentHeight = 390;
    this.background.css({
        height: this.height + "px",
        bottom: "0px"
    });
    this.contentBox.css({
        height: this.contentHeight + "px",
        width: this.contentWidth + "px",
        left: (this.width - this.contentWidth) / 2 + "px"
    });
    this.contentBack.css({
        height: this.contentHeight + 10 + "px",
        width: this.contentWidth + 10 + "px",
        left: (this.width - this.contentWidth) / 2 - 5 + "px"
    });
    this.contentBack.css({
        opacity: 0.5
    });
    this.toolBox.css({
        width: this.contentWidth +
            "px",
        height: "35px",
        top: "0px",
        left: "0px",
        background: "#333333"
    });
    this.checkBox.css({
        width: this.contentWidth + "px",
        height: this.contentHeight - 35 + "px",
        top: "35px",
        left: "0px"
    });
    this.contentBox.css({
        top: (this.height - this.contentHeight) / 2 + "px"
    });
    this.contentBack.css({
        top: (this.height - this.contentHeight) / 2 - 5 + "px"
    });
    this.shareUrl.css({
        width: this.contentWidth + "px",
        height: "50px",
        top: "0px",
        left: "0px"
    });
    this.shareCheck.css({
        width: this.contentWidth + "px",
        height: "100px",
        top: "50px",
        left: "0px"
    });
    this.shareCopy.css({
        width: this.contentWidth +
            "px",
        height: this.contentHeight - 35 - 50 - 100 + "px",
        top: "150px",
        left: "0px"
    });
    this.shareUrlInput.css({
        width: "470px",
        height: "40px",
        "margin-left": "13px"
    });
    this.shareUrlInput.children("input").css({
        color: "black",
        "border-radius": "5px"
    });
    this.shareUrlInput.children("input").css({
        width: "470px",
        height: "30px"
    });
    this.shareUrlInput.children("input").css({
        "padding-left": "5px"
    });
    this.shareUrlInput.children("input").css({
        "border-width": "1px"
    });
    this.shareUrlSubmit.css({
        width: "50px",
        height: "33px",
        "margin-top": "10px",
        "margin-left": "500px",
        "border-radius": "5px"
    });
    this.shareCheckPanel.css({
        width: "538px",
        height: "80px",
        top: "10px",
        left: "13px",
        "border-radius": "5px"
    });
    this.shareCheckTitle.css({
        width: "38px",
        "font-size": "8px",
        "font-family": "arial",
        height: "15px",
        top: "3px",
        left: "23px",
        background: this.mainColor
    });
    this.shareCheckBar.css({
        width: "538px",
        height: "50px",
        bottom: "0px",
        left: "0px"
    });
    this.shareCheckPanel.css({
        "border-left": "1px solid " + colorDiv(this.mainColor, 120)
    });
    this.shareCheckPanel.css({
        "border-top": "1px solid " + colorDiv(this.mainColor,
            120)
    });
    this.shareCheckPanel.css({
        "border-right": "1px solid " + colorAdd(this.mainColor, 120)
    });
    this.shareCheckPanel.css({
        "border-bottom": "1px solid " + colorAdd(this.mainColor, 120)
    });
    this.shareCheckTitle.html("<b>Share</b>");
    this.shareCopyPanel.css({
        width: "538px",
        height: "180px",
        top: "10px",
        left: "13px",
        "border-radius": "5px"
    });
    this.shareCopyTitle.css({
        width: "74px",
        "font-size": "10px",
        "font-family": "arial",
        height: "20px",
        top: "3px",
        left: "23px",
        background: this.mainColor
    });
    this.shareCopyPanel.css({
        "border-left": "1px solid " +
            colorDiv(this.mainColor, 120)
    });
    this.shareCopyPanel.css({
        "border-top": "1px solid " + colorDiv(this.mainColor, 120)
    });
    this.shareCopyPanel.css({
        "border-right": "1px solid " + colorAdd(this.mainColor, 120)
    });
    this.shareCopyPanel.css({
        "border-bottom": "1px solid " + colorAdd(this.mainColor, 120)
    });
    this.shareCopyTitle.html("<b>Insert to Site</b>");
    this.shareCopyInput.css({
        width: "516px",
        height: "85px",
        "margin-left": "11px",
        top: "40px"
    });
    this.shareCopyInput.children("textarea").css({
        color: "black",
        "border-radius": "0px"
    });
    this.shareCopyInput.children("textarea").css({
        "padding-left": "5px"
    });
    this.shareCopyInput.children("textarea").css({
        width: "516px",
        height: "85px",
        "border-radius": "5px"
    });
    this.shareCopySubmit.css({
        width: "50px",
        height: "33px",
        "margin-top": "140px",
        "margin-left": "480px",
        "border-radius": "5px"
    });
    this.shareCopyInput.children("textarea").css({
        "border-left": "1px solid " + colorDiv(this.mainColor, 120)
    });
    this.shareCopyInput.children("textarea").css({
        "border-top": "1px solid " + colorDiv(this.mainColor, 120)
    });
    this.shareCopyInput.children("textarea").css({
        "border-right": "1px solid " +
            colorAdd(this.mainColor, 120)
    });
    this.shareCopyInput.children("textarea").css({
        "border-bottom": "1px solid " + colorAdd(this.mainColor, 120)
    });
    this.titleBox.css({
        width: "20px",
        height: "20px",
        left: "15px",
        position: "absolute"
    });
    this.titleBox.css({
        color: "#ffffff",
        top: "7px"
    });
    this.titleBox.css({
        "text-shadow": "1px 1px #000000",
        "font-family": "verdana"
    });
    $(this.titleBox).html("Share");
    $(a).append(this.background);
    $(a).append(this.contentBack);
    $(a).append(this.contentBox);
    $(this.contentBox).append(this.toolBox);
    $(this.contentBox).append(this.checkBox);
    $(this.checkBox).append(this.shareUrl);
    $(this.checkBox).append(this.shareCheck);
    $(this.checkBox).append(this.shareCopy);
    $(this.shareUrl).append(this.shareUrlInput);
    $(this.shareUrl).append(this.shareUrlSubmit);
    $(this.shareCheck).append(this.shareCheckPanel);
    $(this.shareCheck).append(this.shareCheckTitle);
    $(this.shareCheckPanel).append(this.shareCheckBar);
    $(this.shareCheckPanel).append(this.textCheckField);
    $(this.shareCopy).append(this.shareCopyPanel);
    $(this.shareCopy).append(this.shareCopyTitle);
    $(this.shareCopyPanel).append(this.shareCopyInput);
    $(this.shareCopyPanel).append(this.textCopyField);
    $(this.shareCopyPanel).append(this.shareCopySubmit);
    this.textCheckField.setLabelPosition(15, 8);
    this.textCopyField.setLabelPosition(15, 8);
    this.textCheckField.onResize(516, 30);
    this.textCopyField.onResize(516, 30);
    this.shareUrlSubmit.bind(_event._end, function() {
        copyToClipboard($("#utlField").val())
    });
    this.shareCopySubmit.bind(_event._end, function() {
        copyToClipboard($("#copyField").val())
    });
    this.contentBox.css({
        "text-shadow": "1px 1px #ffffff",
        background: this.mainColor
    });
    this.closeButton = $("<div></div>");
    this.closeButton.css({
        top: "0px",
        right: "0px",
        position: "absolute"
    });
    this.closeButton.append($("<img src='" + uiBaseURL + "close.png'/>").asImageButton());
    $(this.toolBox).append(this.closeButton);
    $(this.toolBox).append(this.titleBox);
    this.initShareBar(this.shareCheckBar);
    this.initEvent();
    this.background.css({
        display: "none"
    });
    this.contentBox.css({
        display: "none"
    });
    this.contentBack.css({
        display: "none"
    })
}

function copyToClipboard(a) {
    if (window.clipboardData) window.clipboardData.clearData(), window.clipboardData.setData("Text", a);
    else if (-1 != navigator.userAgent.indexOf("Opera")) window.location = a;
    else if (window.netscape) {
        try {
            netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect")
        } catch (b) {
            return alert("Your browser does not support clipboard.Please do it yourself."), !1
        }
        var c = Components.classes["@mozilla.org/widget/clipboard;1"].createInstance(Components.interfaces.nsIClipboard);
        if (c) {
            var d =
                Components.classes["@mozilla.org/widget/transferable;1"].createInstance(Components.interfaces.nsITransferable);
            if (d) {
                d.addDataFlavor("text/unicode");
                var e = {},
                    e = Components.classes["@mozilla.org/supports-string;1"].createInstance(Components.interfaces.nsISupportsString);
                e.data = a;
                d.setTransferData("text/unicode", e, 2 * a.length);
                if (!c) return !1;
                c.setData(d, null, Components.interfaces.nsIClipboard.kGlobalClipboard)
            }
        }
    } else alert("Your browser does not support clipboard.Please do it yourself.")
}
sharePanel.prototype.onResize = function() {
    this.contentWidth = 565;
    this.contentHeight = 390;
    this.width = windowWidth;
    this.height = windowHeight;
    this.background.css({
        height: this.height + "px",
        bottom: "0px"
    });
    this.contentBox.css({
        height: this.contentHeight + "px",
        width: this.contentWidth + "px",
        left: (this.width - this.contentWidth) / 2 + "px"
    });
    this.contentBack.css({
        height: this.contentHeight + 10 + "px",
        width: this.contentWidth + 10 + "px",
        left: (this.width - this.contentWidth) / 2 - 5 + "px"
    });
    this.toolBox.css({
        width: this.contentWidth + "px",
        height: "35px",
        top: "0px",
        left: "0px"
    });
    this.checkBox.css({
        width: this.contentWidth + "px",
        height: this.contentHeight - 35 + "px",
        top: "35px",
        left: "0px"
    });
    this.contentBox.css({
        top: (this.height - this.contentHeight) / 2 + "px"
    });
    this.contentBack.css({
        top: (this.height - this.contentHeight) / 2 - 5 + "px"
    });
    this.shareUrl.css({
        width: this.contentWidth + "px",
        height: "50px",
        top: "0px",
        left: "0px"
    });
    this.shareCheck.css({
        width: this.contentWidth + "px",
        height: "100px",
        top: "50px",
        left: "0px"
    });
    this.shareCopy.css({
        width: this.contentWidth + "px",
        height: this.contentHeight - 35 - 50 - 100 + "px",
        top: "150px",
        left: "0px"
    });
    this.shareUrlInput.css({
        width: "470px",
        height: "40px",
        "margin-left": "13px"
    });
    this.shareUrlInput.children("input").css({
        width: "470px",
        height: "30px"
    });
    this.shareUrlSubmit.css({
        width: "50px",
        height: "33px",
        "margin-top": "10px",
        "margin-left": "500px"
    });
    this.shareCheckPanel.css({
        width: "538px",
        height: "80px",
        top: "10px",
        left: "13px"
    });
    this.shareCheckTitle.css({
        width: "38px",
        height: "20px",
        top: "3px",
        left: "23px"
    });
    this.shareCopyPanel.css({
        width: "538px",
        height: "180px",
        top: "10px",
        left: "13px"
    });
    this.shareCopyTitle.css({
        width: "74px",
        height: "15px",
        top: "3px",
        left: "23px"
    });
    this.closeButton.css({
        top: "0px",
        right: "0px"
    })
};
sharePanel.prototype.setPosition = function(a, b, c) {
    void 0 == c && (c = ["left", "top"]);
    $(this.background).css(c[0], a + "px");
    $(this.background).css(c[1], b + "px")
};
sharePanel.prototype.getShowStatu = function() {
    return this.showing
};
sharePanel.prototype.setShowStatu = function(a) {
    this.showing = a
};
sharePanel.prototype.showshow = function() {
    $(this.background).fadeIn(500);
    $(this.contentBox).fadeIn(500);
    $(this.contentBack).fadeIn(500);
    this.showing = !0
};
sharePanel.prototype.hideBox = function() {
    $(this.background).fadeOut(500);
    $(this.contentBox).fadeOut(500);
    $(this.contentBack).fadeOut(500);
    this.showing = !1
};
sharePanel.prototype.initEvent = function() {
    var a = this;
    this.background.bind(_event._down, function() {
        a.hideBox();
        a.showing = !1
    });
    this.closeButton.bind(_event._end, function() {
        a.hideBox();
        a.showing = !1
    });
    this.closeButton.bind("mouseover", function() {
        a.closeButton.css({
            cursor: "pointer"
        })
    })
};
sharePanel.prototype.fillContent = function() {
    var a = $("<div/>");
    a.html(bookConfig.aboutContactInfoTxt);
    this.checkBox.append(a)
};
sharePanel.prototype.initShareBar = function(a) {
    var b = window.location.href,
        c = window.document.title,
        d = window.location.pathname,
        d = d.substring(0, d.lastIndexOf("/")) + "/files/thumb/1.jpg",
        e = "?&url=" + b + "&title=" + c + "&description=" + bookDescription + "&screenshot=" + d,
        b = this.initShareButton("email", e),
        c = this.initShareButton("facebook", e),
        d = this.initShareButton("google", e),
        f = this.initShareButton("mySpace", e),
        j = this.initShareButton("twitter", e),
        g = this.initShareButton("digg", e),
        e = this.initShareButton("more", e);
    a.append(b);
    shareButtonLeft = function(a) {
        return 10 + 35 * a
    };
    b.css({
        top: "10px",
        left: shareButtonLeft(0) + "px"
    });
    a.append(c);
    c.css({
        top: "10px",
        left: shareButtonLeft(1) + "px"
    });
    a.append(d);
    d.css({
        top: "10px",
        left: shareButtonLeft(2) + "px"
    });
    a.append(f);
    f.css({
        top: "10px",
        left: shareButtonLeft(3) + "px"
    });
    a.append(j);
    j.css({
        top: "10px",
        left: shareButtonLeft(4) + "px"
    });
    a.append(g);
    g.css({
        top: "10px",
        left: shareButtonLeft(5) + "px"
    });
    a.append(e);
    e.css({
        top: "10px",
        left: shareButtonLeft(6) + "px"
    });
    a = window.location.href;
    b = "<iframe frameborder='0'  width='240' height='210'  title='" +
        window.document.title + "' src='" + a + "' type='text/html' scrolling='no' marginwidth='0' marginheight='0'></iframe>";
    this.shareUrlInput.children("input").val(a);
    this.shareCopyInput.children("textarea").val(b)
};
sharePanel.prototype.initShareButton = function(a, b) {
    var c = $("<div style = 'position: absolute;width:30px;height:30px;'></div>"),
        d, e;
    switch (a) {
        case "email":
            e = "http://api.addthis.com/oexchange/0.8/forward/email/offer" + b;
            d = $("<div class='shareButton' ><img src='" + uiBaseURL + "email.png' class='shareBarImg' /></div>");
            break;
        case "facebook":
            e = "http://api.addthis.com/oexchange/0.8/forward/facebook/offer" + b;
            d = $("<div class='shareButton'><img src='" + uiBaseURL + "facebook.png' class='shareBarImg' /></div>");
            break;
        case "google":
            e = "http://api.addthis.com/oexchange/0.8/forward/igoogle/offer" + b;
            d = $("<div class='shareButton'><img src='" + uiBaseURL + "google.png' class='shareBarImg' /></div>");
            break;
        case "mySpace":
            e = "http://api.addthis.com/oexchange/0.8/forward/myspace/offer" + b;
            d = $("<div class='shareButton'><img src='" + uiBaseURL + "myspace.png' class='shareBarImg' /></div>");
            break;
        case "netvibes":
            e = "http://api.addthis.com/oexchange/0.8/forward/netvibes/offer" + b;
            d = $("<div class='shareButton'><img src='" + uiBaseURL + "netvibes.png' class='shareBarImg' /></div>");
            break;
        case "twitter":
            e = "http://api.addthis.com/oexchange/0.8/forward/twitter/offer" + b;
            d = $("<div class='shareButton'><img src='" + uiBaseURL + "twitter.png' class='shareBarImg' /></div>");
            break;
        case "digg":
            e = "http://api.addthis.com/oexchange/0.8/forward/digg/offer" + b;
            d = $("<div class='shareButton'><img src='" + uiBaseURL + "digg.png' class='shareBarImg' /></div>");
            break;
        case "more":
            e = "http://api.addthis.com/oexchange/0.8/offer" + b, d = $("<div class='shareButton'><img src='" + uiBaseURL + "more.png' class='shareBarImg' /></div>")
    }
    d.css({
        cursor: "pointer"
    });
    d.attr({
        title: "Share to " + a
    });
    d.bind(_event._end, function() {
        sendvisitinfo(2, getShownPageString());
        window.open(e, "_blank")
    });
    c.append(d);
    c.mouseenter(function() {
        $(c).css({
            "-webkit-box-shadow": "0 0 10px rgba(0, 0, 0, 0.5)",
            "-moz-box-shadow": "0 0 10px rgba(0, 0, 0, 0.5)",
            "-o-box-shadow": "0 0 10px rgba(0, 0, 0, 0.5)",
            "box-shadow": "0 0 10px rgba(0, 0, 0, 0.5)"
        })
    });
    c.mousedown(function() {});
    c.mouseup(function() {
        c.css("background-color", "");
        c.css({
            "-moz-box-shadow": "",
            "box-shadow": "",
            "-webkit-box-shadow": "",
            "-o-box-shadow": ""
        })
    });
    c.mouseleave(function() {
        c.css("background-color", "");
        c.css({
            "-moz-box-shadow": "",
            "box-shadow": "",
            "-webkit-box-shadow": "",
            "-o-box-shadow": ""
        })
    });
    return c
};

function helpBar(a) {
    this.background = $("<div class='printBar'></div>");
    this.contentBack = $("<div class='printBack'></div>");
    this.contentBox = $("<div class='printBG'></div>");
    this.toolBox = $("<div class='printBox'></div>");
    this.checkBox = $("<div class='printBox'></div>");
    this.titleBox = $("<div class='printBox'></div>");
    this.showing = !1;
    this.width = windowWidth;
    this.height = windowHeight;
    this.contentWidth = bookConfig.helpWidth;
    this.contentHeight = bookConfig.helpHeight;
    "" == userConfig.helpContentFileURL && (this.contentWidth =
        300, this.contentHeight = 200);
    this.mainColor = "#888888";
    this.background.css({
        height: this.height + "px",
        bottom: "0px"
    });
    this.contentBox.css({
        height: this.contentHeight + "px",
        width: this.contentWidth + "px",
        left: (this.width - this.contentWidth) / 2 + "px"
    });
    this.contentBack.css({
        height: this.contentHeight + 10 + "px",
        width: this.contentWidth + 10 + "px",
        left: (this.width - this.contentWidth) / 2 - 5 + "px"
    });
    this.contentBack.css({
        opacity: 0.5
    });
    this.toolBox.css({
        width: this.contentWidth + "px",
        height: "31px",
        top: "0px",
        left: "0px",
        background: "#333333"
    });
    this.checkBox.css({
        width: this.contentWidth + "px",
        height: this.contentHeight - 31 + "px",
        top: "31px",
        left: "0px"
    });
    this.contentBox.css({
        top: (this.height - this.contentHeight) / 2 + "px"
    });
    this.contentBack.css({
        top: (this.height - this.contentHeight) / 2 - 5 + "px"
    });
    $(a).append(this.background);
    $(a).append(this.contentBack);
    $(a).append(this.contentBox);
    $(this.contentBox).append(this.toolBox);
    $(this.contentBox).append(this.checkBox);
    this.contentBox.css({
        "text-shadow": "1px 1px #ffffff",
        background: "#dddddd"
    });
    this.closeButton =
        $("<div></div>");
    this.closeButton.css({
        top: "0px",
        right: "0px",
        position: "absolute"
    });
    this.titleBox.css({
        width: "20px",
        height: "20px",
        left: "15px",
        position: "absolute"
    });
    this.titleBox.css({
        color: "#ffffff",
        top: "7px"
    });
    this.titleBox.css({
        "text-shadow": "1px 1px #000000",
        "font-family": "verdana"
    });
    this.closeButton.append($("<img src='" + uiBaseURL + "close.png'/>").asImageButton());
    $(this.toolBox).append(this.closeButton);
    $(this.toolBox).append(this.titleBox);
    $(this.titleBox).html("Help");
    this.fillImage();
    this.initEvent();
    if (!userConfig.showHelpContentAtFirst || !userConfig.helpButtonVisible) this.background.css({
        display: "none"
    }), this.contentBox.css({
        display: "none"
    }), this.contentBack.css({
        display: "none"
    })
}
helpBar.prototype.onResize = function() {
    this.contentWidth = bookConfig.helpWidth;
    this.contentHeight = bookConfig.helpHeight;
    "" == userConfig.helpContentFileURL && (this.contentWidth = 300, this.contentHeight = 200);
    this.background.css({
        height: windowHeight + "px",
        bottom: "0px"
    });
    this.contentBox.css({
        height: this.contentHeight + "px",
        width: this.contentWidth + "px",
        left: (windowWidth - this.contentWidth) / 2 + "px"
    });
    this.contentBack.css({
        height: this.contentHeight + 10 + "px",
        width: this.contentWidth + 10 + "px",
        left: (windowWidth - this.contentWidth) /
            2 - 5 + "px"
    });
    this.toolBox.css({
        width: this.contentWidth + "px",
        height: "31px",
        top: "0px",
        left: "0px",
        background: "#333333"
    });
    this.checkBox.css({
        width: this.contentWidth + "px",
        height: this.contentHeight - 31 + "px",
        top: "31px",
        left: "0px"
    });
    this.contentBox.css({
        top: (windowHeight - this.contentHeight) / 2 + "px"
    });
    this.contentBack.css({
        top: (windowHeight - this.contentHeight) / 2 - 5 + "px"
    });
    this.closeButton.css({
        top: "0px",
        right: "0px"
    })
};
helpBar.prototype.setPosition = function(a, b, c) {
    void 0 == c && (c = ["left", "top"]);
    $(this.background).css(c[0], a + "px");
    $(this.background).css(c[1], b + "px")
};
helpBar.prototype.getShowStatu = function() {
    return this.showing
};
helpBar.prototype.setShowStatu = function(a) {
    this.showing = a
};
helpBar.prototype.showshow = function() {
    $(this.background).fadeIn(500);
    $(this.contentBox).fadeIn(500);
    $(this.contentBack).fadeIn(500);
    this.showing = !0
};
helpBar.prototype.hideBox = function() {
    $(this.background).fadeOut(500);
    $(this.contentBox).fadeOut(500);
    $(this.contentBack).fadeOut(500);
    this.showing = !1
};
helpBar.prototype.initEvent = function() {
    var a = this;
    this.background.bind(_event._down, function() {
        a.hideBox();
        a.showing = !1
    });
    this.closeButton.bind(_event._end, function() {
        a.hideBox();
        a.showing = !1
    });
    this.closeButton.bind("mouseover", function() {
        a.closeButton.css({
            cursor: "pointer"
        })
    })
};
helpBar.prototype.fillImage = function() {
    var a;
    "" != userConfig.helpContentFileURL ? a = $("<img src=" + userConfig.helpContentFileURL + "/>") : (a = $("<div></div>"), a.append($("<p><div><li>Drag the page corner to view</li></div></p>")), a.append($("<p><div><li>Double click to zoom in, out</li></div></p>")), a.css({
        "margin-left": "15px",
        "text-shadow": "0px 1px #ffffff",
        "font-weight": "bold",
        "font-size": "13px",
        "font-family": "verdana",
        left: "20px"
    }));
    this.checkBox.append(a)
};

function aboutBar(a) {
    this.background = $("<div class='printBar'></div>");
    this.contentBack = $("<div class='printBack'></div>");
    this.contentBox = $("<div class='printBG'></div>");
    this.toolBox = $("<div class='printBox'></div>");
    this.checkBox = $("<div class='printBox'></div>");
    this.checkLeftBox = $("<div class='printBox'></div>");
    this.checkRightBox = $("<div class='printBox'></div>");
    this.showing = !1;
    this.width = windowWidth;
    this.height = windowHeight;
    this.contentWidth = 532;
    this.contentHeight = 300;
    this.mainColor = "#888888";
    this.background.css({
        height: this.height + "px",
        bottom: "0px"
    });
    this.contentBox.css({
        height: this.contentHeight + "px",
        width: this.contentWidth + "px",
        left: (this.width - this.contentWidth) / 2 + "px"
    });
    this.contentBack.css({
        height: this.contentHeight + 10 + "px",
        width: this.contentWidth + 10 + "px",
        left: (this.width - this.contentWidth) / 2 - 5 + "px"
    });
    this.contentBack.css({
        opacity: 0.7
    });
    this.contentBack.setGradient("#222222", !1);
    this.toolBox.css({
        width: this.contentWidth + "px",
        height: "31px",
        top: "0px",
        left: "0px"
    });
    this.checkBox.css({
        width: this.contentWidth +
            "px",
        height: this.contentHeight - 31 + "px",
        top: "31px",
        left: "0px"
    });
    this.checkLeftBox.css({
        width: this.contentWidth / 2 - 10 + "px",
        height: this.contentHeight - 31 + "px",
        top: "0px",
        left: "10px"
    });
    this.checkRightBox.css({
        width: this.contentWidth / 2 - 10 + "px",
        height: this.contentHeight - 31 + "px",
        top: "0px",
        left: this.contentWidth / 2 + "px"
    });
    this.contentBox.css({
        top: (this.height - this.contentHeight) / 2 + "px"
    });
    this.contentBack.css({
        top: (this.height - this.contentHeight) / 2 - 5 + "px"
    });
    $(a).append(this.background);
    $(a).append(this.contentBack);
    $(a).append(this.contentBox);
    $(this.contentBox).append(this.toolBox);
    $(this.contentBox).append(this.checkBox);
    $(this.checkBox).append(this.checkLeftBox);
    $(this.checkBox).append(this.checkRightBox);
    $(this.contentBack).css({
        "border-radius": "10px"
    });
    $(this.contentBox).css({
        "border-radius": "10px"
    });
    $(this.toolBox).css({
        "font-family": "Tahoma",
        "font-size": "23px"
    });
    $(this.toolBox).css({
        "vertical-align": "middle",
        "text-align": "center"
    });
    $(this.toolBox).css({
        color: "#cccccc"
    });
    $(this.toolBox).html("<b>Contact</b>");
    $(this.contentBox).css({
        "text-shadow": "1px 1px #000000"
    });
    $(this.checkLeftBox).css({
        "font-family": "Georgia"
    });
    $(this.checkLeftBox).css({
        color: "#cccccc"
    });
    $(this.checkLeftBox).html("<p><font size=3><b>Contact Information</b></font></p><p><font size=1>ADDRESS</font><br><font size=0.5>" + bookConfig.AboutAddress + "</font></br></p><p><font size=1><b>EMAIL</b></font><br><a href=mailto:" + bookConfig.AboutEmail + "><font size=0.5 color='#cccccc'>" + bookConfig.AboutEmail + "</font></a></br></p><p><font size=1><b>WEBSITE</b></font><br><a href=" +
        bookConfig.AboutWebsite + "><font size=0.5 color='#cccccc'>" + bookConfig.AboutWebsite + "</font></a></br></p><p><font size=1><b>MOBILE</b></font><br><font size=0.5>" + bookConfig.AboutMobile + "</font></br></p>");
    $(this.checkRightBox).css({
        "font-family": "Georgia"
    });
    $(this.checkRightBox).css({
        color: "#cccccc"
    });
    $(this.checkRightBox).html("<p><font size=1><b>AUTHOR</b></font><br><font size=0.5>" + bookConfig.AboutAuthor + "</font></br></p><p><font size=1><b>DESCRIPTION</b></font><br><font size=0.5>" + bookConfig.AboutDescription +
        "</font></br></p>");
    this.closeButton = $("<div></div>");
    this.closeButton.css({
        top: "0px",
        right: "0px",
        position: "absolute"
    });
    this.closeButton.append($("<img src='" + uiBaseURL + "closeForm.png'/>").asImageButton());
    $(this.toolBox).append(this.closeButton);
    $(this.contentBack).css({
        border: "1px solid #666666"
    });
    $(this.contentBack).css({
        "-webkit-box-shadow": "0 0 1px rgba(40, 0, 0, 1)",
        "-moz-box-shadow": "0 0 1px rgba(40, 0, 0, 1)",
        "-o-box-shadow": "0 0 1px rgba(40, 0, 0, 1)",
        "box-shadow": "0 0 1px rgba(40, 0, 0, 1)"
    });
    this.fillContent();
    this.initEvent();
    $(this.background).css({
        display: "none"
    });
    $(this.contentBox).css({
        display: "none"
    });
    $(this.contentBack).css({
        display: "none"
    })
}
aboutBar.prototype.onResize = function() {
    this.contentWidth = 532;
    this.contentHeight = 300;
    this.background.css({
        height: windowHeight + "px",
        bottom: "0px"
    });
    this.contentBox.css({
        height: this.contentHeight + "px",
        width: this.contentWidth + "px",
        left: (windowWidth - this.contentWidth) / 2 + "px"
    });
    this.contentBack.css({
        height: this.contentHeight + 10 + "px",
        width: this.contentWidth + 10 + "px",
        left: (windowWidth - this.contentWidth) / 2 - 5 + "px"
    });
    this.toolBox.css({
        width: this.contentWidth + "px",
        height: "31px",
        top: "0px",
        left: "0px"
    });
    this.checkBox.css({
        width: this.contentWidth +
            "px",
        height: this.contentHeight - 31 + "px",
        top: "31px",
        left: "0px"
    });
    this.contentBox.css({
        top: (windowHeight - this.contentHeight) / 2 + "px"
    });
    this.contentBack.css({
        top: (windowHeight - this.contentHeight) / 2 - 5 + "px"
    });
    this.closeButton.css({
        top: "0px",
        right: "0px"
    })
};
aboutBar.prototype.setPosition = function(a, b, c) {
    void 0 == c && (c = ["left", "top"]);
    $(this.background).css(c[0], a + "px");
    $(this.background).css(c[1], b + "px")
};
aboutBar.prototype.getShowStatu = function() {
    return this.showing
};
aboutBar.prototype.setShowStatu = function(a) {
    this.showing = a
};
aboutBar.prototype.showshow = function() {
    $(this.background).fadeIn(500);
    $(this.contentBox).fadeIn(500);
    $(this.contentBack).fadeIn(500);
    this.showing = !0
};
aboutBar.prototype.hideBox = function() {
    $(this.background).fadeOut(500);
    $(this.contentBox).fadeOut(500);
    $(this.contentBack).fadeOut(500);
    this.showing = !1
};
aboutBar.prototype.initEvent = function() {
    var a = this;
    this.background.bind(_event._down, function() {
        a.hideBox();
        a.showing = !1
    });
    this.closeButton.bind(_event._end, function() {
        a.hideBox();
        a.showing = !1
    });
    this.closeButton.bind("mouseover", function() {
        a.closeButton.css({
            cursor: "pointer"
        })
    })
};
aboutBar.prototype.fillContent = function() {};

function link(a, b) {
    var c = $("<div style='position: absolute;'></div>"),
        d = pageEditor[a - 1][b].action;
    void 0 != d.length && (d = d[0]);
    var e = d.url;
    null != e && "www." == e.substr(0, 4).toLowerCase() && (e = "http://" + e);
    var f;
    try {
        f = d.triggerEventType
    } catch (j) {
        f = null
    }
    c.bind(_event._down, function() {
        var g = colorTo0x(pageEditor[a - 1][b].downColor);
        c.css({
            "background-color": g,
            opacity: pageEditor[a - 1][b].downAlpha
        });
        f == PageEditor.TriggerEventType.MouseDown && (d.actionType == PageEditor.ActionType.GOTO_PAGE ? gotoPageFun(d.pageIndex) :
            d.actionType == PageEditor.ActionType.OPEN_URL && (sendvisitinfo(3, a), window.open(e, d.linkTarget)));
        3 == browserType ? event.cancelBubble = !0 : event.stopPropagation()
    });
    c.bind("mouseover", function() {
        var g = colorTo0x(pageEditor[a - 1][b].overColor);
        c.css({
            "background-color": g,
            opacity: pageEditor[a - 1][b].overAlpha
        });
        f == PageEditor.TriggerEventType.MouseOver && (d.actionType == PageEditor.ActionType.GOTO_PAGE ? gotoPageFun(d.pageIndex) : d.actionType == PageEditor.ActionType.OPEN_URL && window.open(e, d.linkTarget))
    });
    c.bind(isTouch ?
        _event._end : "mouseout",
        function() {
            var g = colorTo0x(pageEditor[a - 1][b].outColor);
            c.css({
                "background-color": g,
                opacity: pageEditor[a - 1][b].outAlpha
            });
            f == PageEditor.TriggerEventType.MouseOut && (d.actionType == PageEditor.ActionType.GOTO_PAGE ? gotoPageFun(d.pageIndex) : d.actionType == PageEditor.ActionType.OPEN_URL && window.open(e, d.linkTarget))
        });
    $.fn.extend(c, {
        onResize: function(d, e) {
            var f = pageEditor[a - 1][b].location;
            c.css({
                top: f.y * e + "px",
                left: f.x * d + "px",
                width: f.width * d + "px",
                height: f.height * e + "px"
            })
        }
    });
    return c
}

function initLink(a, b, c, d) {
    this.link = $("<div style='position: absolute;'></div>");
    this.config = $.extend({
        width: 0.2,
        height: 0.2,
        x: 0.2,
        y: 0.2,
        action: null
    }, b);
    this.pw = c;
    this.ph = d;
    this.width = this.pw * this.config.width;
    this.height = this.ph * this.config.height;
    a.append(this.link);
    void 0 == this.config.downColor ? (this.config.downColor = getColor("LinkDownColor", "#808080"), this.config.downAlpha = getInt("LinkAlpha", 0.6), this.config.overColor = this.config.downColor, this.config.outColor = this.config.downColor, this.config.overAlpha =
        this.config.downAlpha / 2, this.config.outAlpha = 0) : (this.config.downColor = colorTo0x(this.config.downColor), this.config.overColor = colorTo0x(this.config.overColor), this.config.outColor = colorTo0x(this.config.outColor));
    this.link.css({
        position: "absolute",
        top: this.config.y * this.ph + "px",
        left: this.config.x * this.pw + "px",
        width: this.width + "px",
        height: this.height + "px"
    });
    this.father = a;
    this.initEvt()
}
initLink.prototype.onResize = function(a, b) {
    this.pw = a;
    this.ph = b;
    this.width = this.config.width * a;
    this.height = this.config.height * b;
    var c = this.config.y * b,
        d = this.config.x * a;
    this.link.css({
        width: this.width + "px",
        height: this.height + "px"
    });
    this.setPosition(d, c);
    if (null != this.form) this.form.onResize(bookContainer.width(), bookContainer.height());
    if (null != this.slide) this.slide.onResize(bookContainer.width(), bookContainer.height());
    if (null != this.audios) this.audios.onResize(bookContainer.width(), bookContainer.height())
};
initLink.prototype.setPosition = function(a, b) {
    this.link.css({
        left: a + "px",
        top: b + "px"
    })
};
initLink.prototype.initEvt = function() {
    var a = this;
    this.flag = 0;
    this.audios = this.slide = this.form = null;
    this.linkURL;
    if (null != a.config.action) {
        try {
            void 0 != this.config.action.length && (this.config.action = this.config.action[0]), this.linkURL = this.config.action.url
        } catch (b) {}
        var c;
        null != this.linkURL && "www" == this.linkURL.substr(0, 3).toLowerCase() && (this.linkURL = "http://" + this.linkURL);
        try {
            c = this.config.action.triggerEventType
        } catch (d) {
            c = null
        }
    }
    this.link.bind(_event._down, function() {
        a.link.css({
            "background-color": a.config.downColor,
            opacity: a.config.downAlpha
        });
        c == PageEditor.TriggerEventType.MouseDown && actionEvent.call(a);
        3 == browserType ? event.cancelBubble = !0 : event.stopPropagation()
    });
    this.link.bind("mouseover", function() {
        a.link.css({
            "background-color": a.config.overColor,
            opacity: a.config.overAlpha
        });
        c == PageEditor.TriggerEventType.MouseOver && actionEvent.call(a)
    });
    this.link.bind(isTouch ? _event._end : "mouseout", function() {
        a.link.css({
            "background-color": a.config.outColor,
            opacity: a.config.outAlpha
        });
        c == PageEditor.TriggerEventType.MouseOut &&
            actionEvent.call(a)
    })
};

function thickness(a) {
    var b = $("<div></div>"),
        c;
    c = a ? $("<img src='" + uiBaseURL + "thickness_left.png' style='position:absolute;' />") : $("<img src='" + uiBaseURL + "thickness.png' style='position:absolute;' />");
    b.append(c);
    $.fn.extend(b, {
        visible: !0,
        onResize: function(a, e) {
            b.css({
                width: a,
                height: e
            });
            c.css({
                width: a,
                height: e
            })
        },
        setThicknessPosition: function(c, e) {
            b.css({
                left: c,
                top: e,
                position: "absolute",
                "z-index": a ? 8 : 9
            })
        },
        hideThickness: function() {
            b.css("display", "none")
        },
        showThickness: function() {
            b.css("display",
                "block")
        },
        setVisible: function(a) {
            b.css({
                display: a ? "block" : "none"
            });
            b.visible = a
        }
    });
    return b
};
var gradientColorA, gradientColorB, gradientColorAngle, backGroundImgURL, zoomButtonEnable = !0,
    thumbButtonEnable = !0,
    shareButtonEnable = !0,
    searchButtonEnable = !0,
    bookmarkButtonEnable = !0,
    windowWidth = 0,
    windowHeight = 0,
    toolBarColor, buttonColor, originTotalPageCount, totalPageCount, leftShadowWidth = 50,
    rightShadowWidth = 50,
    zoomPageWidth, zoomPageHeight, flipTime = 600,
    isRegister = !1,
    bookDescription, bookTitle, showFlipButton, normalEventRadius = 1E4,
    singleEventRadius = 1E4,
    stopFlip = !1,
    flipping = !1,
    isTouch = isTouchDevice(),
    bookContainer,
    tmpContainer, zoomBook, flipBook, toolBar, pageIndexTextField, topMargin, leftMargin, bottomMargin, rightMargin, bookType = BookType.normal_book,
    resizeBookAfterFlip = !1,
    frmSearch, frmShare, _rimFlip, flipAudio, backgroundAudio, auto_player, productName, homePage, _tipsBox, frmBookmark, thumbnail, moreBar, oriPageIndex = 1,
    googleID, hardPageEnable, uiBaseURL, browserType, rightToLeft = !1,
    isFlipPdf = !1,
    flaudio = 0,
    flagspeak = 0,
    hadBMT, selectedLanguage, bgSound, backgroundObj, bmtBox, iconArray, toolBarIconsURL, ua = navigator.userAgent.toLowerCase(),
    device = {};
device.name = ua.match(/ipad/) ? "ipad" : ua.match(/ipod/) ? "ipod" : ua.match(/iphone/) ? "iphone" : ua.match(/android/) ? "android" : ua.match(/mac|win|linux/) ? "pc" : "other";
var userConfig = {
        leftShadowWidth: 30,
        leftShadowAlpha: 1,
        rightShadowWidth: 30,
        rightShadowAlpha: 1,
        shortcutButtonHeight: 370,
        shortcutButtonWidth: 90,
        autoPlayButtonVisible: "true",
        downloadButtonVisible: "false",
        downloadURL: "",
        bgSoundButtonVisible: "yes",
        bgSoundAutoStart: "yes",
        bgSoundURL: "",
        homeButtonVisible: !0,
        homeURL: "",
        printButtonVisible: "yes"
    },
    originWindow = Point(0, 0),
    testLog = $("<div width='300px' height='300px' style='position:absolute;left:10px;top:10px;'></div>"),
    logStr = function(a) {
        testLog[0].innerHTML = a
    },
    singlePageBook, leftShortcutButton, rightShortcutButton, init = function() {
        if (compareov()) {
            "" == userConfig.bgSoundURL && (userConfig.bgSoundButtonVisible = !1);
            _singleBook = $("#singleBook");
            pageIndexTextField = $("#currentPageIndexTextField");
            flipBook = rightToLeft ? new rightToLeftNormalBook : new normalBook;
            flipBook.create(bookContainer);
            zoomBook = new initZoomBook(bookContainer);
            backgroundObj = new initBackground(tmpContainer, gradientColorA, gradientColorB, gradientColorAngle, windowWidth, windowHeight, backGroundImgURL);
            var a = $("<div id='singleBookMask' style='display: none; position: absolute;'></div>");
            _singleBook = $("<div id='singleBook' class='singleBook' style='position: absolute;'></div>");
            var b = $("<div id='singlePrePage' style='position: absolute;z-index: 1;'></div>"),
                c = $("<div id='singleCurPage' style='position: absolute;z-index: 3;'></div>"),
                d = $("<div id='singleNextPage' style='position: absolute;z-index: 2;'></div>");
            bookContainer.append(a);
            a.append(_singleBook);
            _singleBook.append(b);
            _singleBook.append(c);
            _singleBook.append(d);
            singlePageBook = new singleBook;
            singlePageBook.Create();
            showFlipButton && (leftShortcutButton = new initLeftButton(tmpContainer), rightShortcutButton = new initRightButton(tmpContainer));
            frmBookmark = new tableContent({
                caption: getLanguage("frmBookMark", "Table of Content"),
                closeIconURL: uiBaseURL + "close.png",
                mainColor: bookConfig.bookmarkBackground,
                fontColor: bookConfig.bookmarkFontColor
            }, tmpContainer);
            frmSearch = new searchForm({
                caption: getLanguage("frmSearch", "Search"),
                closeIconURL: uiBaseURL +
                    "close.png",
                mainColor: bookConfig.searchBackground,
                fontColor: bookConfig.searchFontColor
            }, tmpContainer);
            _rimFlip = new rimFlip;
            1 != oriPageIndex && _rimFlip.removeRimFlip();
            onStageResize();
            _tipsBox = new tipsBox("This is the last page", bookContainer);
            _tipsBox.setPosition((windowWidth - _tipsBox.getWidth()) / 2, 100);
            auto_player = new autoFlip;
            bookType = windowWidth >= windowHeight ? BookType.normal_book : BookType.single_book;
            isTouch ? window.onorientationchange = function() {
                    window.setTimeout(function() {
                        onStageResize()
                    }, 200)
                } :
                $(window).resize(function() {
                    onStageResize()
                });
            var e = window.location.hash;
            "" != e && 3 < e.length && "#p=" == e.substr(0, 3) ? isNaN(e.substr(3, e.length - 3)) ? (flipBook.movetoCenter(30, 20, flipBook.currentPageIndex), TurnonAutoFlip()) : window.setTimeout(function() {
                var a = parseInt(e.substr(3, e.length - 3));
                a == 1 && flipBook.movetoCenter(30, 20, 1);
                gotoPageFun(a);
                TurnonAutoFlip()
            }, 1E3) : (flipBook.movetoCenter(30, 20, flipBook.currentPageIndex), TurnonAutoFlip());
            initEvent();
            setPageIndexTextField();
            if ("iphone" == device.name || "ipod" ==
                device.name || "#mobile" == window.location.hash) zoomBook.currentIndex = oriPageIndex, zoomBook.showPage.fillContent(zoomBook.currentIndex), changeShowBook(2), bookType = 2, $("#btnZoom").empty().append(getImage(toolBarIconsURL[6])).attr("title", getLanguage("btnZoomOut", "Zoom Out")), toolBar.changeButtonColor(bookConfig.iconColor), setCurrentIndexTextField(zoomBook.currentIndex, !1), thumbnail.clearHighLight(), thumbnail.setHighLight(zoomBook.currentIndex);
            2 == browserType && (_event._mousewheel = "DOMMouseScroll");
            !0 ==
                parseBool(bookConfig.mouseWheelFlip) && $(window).bind(_event._mousewheel, function(a) {
                    if (bookType == BookType.zoom_book) return false;
                    a = a.originalEvent;
                    Math.max(-1, Math.min(1, a.wheelDelta || -a.detail)) < 0 ? rightToLeft ? previousPageFun() : nextPageFun() : rightToLeft ? nextPageFun() : previousPageFun()
                });
            $(window).bind("keydown", function(a) {
                a = a.keyCode;
                a == KEY_CODE_LEFT && (rightToLeft ? nextPageFun() : previousPageFun());
                a == KEY_CODE_RIGHT && (rightToLeft ? previousPageFun() : nextPageFun());
                if (a == KEY_CODE_HOME || a == KEY_CODE_PAGEUP) rightToLeft ?
                    lastPageFun() : firstPageFun();
                if (a == KEY_CODE_END || a == KEY_CODE_PAGEDOWN) rightToLeft ? firstPageFun() : lastPageFun()
            });
            initFlipSound()
        } else alert("Purchase from www.flipbuilder.com to preview the book.")
    },
    TurnonAutoFlip = function() {
        !0 == parseBool(bookConfig.autoFlipOnStart) && window.setTimeout(function() {
            auto_player.start();
            toolBar.changeButtonColor(bookConfig.iconColor)
        }, 1E3)
    },
    initFlipSound = function() {
        flipAudio = $("<audio preload><audio>");
        flipAudio.attr("src", "style/raw/flipsound.mp3");
        tmpContainer.append(flipAudio)
    },
    isPlaying, initBGSound = function() {
        if (!(void 0 == userConfig.bgSoundURL || "" == userConfig.bgSoundURL || !userConfig.bgSoundButtonVisible)) {
            var a = 0,
                b = userConfig.bgSoundButtonVisible,
                c = this; - 1 == userConfig.backgroundSoundLoop ? sound = $("<audio autoplay loop><audio>") : (sound = $("<audio autoplay><audio>"), sound.bind("ended", function() {
                a < userConfig.backgroundSoundLoop - 1 ? sound[0].play() : sound[0].pause();
                a++
            }));
            b && (isPlaying = !0);
            sound.attr("src", userConfig.bgSoundURL);
            this.pause = function() {
                sound[0].pause();
                isPlaying =
                    false
            };
            this.play = function() {
                sound[0].play();
                isPlaying = true
            };
            tmpContainer.append(sound);
            $("#btnSound").bind(_event._end, function() {
                if (b) {
                    c.pause();
                    isPlaying = b = false
                } else {
                    c.play();
                    isPlaying = b = true
                }
            });
            $("#moreBtnSound").bind(_event._end, function() {
                if (b) {
                    c.pause();
                    isPlaying = b = false
                } else {
                    c.play();
                    isPlaying = b = true
                }
            })
        }
    };

function createAll() {
    selectLanguage(bookConfig.language);
    tmpContainer = $("<div class='bookStage' id= 'tmpContainer'></div>");
    bookContainer = $("<div class='bookStage' id= 'bookContainer'></div>");
    $("body").append(tmpContainer);
    tmpContainer.append(bookContainer);
    bookContainer.css({
        "-webkit-transform": "perspective(1000px)",
        "-moz-transform": "perspective(1000px)"
    });
    windowWidth = bookContainer.width();
    windowHeight = bookContainer.height();
    originWindow = Point(tmpContainer.width(), tmpContainer.height());
    var a = new loadingBook(tmpContainer,
        bookConfig.loadingBackground);
    toolBarIconsURL = [uiBaseURL + "BackGround.jpg", uiBaseURL + "Last.png", uiBaseURL + "next.png", uiBaseURL + "prev.png", uiBaseURL + "First.png", uiBaseURL + "ZoomIn.png", uiBaseURL + "ZoomOut.png", uiBaseURL + "autoPlay.png", uiBaseURL + "stopAutoPlay.png", uiBaseURL + "thumbnails.png", uiBaseURL + "sharethis.png", uiBaseURL + "search.png", uiBaseURL + "download.png", uiBaseURL + "home.png", uiBaseURL + "bookmark.png", uiBaseURL + "soundOn.png", uiBaseURL + "soundOff.png", uiBaseURL + "previous_normal.png", uiBaseURL + "previous_normal_down.png",
        uiBaseURL + "next_normal.png", uiBaseURL + "next_normal_down.png", uiBaseURL + "print.png", uiBaseURL + "Help.png", uiBaseURL + "about.png", uiBaseURL + "moreBar.png", uiBaseURL + "languageChange.png", uiBaseURL + "thumbnails_down.png"
    ];
    $(window).loader(toolBarIconsURL, function(b) {
        a.hide();
        iconArray = b;
        toolBar = new loadToolBar(tmpContainer, iconArray);
        init();
        bgSound = new initBGSound;
        window.setTimeout(function() {
                bookContainer.animate({
                    opacity: 1
                }, 1E3);
                toolBar.show();
                showFlipButton && (leftShortcutButton.show(), rightShortcutButton.show())
            },
            200)
    });
    if ("undefined" != typeof speakConfig && "none" != speakConfig.title) {
        var b = $("<div id='LectureBook' style='position:absolute;right:20px;bottom:40px; width:190px; height:330px;'></div>"),
            c = $("<div id='LectureBox' style='position:absolute;z-index:70; width:190px; height:88px;top:0;opacity:0.6;background-image:url(style/icon/lecturetext.png)'></div>"),
            d = $("<div style='position:absolute;overflow: hidden; height:60px;top:5px;'><div id='LectureText' style='word-break: break-word;color:#fff;padding:5px 10px 5px 10px;text-shadow: 2px 2px 2px #000000;'></div></div>"),
            e = $("<div id='LecturePre' style='position:absolute; top:95px;left:25px;z-index:100;'></div>");
        LectureCon = $("<div id='LectureCon' style='position:absolute; display:none;z-index:101; width:105px; height:105px; top:150px;left:40px;background-image:url(style/icon/co_bg.png)'><div style='position:absolute; cursor: pointer;width:23px;height:23px;left:41px; top:15px'><img id='lstop' src='style/icon/Pause.png' title='Pause' /></div><div style='position:absolute; cursor: pointer;width:23px;height:23px;right:15px;top:41px;'><img id='lnext' src='style/icon/Nextpage.png' title='Next Page' /></div><div style='position:absolute; cursor: pointer;width:23px;height:23px;left:15px;top:41px;'><img id='lpre' src='style/icon/Pre.png' title='Previous Page' /></div><div style='position:absolute; cursor: pointer;width:23px;height:23px;left:41px;bottom:15px;'><img id='laudio' src='style/icon/Muteclose.png' title='Mute' /></div></div>");
        LectureClose = $("<div id='LectureClose' style='position:absolute; right:60px; top:85px;display:none;z-index:200;cursor:pointer;'><img style='z-index:200;' src='style/icon/Closediv.png' title='Close' /></div>");
        LectureShow = $("<div id='LectureShow' style='position:absolute; right:0;bottom:35px;display:none;z-index:200;cursor:pointer;'><img  src='style/icon/LectureShow.png' /></div>");
        bookContainer.append(b);
        b.append(c);
        c.append(d);
        b.append(e);
        b.append(LectureCon);
        b.append(LectureClose);
        bookContainer.append(LectureShow)
    }
}

function LectureAudio(a) {
    var b = document.getElementById("LecturePre");
    b.innerHTML = "<img id='LectureSpe' style='width:126px;' src='" + uiBaseURL + "speak.gif' />";
    var c = document.createElement("audio");
    c.setAttribute("id", "LectureID");
    c.type = "audio/mpeg";
    c.setAttribute("autoplay", "autoplay");
    0 == speakConfig.page[a].type ? c.src = speakConfig.page[a].speakmp3 : (c.src = speakConfig.page[a].importmp3, $("#LectureBox").css("display", "none"));
    b.appendChild(c)
}

function LectureSoll(a) {
    var b = $("#LectureText");
    $("#LectureBox").css("display", "block");
    b.html(speakConfig.page[a].speaktext);
    var c = b.height();
    40 < c && b.animate({
        marginTop: -c + 40 + "px"
    }, 90 * c, function() {
        b.css("marginTop", 0);
        $("#LectureBox").css("display", "none");
        $("#LectureSpe").attr("src", uiBaseURL + "nospeak.gif");
        a + 1 < totalPageCount / 2 + 1 && 0 == flaudio && (nextPageFun(), LectureAudio(a + 1), LectureSoll(a + 1))
    })
}

function initToolBar() {
    thumbnail = new thumbnailBar(tmpContainer);
    initLogoBar();
    setPageIndexTextField();
    $("#btnLast") && $("#btnLast").asButton();
    $("#btnFirst") && $("#btnFirst").asButton();
    $("#btnRight").asButton();
    $("#btnLeft").asButton();
    $("#btnZoom").asButton();
    $("#btnThumb").asButton();
    $("#btnShare").asButton();
    $("#btnSearch").asButton();
    $("#btnAutoPlay").asButton();
    $("#btnDownload").asButton();
    $("#btnSound").asButton();
    $("#btnHome").asButton();
    getBool("autoPlayAutoStart", !1) && ($("#autoPlayImg").attr("src",
        uiBaseURL + "stopAutoPlay.png"), $("#btnAutoPlay").attr("title", "Stop Auto Play"))
}
var setToolBarPosition = function() {
        var a = 45;
        $("#toolBarBack").css({
            width: windowWidth + "px",
            height: "42px"
        });
        var a = 45,
            b = $("#tfPageIndex").width();
        $("#btnLast").css({
            right: "3px"
        });
        $("#btnRight").css({
            right: a + 3 + "px"
        });
        $("#tfPageIndex").css({
            right: 2 * a + 3 + "px",
            top: "5px"
        });
        $("#btnLeft").css({
            right: 2 * a + b + 3 + "px"
        });
        $("#btnFirst").css({
            right: 3 * a + b + 3 + "px"
        });
        b = 4 * a + b + 3;
        zoomButtonEnable && ($("#btnZoom").css({
            right: b + "px"
        }), b += a);
        userConfig.autoPlayButtonVisible && ($("#btnAutoPlay").css({
            right: b + "px"
        }), b += a);
        userConfig.bgSoundButtonVisible &&
            ($("#btnSound").css({
                right: b + "px"
            }), b += a);
        thumbButtonEnable && ($("#btnThumb").css({
            right: b + "px"
        }), b += a);
        shareButtonEnable && ($("#btnShare").css({
            right: b + "px"
        }), b += a);
        searchButtonEnable && ($("#btnSearch").css({
            right: b + "px"
        }), b += a);
        bookmarkButtonEnable && ($("#btnBookmark").css({
            right: b + "px"
        }), b += a);
        userConfig.downloadButtonVisible && ($("#btnDownload").css({
            right: b + "px"
        }), b += a);
        userConfig.homeButtonVisible && $("#btnHome").css({
            right: b + "px"
        })
    },
    onStageResize = function() {
        resizeBookAfterFlip = !1;
        if (bookType == BookType.normal_book &&
            nBookStatu == normalBookStatu.book_statu_auto_flip || bookType == BookType.single_book && 1 == $(singlePageBook).data().bookStatu) resizeBookAfterFlip = !0;
        else {
            windowWidth = tmpContainer.width();
            windowHeight = tmpContainer.height();
            var a, b, c = windowWidth,
                d = windowHeight,
                e = bookConfig.largePageWidth;
            if ("iphone" == device.name || "ipod" == device.name) d = window.innerWidth > window.innerHeight ? 320 == window.innerHeight ? 271 : window.innerHeight + 60 : window.innerHeight + 60, c = window.innerWidth, tmpContainer.css({
                    width: c + "px",
                    height: d + "px"
                }),
                window.setTimeout(function() {
                    window.scrollTo(0, 1)
                }, 30), windowWidth = tmpContainer.width(), windowHeight = tmpContainer.height();
            var f = bookConfig.largePageHeight,
                j = c - leftMargin - rightMargin,
                g = d - topMargin - bottomMargin - toolBar.getHeight();
            backgroundObj.onResize(c, d);
            var k = 2 * e / f;
            j / g > k ? (b = g, a = k * b) : (a = j, b = f * a / (2 * e));
            flipBook.onResize(a / 2, b);
            var m = (windowWidth - bookConfig.leftMargin - bookConfig.rightMargin - a) / 2 + bookConfig.leftMargin,
                n = m - a / 4,
                k = m + a / 4;
            rightToLeft && (n = m + a / 4, k = m - a / 4);
            a = parseBool(bookConfig.retainBookCenter);
            !0 == a && (1 == flipBook.currentPageIndex && (m = n), n = bookConfig.totalPageCount, 1 == n % 2 && n++, flipBook.currentPageIndex == n && (m = k));
            flipBook.setCSS({
                top: (g - b) / 2 + topMargin + toolBar.getTopHeight() + "px",
                left: m + "px"
            });
            try {
                var l = window.location.hash;
                "" != l && 3 < l.length && "#p=" == l.substr(0, 3) && !isNaN(l.substr(3, l.length - 3)) && parseInt(l.substr(3, l.length - 3)) == flipBook.currentPageIndex && flipBook.movetoCenter(0, 0, flipBook.currentPageIndex)
            } catch (p) {}
            flipBook.fillNearPage(flipBook.getCurrentPageIndex());
            b = getPageWidthHeight(c,
                d - toolBar.getHeight() - 20, e, f);
            singlePageBook.onResize(b.x, b.y);
            e = toolBar.getTopHeight() + 10;
            singlePageBook.setBookPosition((c - b.x) / 2, e);
            e = b = 0;
            zoomBook.width < j && (b = (j - zoomBook.width) / 2);
            zoomBook.height < g && (e = (g - zoomBook.height) / 2);
            zoomBook.setPosition(b, e);
            zoomBook.onResize(j, g);
            flipBook.setThicknessPosition();
            bookType == BookType.normal_book && c < d && (changeShowBook(1), bookType = BookType.single_book, $(singlePageBook).data().gotoPage(flipBook.currentPageIndex), setCurrentIndexTextField($(singlePageBook).data().currentPageIndex, !1), thumbnail.clearHighLight(), thumbnail.setHighLight(flipBook.currentPageIndex));
            bookType == BookType.single_book && c >= d && (changeShowBook(0), bookType = BookType.normal_book, flipBook.gotoPage($(singlePageBook).data().currentPageIndex), setCurrentIndexTextField(flipBook.currentPageIndex, !0), thumbnail.clearHighLight(), thumbnail.setHighLight($(singlePageBook).data().currentPageIndex));
            thumbnail.onResize();
            toolBar.setButtonPosition();
            frmSearch && (frmSearch.resize(240, g), frmSearch.setTop(toolBar.getTopHeight() +
                10));
            void 0 != frmBookmark && (c = Math.max(300, j / 4), frmBookmark.resize(c, g), frmBookmark.setTop(toolBar.getTopHeight() + 10));
            (300 > windowWidth || 300 > windowHeight) && showFlipButton ? (leftShortcutButton.setVisible(!1), rightShortcutButton.setVisible(!1)) : 300 <= windowWidth && 300 <= windowHeight && showFlipButton && leftShortcutButton.showing && (leftShortcutButton.setVisible(!0), rightShortcutButton.setVisible(!0));
            void 0 != _tipsBox && _tipsBox.setPosition((windowWidth - _tipsBox.getWidth()) / 2, 100);
            showFlipButton && (leftShortcutButton.setPosition(),
                rightShortcutButton.setPosition())
        }
    };

function initEvent() {
    var a = -1,
        b = void 0,
        c, d, e = !1;
    bookContainer.bind(_event._move, function(f) {
        f = isTouch ? f.originalEvent.touches : [f];
        if (2 == f.length && e) {
            var j = $(singlePageBook).data(),
                g = globalToBook(!0, f[0].pageX, f[0].pageY, !0),
                f = globalToBook(!0, f[1].pageX, f[1].pageY);
            if (15 < Math.abs(g.x - c.x) || 15 < Math.abs(g.y - c.y) || 15 < Math.abs(f.x - d.x) || 15 < Math.abs(f.y - d.y)) zoomBook.currentIndex = j.currentPageIndex, zoomBook.showPage.fillContent(zoomBook.currentIndex), changeShowBook(2), bookType = 2, $("#zoomImg").attr("src",
                uiBaseURL + "ZoomOut.png"), $("#btnZoom").attr("title", "Zoom Out"), setCurrentIndexTextField(zoomBook.currentIndex, !1), thumbnail.clearHighLight(), thumbnail.setHighLight(zoomBook.currentIndex);
            return !1
        }
        1 == bookType && !0 == $(singlePageBook).data().bookMouseDown && (flipPoint = globalToBook(!0, f[0].pageX, f[0].pageY, !0), $(singlePageBook).data().flippingPage.flipToPoint(flipPoint), -1 != a && (b = flipPoint.x > a ? !1 : !0), a = flipPoint.x);
        return !1
    });
    bookContainer.bind(_event._end, function(a) {
        var c = $(singlePageBook).data(),
            a =
            isTouch ? a.originalEvent.changedTouches : [a];
        e = !1;
        if (bookType == BookType.single_book)
            if (c.bookMouseDown) {
                var a = globalToBook(!0, a[0].pageX, a[0].pageY, !0),
                    d = !0,
                    k;
                if (c.isLeft && a.x >= c.pageWidth / 2 || !c.isLeft && a.x < c.pageWidth / 2) d = !1;
                void 0 != b && (d = !(c.isLeft ^ b));
                d || (rightToLeft ? (c.gotoPageIndex = c.isLeft ? c.currentPageIndex + 1 : c.currentPageIndex - 1, c.differPageNum = c.isLeft ? 1 : -1) : (c.gotoPageIndex = c.isLeft ? c.currentPageIndex - 1 : c.currentPageIndex + 1, c.differPageNum = c.isLeft ? -1 : 1));
                k = rightToLeft ? d ? Point(c.isLeft ? 0 :
                    2, c.isTop ? 0 : 1) : Point(c.isLeft ? 2 : 0, c.isTop ? 0 : 1) : d ? Point(c.isLeft ? -1 : 1, c.isTop ? 0 : 1) : Point(c.isLeft ? 1 : -1, c.isTop ? 0 : 1);
                k = Point(k.x * c.pageWidth, k.y * c.pageHeight);
                d ? c.timer("tr", 10, 20, k, a, !1, !0, !d) : (playFlipSound(), c.timer("tr", 20, 20, k, a, !1, !0, !d));
                c.bookMouseDown = !1
            } else flipping && 2 == c.bookStatu && (stopFlip = !0)
    });
    bookContainer.bind(_event._down, function(f) {
        $("#currentPageIndexTextField")[0] && $("#currentPageIndexTextField")[0].blur();
        thumbnail.getShowStatu() && thumbnail.hideBox();
        a = -1;
        b = void 0;
        var j = $(singlePageBook).data(),
            f = isTouch ? f.originalEvent.touches : [f];
        if (2 == f.length) {
            if (2 == j.bookStatu) {
                var g;
                "tl" == j.flippingPage.realCorner ? g = rightToLeft ? Point(0, 0) : Point(-j.pageWidth, 0) : "tr" == j.flippingPage.realCorner ? g = rightToLeft ? Point(2 * j.pageWidth, j.pageHeight) : Point(j.pageWidth, 0) : "bl" == j.flippingPage.realCorner ? g = rightToLeft ? Point(0, j.pageHeight) : Point(-j.pageWidth, j.pageHeight) : "br" == j.flippingPage.realCorner && (g = rightToLeft ? Point(2 * j.pageWidth, j.pageHeight) : Point(j.pageWidth, j.pageHeight));
                j.stopTimer();
                j.timer(j.flippingPage.realCorner,
                    10, 20, g, j.flipPoint, !1, !0, !1)
            }
            c = globalToBook(!0, f[0].x, f[0].y, !0);
            d = globalToBook(!0, f[1].x, f[1].y, !0);
            f = j.isPointInPage(c, j.pageWidth, j.pageHeight);
            g = j.isPointInPage(d, j.pageWidth, j.pageHeight);
            e = f && g;
            return j.bookMouseDown = !1
        }
        if (bookType == BookType.single_book && 0 == j.bookStatu) {
            var f = globalToBook(!0, f[0].pageX, f[0].pageY, !0),
                k;
            if (0 > f.x || f.x > j.pageWidth || 0 > f.y || f.y > j.pageHeight) return;
            if (Math.pow(f.x, 2) + Math.pow(f.y, 2) < singleEventRadius)
                if (k = "tl", j.isLeft = !0, j.isTop = !0, g = Point(-j.pageWidth, 0), rightToLeft) {
                    if (g =
                        Point(0, 0), j.flippingPage = j.currentPage, j.gotoPageIndex = j.currentPageIndex + 1, j.currentPageIndex == originTotalPageCount) {
                        _tipsBox.setCaption("This is the last page");
                        _tipsBox.showTipsBox();
                        return
                    }
                } else {
                    if (j.flippingPage = j.previousPage, j.gotoPageIndex = j.currentPageIndex - 1, 1 == j.currentPageIndex) {
                        _tipsBox.setCaption("This is the first page");
                        _tipsBox.showTipsBox();
                        return
                    }
                } else if (Math.pow(f.x, 2) + Math.pow(j.pageHeight - f.y, 2) < singleEventRadius)
                if (k = "bl", j.isLeft = !0, j.isTop = !1, g = Point(-j.pageWidth, j.pageHeight),
                    rightToLeft) {
                    if (g = Point(0, j.pageHeight), j.flippingPage = j.currentPage, j.gotoPageIndex = j.currentPageIndex + 1, j.currentPageIndex == originTotalPageCount) {
                        _tipsBox.setCaption("This is the last page");
                        _tipsBox.showTipsBox();
                        return
                    }
                } else {
                    if (j.flippingPage = j.previousPage, j.gotoPageIndex = j.currentPageIndex - 1, 1 == j.currentPageIndex) {
                        _tipsBox.setCaption("This is the first page");
                        _tipsBox.showTipsBox();
                        return
                    }
                } else if (Math.pow(j.pageWidth - f.x, 2) + Math.pow(f.y, 2) < singleEventRadius)
                if (k = "tr", j.isLeft = !1, j.isTop = !0,
                    g = Point(j.pageWidth, 0), rightToLeft) {
                    if (g = Point(2 * j.pageWidth, 0), j.flippingPage = j.previousPage, j.gotoPageIndex = j.currentPageIndex - 1, 1 == j.currentPageIndex) {
                        _tipsBox.setCaption("This is the first page");
                        _tipsBox.showTipsBox();
                        return
                    }
                } else {
                    if (j.flippingPage = j.currentPage, j.gotoPageIndex = j.currentPageIndex + 1, j.currentPageIndex == originTotalPageCount) {
                        _tipsBox.setCaption("This is the last page");
                        _tipsBox.showTipsBox();
                        return
                    }
                } else if (Math.pow(j.pageWidth - f.x, 2) + Math.pow(j.pageHeight - f.y, 2) < singleEventRadius)
                if (k =
                    "br", j.isLeft = !1, j.isTop = !1, g = Point(j.pageWidth, j.pageHeight), rightToLeft) {
                    if (j.gotoPageIndex = j.currentPageIndex - 1, g = Point(2 * j.pageWidth, j.pageHeight), j.flippingPage = j.previousPage, 1 == j.currentPageIndex) {
                        _tipsBox.setCaption("This is the first page");
                        _tipsBox.showTipsBox();
                        return
                    }
                } else {
                    if (j.flippingPage = j.currentPage, j.gotoPageIndex = j.currentPageIndex + 1, j.currentPageIndex == originTotalPageCount) {
                        _tipsBox.setCaption("This is the last page");
                        _tipsBox.showTipsBox();
                        return
                    }
                } else return;
            _rimFlip.removeRimFlip();
            j.bookStatu = 2;
            j.flippingPage.beginFlip(k);
            j.timer(k, 10, 20, f, g, !1, !1)
        } else if (2 == bookType) return;
        return !1
    });
    bookContainer.bind(_event._down, function() {
        isShareShow && (shareBar.hideShareBar(), isShareShow = !1);
        isMoreShow && (moreBar.hideMoreBar(), isMoreShow = !1)
    });
    "undefined" != typeof speakConfig && "none" != speakConfig.title && ($("#LecturePre").bind(_event._down, function() {
        "none" === $("#LectureCon").css("display") ? ($("#LectureCon").css("display", "block"), $("#LectureClose").css("display", "block")) : ($("#LectureCon").css("display",
            "none"), $("#LectureClose").css("display", "none"));
        $("#lnext").asImageButton();
        $("#lpre").asImageButton()
    }), $("#lstop").bind(_event._down, function() {
        var a = document.getElementById("LectureID"),
            b = document.getElementById("LectureSpe");
        0 == flaudio ? (a.pause(), $("#LectureText").stop(!0), b.src = "style/icon/nospeak.gif", $("#lstop").attr("src", uiBaseURL + "Play.png"), $("#lstop").attr("title", "Play"), $("#LectureBox").css("display", "none"), flaudio = 1) : (flaudio = 0, LectureSoll(Math.floor(flipBook.getCurrentPageIndex() /
            2)), a.play(), b.src = "style/icon/speak.gif", $("#lstop").attr("src", uiBaseURL + "Pause.png"), $("#lstop").attr("title", "Pause"))
    }), $("#lnext").bind(_event._down, function() {
        nextPageFun()
    }), $("#lnext").bind(_event._move, function() {
        $("#lnext").attr("src", uiBaseURL + "Nextpage_down.png")
    }), $("#lpre").bind(_event._down, function() {
        previousPageFun()
    }), $("#lpre").bind(_event._move, function() {
        $("#lpre").attr("src", uiBaseURL + "Pre_down.png")
    }), $("#laudio").bind(_event._down, function() {
        var a = document.getElementById("LectureID");
        !1 == a.muted ? (a.muted = !0, $("#laudio").attr("src", uiBaseURL + "Mute.png"), $("#laudio").attr("title", "Play"), $("#LectureSpe").attr("src", uiBaseURL + "nospeak.gif")) : (a.muted = !1, $("#laudio").attr("src", uiBaseURL + "Muteclose.png"), $("#laudio").attr("title", "Mute"), $("#LectureSpe").attr("src", uiBaseURL + "speak.gif"))
    }), $("#LectureClose").bind(_event._down, function() {
        document.getElementById("LectureID").pause();
        $("#LectureText").stop(!0);
        $("#LectureBook").css("display", "none");
        $("#LectureShow").css("display",
            "block");
        flagspeak = 1
    }), $("#LectureShow").bind(_event._down, function() {
        $("#LectureBook").css("display", "block");
        $("#LectureShow").css("display", "none");
        $("#LectureBox").css("display", "none");
        $("#LectureSpe").attr("src", uiBaseURL + "nospeak.gif");
        $("#LectureCon").css("display", "none");
        $("#LectureClose").css("display", "none");
        flagspeak = 0
    }))
}
var selectLanguage = function(a) {
        0 == language.length && (selectedLanguage = []);
        for (var b, c = 0; c < language.length; c++) {
            if (language[c].language == a) {
                selectedLanguage = language[c];
                break
            }
            "english" == language[c].language && (b = language[c]);
            c == language.length - 1 && (selectedLanguage = b)
        }
    },
    changeLanguage = function(a) {
        selectLanguage(a);
        toolBar.changeLanguage();
        moreBar.changeLanguage();
        frmBookmark.setCaption(getLanguage("frmBookMark", "Book Mark"));
        frmSearch.setCaption(getLanguage("frmSearch", "Search"))
    };
jQuery(document).ready(function() {
    $.browser.msie && 9 > $.browser.version && alert("Your browser version is too low, please use version 9.0 or above.");
    void 0 == window.aliasConfig && (window.aliasConfig = {});
    uiBaseURL = getString("UIBaseURL", "");
    "string" == typeof uiBaseURL && "/" != uiBaseURL.substr(uiBaseURL.length - 1, 1) && "" != uiBaseURL && (uiBaseURL += "/");
    uiBaseURL += "style/icon/";
    zoomButtonEnable = getBool("ZoomButtonVisible", !0);
    thumbButtonEnable = getBool("ThumbnailsButtonVisible", !0);
    shareButtonEnable = getBool("ShareButtonVisible", !0);
    searchButtonEnable = getBool("SearchButtonVisible", !1);
    bookmarkButtonEnable = getBool("BookMarkButtonVisible", !1);
    originTotalPageCount = getInt("totalPageCount", 2);
    totalPageCount = originTotalPageCount + (1 == originTotalPageCount % 2 ? 1 : 0);
    zoomPageWidth = getInt("largePageWidth", 640);
    zoomPageHeight = getInt("largePageHeight", 920);
    gradientColorA = getColor("bgBeginColor", "#a93268");
    gradientColorB = getColor("bgEndColor", "#588643");
    gradientColorAngle = getInt("bgMRotation", 0);
    backGroundImgURL = getString("backGroundImgURL",
        "");
    bookDescription = getString("bookDescription", "This is a jQuery book.");
    bookTitle = getString("bookTitle", "flipBook");
    showFlipButton = getBool("flipshortcutbutton", !0);
    if ("iphone" == device.name || "ipod" == device.name) showFlipButton = !1;
    productName = getString("productName", "Demo created by Flip PDF for iPad");
    homePage = getString("homePage", "http://www.flipbuilder.com/");
    leftMargin = getInt("leftMargin", 10);
    topMargin = getInt("topMargin", 10);
    rightMargin = getInt("rightMargin", 10);
    bottomMargin = getInt("bottomMargin",
        10);
    rightToLeft = getBool("RightToLeft", !1);
    isFlipPdf = getString("isFlipPdf", !1);
    try {
        _gaq[0] = ["_setAccount", getString("googleAnalyticsID", "")]
    } catch (a) {}
    oriPageIndex = getInt("OriginPageIndex", 1);
    hardPageEnable = getBool("HardPageEnable", !1);
    userConfig.leftShadowWidth = getInt("LeftShadowWidth", 40);
    userConfig.leftShadowAlpha = getInt("LeftShadowAlpha", 1);
    userConfig.rightShadowWidth = getInt("RightShadowWidth", 40);
    userConfig.rightShadowAlpha = getInt("RightShadowAlpha", 1);
    userConfig.shortcutButtonHeight = getInt("ShortcutButtonHeight",
        0);
    userConfig.shortcutButtonWidth = getInt("ShortcutButtonWidth", 0);
    userConfig.autoPlayButtonVisible = getBool("AutoPlayButtonVisible", !0);
    userConfig.downloadButtonVisible = getBool("DownloadButtonVisible", !1);
    userConfig.downloadURL = getString("DownloadURL", "");
    userConfig.bgSoundButtonVisible = getBool("BackgroundSoundButtonVisible", !0);
    userConfig.bgSoundAutoStart = getBool("BackgroundSoundAutoStart", !0);
    userConfig.backgroundSoundLoop = getInt("BackgroundSoundLoop", -1);
    userConfig.bgSoundURL = getString("BackgroundSoundURL",
        "");
    userConfig.homeButtonVisible = getBool("HomeButtonVisible", !1);
    userConfig.homeURL = getString("HomeURL", "");
    userConfig.printButtonVisible = getBool("PrintButtonVisible", !1);
    userConfig.printWatermarkFile = getString("printWatermarkFile", "");
    userConfig.helpButtonVisible = getBool("HelpButtonVisible", !1);
    userConfig.helpContentFileURL = getString("helpContentFileURL", "");
    userConfig.helpWidth = getInt("helpWidth", 0);
    userConfig.helpHeight = getInt("helpHeight", 0);
    userConfig.showHelpContentAtFirst = getBool("showHelpContentAtFirst", !1);
    userConfig.aboutButtonVisible = getBool("aboutButtonVisible", !1);
    userConfig.aboutContactInfoTxt = getString("aboutContactInfoTxt", "");
    "" == userConfig.bgSoundURL && (userConfig.bgSoundButtonVisible = !1);
    if (void 0 == window.bookConfig) alert("Miss book config.");
    else if (void 0 == window.pageEditor && (window.pageEditor = void 0), void 0 == window.textForPages && (window.textForPages = [], searchButtonEnable = !1), void 0 == window.ols && (window.ols = {}, bookmarkButtonEnable = !1), void 0 == window.bmtConfig && (window.bmtConfig = []), void 0 ==
        window.language && (window.language = []), $.browser.msie ? browserType = 3 : $.browser.mozilla ? browserType = 2 : $.browser.safari ? browserType = 1 : $.browser.opera && (browserType = 4), createAll(), "undefined" != typeof speakConfig && "none" != speakConfig.title) LectureAudio(0), LectureSoll(0)
});
var _thumbBar, isThumbShow = !1,
    thumbBar = function() {
        var a = $("<div class='thumbBG'></div>"),
            b = $("<img src='" + uiBaseURL + "close.png' style='top:0px;right:1px;position:absolute;'>"),
            c = $("<div class='thumbBox'></div>"),
            d = $("<div class='scrollButton' style='display:none; left:0px;'></div>"),
            e = $("<div class='scrollButton' style='display:none;right:0px;'></div>"),
            f = $("<img src='" + uiBaseURL + "previous_down.png' style='position:absolute;top:-5px;left:-5px;' />"),
            j = $("<img src='" + uiBaseURL + "next_down.png' style='position:absolute;top:-5px;left:-5px;' />");
        b.asImageButton();
        d.asButton();
        e.asButton();
        _thumbBar = $("<div class='thumbBar' style='display:none;'></div>");
        _thumbBar.append(a);
        _thumbBar.append(b);
        a.append(c);
        a.append(d);
        a.append(e);
        bookContainer.append(_thumbBar);
        d.append(f);
        e.append(j);
        d.bind(_event._end, function() {
            if (!_thumbBar.thumbDrag) {
                var a = parseInt(c.css("left").substring(0, c.css("left").length - 2));
                _thumbBar.contentPos = -158 > a ? a + 200 : 42;
                c.animate({
                    left: _thumbBar.contentPos
                }, 100, "linear")
            }
        });
        e.bind(_event._end, function() {
            if (!_thumbBar.thumbDrag) {
                var a =
                    parseInt(c.css("left").substring(0, c.css("left").length - 2));
                _thumbBar.contentPos = a + c.width() > _thumbBar.width() + 158 ? a - 200 : _thumbBar.width() - 42 - c.width();
                c.animate({
                    left: _thumbBar.contentPos
                }, 100, "linear")
            }
        });
        $.fn.extend(_thumbBar, {
            thumbDown: Point(0, 0),
            thumbMove: Point(0, 0),
            thumbEnd: 0,
            thumbStartTime: 0,
            thumbMoveTime: 0,
            thumbEndTime: 0,
            contentPos: 0,
            thumbMouseDown: !1,
            thumbDrag: !1,
            dragEnable: !1,
            showThumb: function() {
                _thumbBar.css("display", "block");
                _thumbBar.animate({
                    bottom: 0
                }, 300, "linear")
            },
            hideThumb: function() {
                _thumbBar.animate({
                        bottom: -120
                    },
                    300, "linear")
            },
            thumbW_H: function() {
                var a = {
                    x: 0,
                    y: 0
                };
                1 < bookConfig.largePageWidth / bookConfig.largePageHeight ? (a.x = 60, a.y = 60 * bookConfig.largePageHeight / bookConfig.largePageWidth) : (a.y = 60, a.x = 60 * bookConfig.largePageWidth / bookConfig.largePageHeight);
                return a
            },
            addAllItem: function() {
                for (var a = _thumbBar.thumbW_H(), b = getInt("totalPageCount"), d = 1; d <= b; d++) {
                    var e = initThumbItem();
                    c.append(e);
                    e.css("top", "12px");
                    e.css("left", 65 * (d - 1) + "px");
                    e.fillImg(d);
                    e.setImgSize(a.x, a.y, 60, 60)
                }
                c.css("width", 65 * b);
                c.width() >=
                    windowWidth ? (c.css("left", "42px"), _thumbBar.dragEnable = !0, _thumbBar.showSrcollButton()) : c.css("left", (_thumbBar.width() - c.width()) / 2)
            },
            onResize: function() {
                c.width() >= windowWidth ? (0 > parseInt(c.css("left").substring(0, c.css("left").length - 2)) || (c.css("left", "42px"), _thumbBar.dragEnable = !0), _thumbBar.showSrcollButton()) : (c.css("left", (_thumbBar.width() - c.width()) / 2), _thumbBar.hideSrcollButton(), _thumbBar.dragEnable = !1)
            },
            showSrcollButton: function() {
                d.css("display", "block");
                e.css("display", "block")
            },
            hideSrcollButton: function() {
                d.css("display",
                    "none");
                e.css("display", "none")
            }
        });
        b.bind(_event._end, function() {
            _thumbBar.hideThumb();
            isThumbShow = !1
        });
        _thumbBar.addAllItem();
        _thumbBar.bind(_event._down, function(a) {
            _thumbBar.thumbDrag = !1;
            a = isTouch ? a.originalEvent.touches : [a];
            _thumbBar.thumbDown = Point(a[0].pageX, a[0].pageY);
            _thumbBar.thumbMouseDown = !0;
            _thumbBar.contentPos = c.offset().left;
            return !1
        });
        _thumbBar.bind(_event._move, function(a) {
            if (_thumbBar.thumbMouseDown && _thumbBar.dragEnable) return a = isTouch ? a.originalEvent.touches : [a], _thumbBar.thumbMove =
                Point(a[0].pageX, a[0].pageY), !_thumbBar.thumbDrag && 30 < Math.abs(_thumbBar.thumbDown.x - _thumbBar.thumbMove.x) && (_thumbBar.thumbDrag = !0), a = _thumbBar.contentPos - (_thumbBar.thumbDown.x - _thumbBar.thumbMove.x), 42 < a ? c.css({
                    left: "42px"
                }) : a + c.width() < _thumbBar.width() - 42 ? c.css({
                    left: _thumbBar.width() - c.width() - 42 + "px"
                }) : c.css({
                    left: a + "px"
                }), !1
        });
        _thumbBar.bind(_event._end, function() {
            return _thumbBar.thumbMouseDown = !1
        })
    },
    initThumbItem = function() {
        var a = $("<div class='thumbItem'></div>"),
            b = $("<img style='position:absolute' />");
        a.append(b);
        var c;
        $.fn.extend(a, {
            setThumbItemPosition: function(b, c) {
                a.css("top", b);
                a.css("left", c)
            },
            onResize: function(b, c) {
                a.css("width", b);
                a.css("height", c)
            },
            setImgSize: function(a, c, f, j) {
                b.css("width", a);
                b.css("height", c);
                b.css("top", (j - c) / 2 + "px");
                b.css("left", (f - a) / 2 + "px")
            },
            fillImg: function(d) {
                d != c && (c = d, b.attr("src", getPageDir(c, "thumb")), d = $("<span id='thumbPageIndex' style='position:absolute;width:50px;padding:10px 5px;color:#999999 !important;' ><center>" + c + "</center></span>"), a.append(d), d.css({
                    top: "52px",
                    left: "0px"
                }))
            },
            setImgPosition: function(a, c) {
                b.css("top", a + "px");
                b.css("left", c + "px")
            }
        });
        a.bind(_event._end, function() {
            if (!_thumbBar.thumbDrag) return gotoPageFun(c), _thumbBar.thumbMouseDown = !1
        });
        a.mouseover(function() {
            a.css("background-color", "#888888")
        });
        a.mouseout(function() {
            a.css("background-color", "transparent")
        });
        return a
    },
    isShareShow = !1,
    initShareBar = function() {
        shareBar = $("<div class='shareBar' style='display:none;opacity:0;'>");
        bookContainer.append(shareBar);
        shareBar.css("z-index", 2002);
        shareBar.css("bottom",
            "38px");
        shareBar.css("right", "300px");
        shareBar.css({
            background: bookConfig.formColor,
            "-webkit-box-shadow": "0 0 10px rgba(40, 0, 0, 0.5)",
            "-moz-box-shadow": "0 0 10px rgba(40, 0, 0, 0.5)",
            "box-shadow": "0 0 10px rgba(40, 0, 0, 0.5)",
            "-moz-border-radius": "5px",
            "-webkit-border-radius": "5px",
            "border-radius": "5px"
        });
        shareBar.addBorderShadow(bookConfig.formColor, 3, 3);
        var a = window.location.href,
            b = window.document.title,
            c = window.location.pathname,
            c = c.substring(0, c.lastIndexOf("/")) + "/files/thumb/1.jpg",
            d = "?&url=" +
            a + "&title=" + b + "&description=" + bookDescription + "&screenshot=" + c,
            a = initShareButton("email", d),
            b = initShareButton("facebook", d),
            c = initShareButton("google", d),
            e = initShareButton("mySpace", d),
            f = initShareButton("twitter", d),
            j = initShareButton("digg", d),
            d = initShareButton("more", d);
        shareBar.append(a);
        shareButtonTop = function(a) {
            return 8 + 35 * a
        };
        a.css({
            top: shareButtonTop(0) + "px",
            left: "10px"
        });
        shareBar.append(b);
        b.css({
            top: shareButtonTop(1) + "px",
            left: "10px"
        });
        shareBar.append(c);
        c.css({
            top: shareButtonTop(2) + "px",
            left: "10px"
        });
        shareBar.append(e);
        e.css({
            top: shareButtonTop(3) + "px",
            left: "10px"
        });
        shareBar.append(f);
        f.css({
            top: shareButtonTop(4) + "px",
            left: "10px"
        });
        shareBar.append(j);
        j.css({
            top: shareButtonTop(5) + "px",
            left: "10px"
        });
        shareBar.append(d);
        d.css({
            top: shareButtonTop(6) + "px",
            left: "10px"
        });
        shareBar.css({
            height: shareButtonTop(7) + "px"
        });
        $.fn.extend(shareBar, {
            showShareBar: function() {
                shareBar.css("display", "block");
                shareBar.animate({
                    opacity: 0.9
                }, 200, "linear")
            },
            hideShareBar: function() {
                shareBar.animate({
                        opacity: 0
                    },
                    200, "linear",
                    function() {
                        shareBar.css("display", "block")
                    })
            },
            setSharePosition: function(a, b, c) {
                void 0 == c && (c = ["right", "bottom"]);
                shareBar.css(c[0], a + "px");
                shareBar.css(c[1], b + "px")
            }
        })
    },
    initShareButton = function(a, b) {
        var c = $("<div style = 'position: absolute;width:135px;height:33px;color:white;font-family:arial;font-size:12px'></div>"),
            d, e;
        switch (a) {
            case "email":
                e = "http://api.addthis.com/oexchange/0.8/forward/email/offer" + b;
                d = $("<div class='shareButton' ><img src='" + uiBaseURL + "email.png' class='shareImg' />Email</div>");
                break;
            case "facebook":
                e = "http://api.addthis.com/oexchange/0.8/forward/facebook/offer" + b;
                d = $("<div class='shareButton'><img src='" + uiBaseURL + "facebook.png' class='shareImg' />Facebook</div>");
                break;
            case "google":
                e = "http://api.addthis.com/oexchange/0.8/forward/igoogle/offer" + b;
                d = $("<div class='shareButton'><img src='" + uiBaseURL + "google.png' class='shareImg' />Google+</div>");
                break;
            case "mySpace":
                e = "http://api.addthis.com/oexchange/0.8/forward/myspace/offer" + b;
                d = $("<div class='shareButton'><img src='" +
                    uiBaseURL + "myspace.png' class='shareImg' />MySpace</div>");
                break;
            case "netvibes":
                e = "http://api.addthis.com/oexchange/0.8/forward/netvibes/offer" + b;
                d = $("<div class='shareButton'><img src='" + uiBaseURL + "netvibes.png' class='shareImg' />netvibes</div>");
                break;
            case "twitter":
                e = "http://api.addthis.com/oexchange/0.8/forward/twitter/offer" + b;
                d = $("<div class='shareButton'><img src='" + uiBaseURL + "twitter.png' class='shareImg' />Twitter</div>");
                break;
            case "digg":
                e = "http://api.addthis.com/oexchange/0.8/forward/digg/offer" +
                    b;
                d = $("<div class='shareButton'><img src='" + uiBaseURL + "digg.png' class='shareImg' />Digg</div>");
                break;
            case "more":
                e = "http://api.addthis.com/oexchange/0.8/offer" + b, d = $("<div class='shareButton'><img src='" + uiBaseURL + "more.png' class='shareImg' />More</div>")
        }
        d.css({
            cursor: "pointer"
        });
        d.bind(_event._down, function() {
            sendvisitinfo(2, getShownPageString());
            window.open(e, "_blank")
        });
        c.append(d);
        c.mousedown(function() {
            c.css("background-color", "#0000f0")
        });
        c.mouseup(function() {
            c.css("background-color", "transparent");
            shareBar.hideShareBar()
        });
        return c
    },
    logoBar, initLogoBar = function() {
        logoBar = $("#logoBar");
        if (void 0 != bookConfig.appLogoIcon || "" != bookConfig.appLogoIcon) {
            var a = bookConfig.appLogoLinkURL,
                b = getString("appLogoOpenWindow", "_blank");
            if ("_Self" == b || "Self" == b || "self" == b) b = "_self";
            void 0 == a || "" == a ? (a = "javascript:Void();", b = "_self") : "http" != a.substr(0, 4) && (a = "http://" + a);
            var c = $("<img />"),
                d = 0,
                e = 0;
            c.load(function() {
                d = isNaN(bookConfig.logoHeight) || bookConfig.logoHeight == "" || bookConfig.logoHeight == null || bookConfig.logoHeight ==
                    void 0 ? toolBar.getLogoHeight() : bookConfig.logoHeight;
                var a = c.width() * d / c.height();
                c.css({
                    width: a + "px",
                    height: d + "px"
                });
                e = (toolBar.getLogoHeight() - d) / 2;
                logoBar.css({
                    position: "absolute",
                    top: e + "px"
                });
                logoBar.append(c)
            });
            c.attr({
                src: bookConfig.appLogoIcon
            });
            c.css({
                position: "absolute"
            })
        }
        var f = 0,
            f = isNaN(bookConfig.logoPadding) || "" == bookConfig.logoPadding || null == bookConfig.logoPadding || void 0 == bookConfig.logoPadding ? 0 : bookConfig.logoPadding;
        logoBar.css({
            left: f + "px"
        });
        logoBar.bind(_event._down, function() {
            window.open(a,
                b)
        });
        logoBar.bind("mouseover", function() {
            logoBar.css({
                cursor: "pointer"
            })
        })
    },
    setPageIndexTextField = function() {
        if (!(void 0 == pageIndexTextField || null == pageIndexTextField) && !(void 0 == pageIndexTextField[0] || null == pageIndexTextField[0])) {
            setCurrentIndexTextField(flipBook.getCurrentPageIndex(), bookType == BookType.normal_book);
            var a = [8, 13, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105];
            pageIndexTextField.css({
                padding: "3px"
            });
            pageIndexTextField.bind("keydown", function(b) {
                if (0 > a.indexOf(b.keyCode)) return !1;
                13 == b.keyCode && (b = pageIndexTextField.val().replace(/\D/g, ""), b = Math.min(Math.max(b, 1), totalPageCount), gotoPageFun(b))
            });
            pageIndexTextField.bind("blur", function() {
                var a = flipBook.currentPageIndex;
                bookType == BookType.single_book && (a = $(singlePageBook).data().currentPageIndex);
                bookType == BookType.zoom_book && (a = zoomBook.currentIndex);
                setCurrentIndexTextField(a, bookType == BookType.normal_book)
            });
            pageIndexTextField.bind(_event._end, function() {
                pageIndexTextField.val("")
            })
        }
    },
    languageChange = function(a) {
        var b = this;
        this.background = $("<div class='printBar'></div>");
        this.contentBox = $("<div class='printBG'></div>");
        var c = 0;
        this.showing = !1;
        $(this.background).css({
            width: windowWidth + "px",
            height: windowHeight + "px"
        });
        $(this.contentBox).css({
            width: "200px"
        });
        $(this.contentBox).css({
            background: "transparent"
        });
        a.append(this.background);
        a.append(this.contentBox);
        c = 45 * language.length + 10;
        this.contentBox.css({
            height: c + "px"
        });
        $(this.contentBox).css({
            left: (windowWidth - 200) / 2 + "px",
            top: (windowHeight - c) / 2 + "px"
        });
        a = [];
        a = [];
        for (c =
            0; c < language.length; c++) {
            var d = $("<div></div>"),
                e = language[c].language;
            $(d).css({
                width: "80px",
                height: "35px",
                position: "absolute"
            });
            $(d).css({
                left: "60px",
                top: 45 * c + 10 + "px"
            });
            $(d).html(e);
            d.attr("language", e);
            a.push(d);
            $(b.contentBox).append($(a[c]));
            $(a[c]).css({
                "font-size": "20px",
                "text-align": "center",
                "line-height": "35px",
                "vertical-align": "middle",
                color: "#ffffff"
            });
            $(a[c]).css({
                "font-family": "Tahoma",
                "border-radius": "5px",
                position: "absolute"
            });
            $(a[c]).css({
                cursor: "pointer"
            });
            $(a[c]).bind(_event._end,
                function() {
                    changeLanguage($(this).attr("language"));
                    b.hideBox()
                });
            $(a[c]).bind(_event._enter, function() {
                $(this).css({
                    background: "#transparent",
                    border: "2px solid #ff8040"
                })
            });
            $(a[c]).bind(_event._end, function() {
                $(this).css({
                    background: "transparent",
                    border: ""
                })
            });
            $(a[c]).bind(_event._leave, function() {
                $(this).css({
                    background: "transparent",
                    border: ""
                })
            })
        }
        this.initEvent();
        $(this.background).css({
            display: "none"
        });
        $(this.contentBox).css({
            display: "none"
        })
    };
languageChange.prototype.onResize = function() {
    var a = 45 * language.length + 10;
    $(this.background).css({
        width: windowWidth + "px",
        height: windowHeight + "px"
    });
    $(this.contentBox).css({
        width: "200px",
        height: a + "px"
    });
    $(this.contentBox).css({
        left: (windowWidth - 200) / 2 + "px",
        top: (windowHeight - a) / 2 + "px"
    })
};
languageChange.prototype.hideBox = function() {
    $(this.background).fadeOut(1E3);
    $(this.contentBox).fadeOut(1E3);
    this.showing = !1
};
languageChange.prototype.showshow = function() {
    $(this.background).fadeIn(1E3);
    $(this.contentBox).fadeIn(1E3);
    this.showing = !0
};
languageChange.prototype.getShowStatu = function() {
    return this.showing
};
languageChange.prototype.initEvent = function() {
    var a = this;
    $(this.background).bind(_event._end, function() {
        a.hideBox();
        a.showing = !1
    })
};

function initMoreButton(a, b, c, d) {
    this.name = b;
    this.moreButtonString = "<div class='moreButton' id='" + b + "'></div>";
    this.moreButton = $(this.moreButtonString);
    this.moreImg = $("<div><img src='" + c + "' class='moreImg'/></div>");
    this.moreLable = new label(d, this.moreButton);
    this.moreLable.setLabelPosition(35, 7);
    a.append(this.moreButton);
    $(this.moreButton).append(this.moreImg);
    $(this.moreButton).append(this.moreLable);
    $(this.moreLable).css({
        "vertical-align": "middle"
    });
    $(this.moreButton).css({
        "text-shadow": "1px 1px " +
            colorDiv(bookConfig.toolbarColor, 40)
    });
    $(this.moreButton).css({
        color: "#ffffff"
    });
    $(this.moreButton).mouseEnterGradient(bookConfig.toolbarColor, colorDiv(bookConfig.toolbarColor, 30), colorAdd(bookConfig.toolbarColor, 105));
    $(this.moreButton).css({
        cursor: "pointer"
    });
    return this
}
initMoreButton.prototype.setPosition = function(a, b) {
    $(this.moreButton).css({
        left: b + "px"
    });
    $(this.moreButton).css({
        top: a + "px"
    })
};
initMoreButton.prototype.changeIcon = function(a) {
    this.moreImg.empty().append("<img src='" + a + "' class='moreImg'/>")
};
initMoreButton.prototype.src = function() {
    return this.moreImg.attr("src")
};
initMoreButton.prototype.bind = function(a, b) {
    $(this.moreButton).bind(a, b)
};
initMoreButton.prototype.hide = function() {
    $(this.moreButton).css({
        display: "none"
    })
};
initMoreButton.prototype.show = function() {
    $(this.moreButton).css({
        display: "block"
    })
};
initMoreButton.prototype.changeButtonColor = function(a) {
    $(this.moreImg).changeButtonColor(a)
};
initMoreButton.prototype.setCaption = function(a) {
    this.moreLable.setCaption(a)
};
var isMoreShow = !1,
    moreConfig = {
        autoPlayButtonVisible: !1,
        zoomButtonEnable: !1,
        thumbButtonEnable: !1,
        shareButtonEnable: !1,
        searchButtonEnable: !1,
        bookmarkButtonEnable: !1,
        downloadButtonVisible: !1,
        homeButtonVisible: !1,
        printButtonVisible: !1,
        bgSoundButtonVisible: !1,
        helpButtonVisible: !1,
        aboutButtonVisible: !1,
        languageButtonVisible: !1,
        flipButtonVisible: !1
    };

function initMoreBar() {
    var a = this;
    this.moreBar = $("<div style='display:none;opacity:0;'>");
    this.moreBar.css("z-index", 2002);
    this.moreBar.css("bottom", "38px");
    this.moreBar.css("right", "300px");
    this.moreBar.css({
        width: "160px",
        position: "absolute",
        background: bookConfig.toolbarColor,
        "overflow-y": "auto"
    });
    this.moreBar.addBorderShadow(bookConfig.toolbarColor, 3, 3);
    this.btnLast = new initMoreButton(this.moreBar, "moreBtnLast", toolBarIconsURL[1], getLanguage("btnLastPage", "Last"));
    this.btnNext = new initMoreButton(this.moreBar,
        "moreBtnNext", toolBarIconsURL[2], getLanguage("btnNextPage", "Next"));
    this.btnPrevious = new initMoreButton(this.moreBar, "moreBtnPrevious", toolBarIconsURL[3], getLanguage("btnPrePage", "Previous"));
    this.btnFirst = new initMoreButton(this.moreBar, "moreBtnFirst", toolBarIconsURL[4], getLanguage("btnFirstPage", "First"));
    this.btnZoom = new initMoreButton(this.moreBar, "moreBtnZoom", toolBarIconsURL[5], getLanguage("btnZoomIn", "Zoom In"));
    this.btnAutoPlay = new initMoreButton(this.moreBar, "moreBtnAutoPlay", toolBarIconsURL[7],
        getLanguage("btnAutoFlip", "Auto Flip"));
    this.btnThumb = new initMoreButton(this.moreBar, "moreBtnThumb", toolBarIconsURL[9], getLanguage("btnThumb", "Thumbnails"));
    this.btnShare = new initMoreButton(this.moreBar, "moreBtnShare", toolBarIconsURL[10], getLanguage("btnSocialShare", "Share"));
    this.btnSearch = new initMoreButton(this.moreBar, "moreBtnSearch", toolBarIconsURL[11], getLanguage("btnSearch", "Search"));
    this.btnBookMark = new initMoreButton(this.moreBar, "moreBtnBookMark", toolBarIconsURL[14], getLanguage("btnBookMark",
        "Book Mark"));
    this.btnDownload = new initMoreButton(this.moreBar, "moreBtnDownload", toolBarIconsURL[12], getLanguage("btnDownload", "Download"));
    this.btnHome = new initMoreButton(this.moreBar, "moreBtnHome", toolBarIconsURL[13], getLanguage("btnGoToHome", "Home"));
    this.btnPrint = new initMoreButton(this.moreBar, "moreBtnPrint", toolBarIconsURL[21], getLanguage("btnPrint", "Print"));
    this.btnSound = new initMoreButton(this.moreBar, "moreBtnSound", toolBarIconsURL[15], getLanguage("btnSoundOn", "soundOn"));
    this.btnHelp = new initMoreButton(this.moreBar,
        "moreBtnHelp", toolBarIconsURL[22], getLanguage("btnHelp", "Help"));
    this.btnAbout = new initMoreButton(this.moreBar, "moreBtnAbout", toolBarIconsURL[23], getLanguage("btnAbout", "About"));
    this.btnLanguage = new initMoreButton(this.moreBar, "moreBtnLanguage", toolBarIconsURL[25], getLanguage("btnLanguage", "LanguageChange"));
    this.printBody = new printBar(tmpContainer);
    this.helpBody = new helpBar(tmpContainer);
    this.aboutBody = new aboutBar(tmpContainer);
    this.sharePanel = new sharePanel(tmpContainer);
    this.languagePanel = new languageChange(tmpContainer);
    $.fn.extend(this, {
        showMoreBar: function() {
            a.moreBar.css("display", "block");
            a.moreBar.animate({
                opacity: 1
            }, 200, "linear")
        },
        hideMoreBar: function() {
            a.moreBar.animate({
                opacity: 0
            }, 200, "linear", function() {
                a.moreBar.css("display", "none")
            })
        },
        setMorePosition: function(b, c, d) {
            void 0 == d && (d = ["right", "bottom"]);
            a.moreBar.css(d[0], b + "px");
            a.moreBar.css(d[1], c + "px")
        }
    });
    tmpContainer.append(this.moreBar);
    (!moreConfig.autoPlayButtonVisible || !userConfig.autoPlayButtonVisible) && this.btnAutoPlay.hide();
    (!moreConfig.zoomButtonEnable ||
        !zoomButtonEnable) && this.btnZoom.hide();
    (!moreConfig.thumbButtonEnable || !thumbButtonEnable) && this.btnThumb.hide();
    (!moreConfig.shareButtonEnable || !shareButtonEnable) && this.btnShare.hide();
    (!moreConfig.searchButtonEnable || !searchButtonEnable) && this.btnSearch.hide();
    (!moreConfig.bookmarkButtonEnable || !bookmarkButtonEnable) && this.btnBookMark.hide();
    (!moreConfig.downloadButtonVisible || !userConfig.downloadButtonVisible) && this.btnDownload.hide();
    (!moreConfig.homeButtonVisible || !userConfig.homeButtonVisible) &&
    this.btnHome.hide();
    (!moreConfig.printButtonVisible || !userConfig.printButtonVisible) && this.btnPrint.hide();
    (!moreConfig.bgSoundButtonVisible || !userConfig.bgSoundButtonVisible) && this.btnSound.hide();
    (!moreConfig.helpButtonVisible || !userConfig.helpButtonVisible) && this.btnHelp.hide();
    (!moreConfig.aboutButtonVisible || !userConfig.aboutButtonVisible) && this.btnAbout.hide();
    (!moreConfig.languageButtonVisible || 1 >= language.length) && this.btnLanguage.hide();
    moreConfig.flipButtonVisible || (this.btnLast.hide(),
        this.btnNext.hide(), this.btnPrevious.hide(), this.btnFirst.hide());
    this.initEvent()
}
initMoreBar.prototype.onResize = function(a, b) {
    isMoreShow = !1;
    var c = 0;
    shareButtonTop = function(a) {
        return 8 + 35 * a
    };
    moreConfig.flipButtonVisible ? (this.btnLast.setPosition(shareButtonTop(c), 10), c++, this.btnNext.setPosition(shareButtonTop(c), 10), c++, this.btnPrevious.setPosition(shareButtonTop(c), 10), c++, this.btnFirst.setPosition(shareButtonTop(c), 10), c++, this.btnFirst.show(), this.btnPrevious.show(), this.btnNext.show(), this.btnLast.show()) : (this.btnFirst.hide(), this.btnPrevious.hide(), this.btnNext.hide(), this.btnLast.hide());
    moreConfig.autoPlayButtonVisible && userConfig.autoPlayButtonVisible ? (this.btnAutoPlay.setPosition(shareButtonTop(c), 10), this.btnAutoPlay.show(), c++) : this.btnAutoPlay.hide();
    moreConfig.zoomButtonEnable && zoomButtonEnable ? (this.btnZoom.setPosition(shareButtonTop(c), 10), this.btnZoom.show(), c++) : this.btnZoom.hide();
    moreConfig.thumbButtonEnable && thumbButtonEnable ? (this.btnThumb.setPosition(shareButtonTop(c), 10), this.btnThumb.show(), c++) : this.btnThumb.hide();
    moreConfig.shareButtonEnable && shareButtonEnable ?
        (this.btnShare.setPosition(shareButtonTop(c), 10), this.btnShare.show(), c++) : this.btnShare.hide();
    moreConfig.searchButtonEnable && searchButtonEnable ? (this.btnSearch.setPosition(shareButtonTop(c), 10), this.btnSearch.show(), c++) : this.btnSearch.hide();
    moreConfig.bookmarkButtonEnable && bookmarkButtonEnable ? (this.btnBookMark.setPosition(shareButtonTop(c), 10), this.btnBookMark.show(), c++) : this.btnBookMark.hide();
    moreConfig.downloadButtonVisible && userConfig.downloadButtonVisible ? (this.btnDownload.setPosition(shareButtonTop(c),
        10), this.btnDownload.show(), c++) : this.btnDownload.hide();
    moreConfig.homeButtonVisible && userConfig.homeButtonVisible ? (this.btnHome.setPosition(shareButtonTop(c), 10), this.btnHome.show(), c++) : this.btnHome.hide();
    moreConfig.printButtonVisible && userConfig.printButtonVisible ? (this.btnPrint.setPosition(shareButtonTop(c), 10), this.btnPrint.show(), c++) : this.btnPrint.hide();
    moreConfig.bgSoundButtonVisible && userConfig.bgSoundButtonVisible ? (this.btnSound.setPosition(shareButtonTop(c), 10), this.btnSound.show(),
        c++) : this.btnSound.hide();
    moreConfig.helpButtonVisible && userConfig.helpButtonVisible ? (this.btnHelp.setPosition(shareButtonTop(c), 10), this.btnHelp.show(), c++) : this.btnHelp.hide();
    moreConfig.aboutButtonVisible && userConfig.aboutButtonVisible ? (this.btnAbout.setPosition(shareButtonTop(c), 10), this.btnAbout.show(), c++) : this.btnAbout.hide();
    moreConfig.languageButtonVisible && 1 < language.length ? (this.btnLanguage.setPosition(shareButtonTop(c), 10), this.btnLanguage.show(), c++) : this.btnLanguage.hide();
    0 == c ? (a.css({
            display: "none"
        }),
        null != b && b.css({
            display: "none"
        }), this.hideMoreBar()) : (a.css({
        display: "block"
    }), null != b && b.css({
        display: "block"
    }), this.moreBar.css({
        height: Math.min(shareButtonTop(c), 250) + "px"
    }));
    this.changeButtonColor(bookConfig.iconColor);
    this.printBody.onResize();
    this.helpBody.onResize();
    this.aboutBody.onResize();
    this.sharePanel.onResize();
    this.languagePanel.onResize()
};
initMoreBar.prototype.height = function() {
    return this.moreBar.height()
};
initMoreBar.prototype.initEvent = function() {
    var a = this;
    this.btnLast.bind(_event._end, function() {
        a.lastPage();
        moreBar.hideMoreBar();
        isMoreShow = !1
    });
    this.btnNext.bind(_event._end, function() {
        a.nextPage();
        moreBar.hideMoreBar();
        isMoreShow = !1
    });
    this.btnPrevious.bind(_event._end, function() {
        a.prePage();
        moreBar.hideMoreBar();
        isMoreShow = !1
    });
    this.btnFirst.bind(_event._end, function() {
        a.firstPage();
        moreBar.hideMoreBar();
        isMoreShow = !1
    });
    this.btnZoom.bind(_event._end, function() {
        if (2 == bookType) {
            if (isIE10()) {
                alert(IE10_LIMIT);
                return
            }
            windowWidth < windowHeight ? (changeShowBook(1), bookType = 1, setCurrentIndexTextField($(singlePageBook).data().currentPageIndex), $(singlePageBook).data().gotoPage(zoomBook.currentIndex)) : (changeShowBook(0), bookType = 0, setCurrentIndexTextField(flipBook.currentPageIndex, !0), flipBook.gotoPage(zoomBook.currentIndex));
            thumbnail.clearHighLight();
            thumbnail.setHighLight(zoomBook.currentIndex);
            a.btnZoom.changeIcon(toolBarIconsURL[5]);
            a.btnZoom.setCaption(getLanguage("btnZoomIn", "Zoom In"))
        } else zoomBook.currentIndex =
            flipBook.currentPageIndex, zoomBook.showPage.fillContent(zoomBook.currentIndex), changeShowBook(2), bookType = 2, a.btnZoom.changeIcon(toolBarIconsURL[6]), a.btnZoom.setCaption(getLanguage("btnZoomOut", "Zoom Out")), setCurrentIndexTextField(zoomBook.currentIndex, !1), thumbnail.clearHighLight(), thumbnail.setHighLight(zoomBook.currentIndex), auto_player.isPlaying() && (auto_player.stop(), a.btnAutoPlay.changeIcon(toolBarIconsURL[8]), a.btnAutoPlay.setCaption(getLanguage("btnStopAutoFlip", "Stop Auto Flip")));
        a.btnZoom.changeButtonColor(bookConfig.iconColor);
        a.btnAutoPlay.changeButtonColor(bookConfig.iconColor);
        moreBar.hideMoreBar();
        isMoreShow = !1
    });
    this.btnAutoPlay.bind(_event._end, function() {
        auto_player.isPlaying() ? (auto_player.stop(), a.btnAutoPlay.changeIcon(toolBarIconsURL[7]), a.btnAutoPlay.setCaption(getLanguage("btnAutoFlip", "Auto Flip"))) : (auto_player.start(), a.btnAutoPlay.changeIcon(toolBarIconsURL[8]), a.btnAutoPlay.setCaption(getLanguage("btnStopAutoFlip", "Stop Auto Flip")));
        a.btnAutoPlay.changeButtonColor(bookConfig.iconColor);
        moreBar.hideMoreBar();
        isMoreShow = !1
    });
    this.btnThumb.bind(_event._end, function() {
        thumbnail.getShowStatu() ? thumbnail.hideBox() : thumbnail.showshow();
        moreBar.hideMoreBar();
        isMoreShow = !1
    });
    this.btnShare.bind(_event._end, function() {
        a.sharePanel.getShowStatu() ? a.sharePanel.hideBox() : a.sharePanel.showshow();
        moreBar.hideMoreBar();
        isMoreShow = !1
    });
    this.btnShare.bind(_event._down, function() {
        return !1
    });
    this.btnPrint.bind(_event._end, function() {
        a.printBody.getShowStatu() ? a.printBody.hideBox() : a.printBody.showshow();
        moreBar.hideMoreBar();
        isMoreShow = !1
    });
    this.btnSearch.bind(_event._end, function() {
        frmSearch.isSearchShow ? frmSearch.closeForm() : frmSearch.showForm();
        moreBar.hideMoreBar();
        isMoreShow = !1
    });
    this.btnBookMark.bind(_event._end, function() {
        frmBookmark.getShowStatu() ? frmBookmark.closeForm() : frmBookmark.showForm();
        moreBar.hideMoreBar();
        isMoreShow = !1
    });
    this.btnDownload.bind(_event._end, function() {
        "" != userConfig.downloadURL && (window.location = userConfig.downloadURL);
        moreBar.hideMoreBar();
        isMoreShow = !1
    });
    this.btnSound.bind(_event._end,
        function() {
            isPlaying ? (a.btnSound.changeIcon(toolBarIconsURL[16]), a.btnSound.setCaption(getLanguage("btnSoundOff", "soundOff"))) : (a.btnSound.changeIcon(toolBarIconsURL[15]), a.btnSound.setCaption(getLanguage("btnSoundOn", "soundOn")));
            a.btnSound.changeButtonColor(bookConfig.iconColor);
            moreBar.hideMoreBar();
            isMoreShow = !1
        });
    this.btnHome.bind(_event._end, function() {
        if (void 0 != userConfig.homeURL && "" != userConfig.homeURL) {
            var a = userConfig.homeURL;
            "http" != a.substr(0, 4) && (a = "http://" + a);
            window.open(a, "_tab")
        }
        moreBar.hideMoreBar();
        isMoreShow = !1
    });
    this.btnHelp.bind(_event._end, function() {
        a.helpBody.getShowStatu() ? a.helpBody.hideBox() : a.helpBody.showshow();
        moreBar.hideMoreBar();
        isMoreShow = !1
    });
    this.btnAbout.bind(_event._end, function() {
        a.aboutBody.getShowStatu() ? a.aboutBody.hideBox() : a.aboutBody.showshow();
        moreBar.hideMoreBar();
        isMoreShow = !1
    });
    this.btnLanguage.bind(_event._end, function() {
        a.languagePanel.getShowStatu() ? a.languagePanel.hideBox() : a.languagePanel.showshow();
        moreBar.hideMoreBar();
        isMoreShow = !1
    })
};
initMoreBar.prototype.changeButtonColor = function(a) {
    moreConfig.flipButtonVisible && (this.btnLast.changeIcon(toolBarIconsURL[1]), this.btnLast.setCaption(getLanguage("btnLastPage", "Last")), this.btnNext.changeIcon(toolBarIconsURL[2]), this.btnNext.setCaption(getLanguage("btnNextPage", "Next")), this.btnPrevious.changeIcon(toolBarIconsURL[3]), this.btnPrevious.setCaption(getLanguage("btnPrePage", "Previous")), this.btnFirst.changeIcon(toolBarIconsURL[4]), this.btnFirst.setCaption(getLanguage("btnFirstPage", "First")));
    moreConfig.thumbButtonEnable && thumbButtonEnable && (this.btnThumb.changeIcon(toolBarIconsURL[9]), this.btnThumb.setCaption(getLanguage("btnThumb", "Thumbnails")));
    moreConfig.shareButtonEnable && shareButtonEnable && (this.btnShare.changeIcon(toolBarIconsURL[10]), this.btnShare.setCaption(getLanguage("btnSocialShare", "Share")));
    moreConfig.searchButtonEnable && searchButtonEnable && (this.btnSearch.changeIcon(toolBarIconsURL[11]), this.btnSearch.setCaption(getLanguage("btnSearch", "Search")));
    moreConfig.bookmarkButtonEnable &&
        bookmarkButtonEnable && (this.btnBookMark.changeIcon(toolBarIconsURL[14]), this.btnBookMark.setCaption(getLanguage("btnBookMark", "Book Mark")));
    moreConfig.downloadButtonVisible && userConfig.downloadButtonVisible && (this.btnDownload.changeIcon(toolBarIconsURL[12]), this.btnDownload.setCaption(getLanguage("btnDownload", "Download")));
    moreConfig.homeButtonVisible && userConfig.homeButtonVisible && (this.btnHome.changeIcon(toolBarIconsURL[13]), this.btnHome.setCaption(getLanguage("btnGoToHome", "Home")));
    moreConfig.printButtonVisible &&
        userConfig.printButtonVisible && (this.btnPrint.changeIcon(toolBarIconsURL[21]), this.btnPrint.setCaption(getLanguage("btnPrint", "Print")));
    moreConfig.helpButtonVisible && userConfig.helpButtonVisible && (this.btnHelp.changeIcon(toolBarIconsURL[22]), this.btnHelp.setCaption(getLanguage("btnHelp", "Help")));
    moreConfig.aboutButtonVisible && userConfig.aboutButtonVisible && (this.btnAbout.changeIcon(toolBarIconsURL[23]), this.btnAbout.setCaption(getLanguage("btnAbout", "About")));
    moreConfig.languageButtonVisible &&
        1 < language.length && (this.btnLanguage.changeIcon(toolBarIconsURL[25]), this.btnLanguage.setCaption(getLanguage("btnLanguage", "LanguageChange")));
    moreConfig.zoomButtonEnable && zoomButtonEnable && (2 == bookType ? (this.btnZoom.changeIcon(toolBarIconsURL[6]), this.btnZoom.setCaption(getLanguage("btnZoomOut", "Zoom Out"))) : (this.btnZoom.changeIcon(toolBarIconsURL[5]), this.btnZoom.setCaption(getLanguage("btnZoomIn", "Zoom In"))), this.btnZoom.changeButtonColor(bookConfig.iconColor));
    moreConfig.autoPlayButtonVisible &&
        userConfig.autoPlayButtonVisible && (void 0 != auto_player && null != auto_player && (auto_player.isPlaying() ? (this.btnAutoPlay.changeIcon(toolBarIconsURL[8]), this.btnAutoPlay.setCaption(getLanguage("btnStopAutoFlip", "Stop Auto Flip"))) : (this.btnAutoPlay.changeIcon(toolBarIconsURL[7]), this.btnAutoPlay.setCaption(getLanguage("btnAutoFlip", "Auto Flip")))), this.btnAutoPlay.changeButtonColor(bookConfig.iconColor));
    moreConfig.bgSoundButtonVisible && userConfig.bgSoundButtonVisible && void 0 != isPlaying && (isPlaying ? (this.btnSound.changeIcon(toolBarIconsURL[15]),
        this.btnSound.setCaption(getLanguage("btnSoundOn", "soundOn"))) : (this.btnSound.changeIcon(toolBarIconsURL[16]), this.btnSound.setCaption(getLanguage("btnSoundOff", "soundOff"))), this.btnSound.changeButtonColor(bookConfig.iconColor));
    moreConfig.homeButtonVisible && userConfig.homeButtonVisible && this.btnHome.changeButtonColor(a);
    moreConfig.downloadButtonVisible && userConfig.downloadButtonVisible && this.btnDownload.changeButtonColor(a);
    moreConfig.printButtonVisible && userConfig.printButtonVisible && this.btnPrint.changeButtonColor(a);
    moreConfig.thumbButtonEnable && thumbButtonEnable && this.btnThumb.changeButtonColor(a);
    moreConfig.zoomButtonEnable && zoomButtonEnable && this.btnZoom.changeButtonColor(a);
    moreConfig.bookmarkButtonEnable && bookmarkButtonEnable && this.btnBookMark.changeButtonColor(a);
    moreConfig.shareButtonEnable && shareButtonEnable && this.btnShare.changeButtonColor(a);
    moreConfig.autoPlayButtonVisible && userConfig.autoPlayButtonVisible && this.btnAutoPlay.changeButtonColor(a);
    moreConfig.bgSoundButtonVisible && userConfig.bgSoundButtonVisible &&
        this.btnSound.changeButtonColor(a);
    moreConfig.helpButtonVisible && userConfig.helpButtonVisible && this.btnHelp.changeButtonColor(a);
    moreConfig.aboutButtonVisible && userConfig.aboutButtonVisible && this.btnAbout.changeButtonColor(a);
    moreConfig.languageButtonVisible && 1 < language.length && this.btnLanguage.changeButtonColor(a);
    moreConfig.flipButtonVisible && (this.btnLast.changeButtonColor(a), this.btnNext.changeButtonColor(a), this.btnPrevious.changeButtonColor(a), this.btnFirst.changeButtonColor(a));
    moreConfig.searchButtonEnable &&
        searchButtonEnable && this.btnSearch.changeButtonColor(a)
};
initMoreBar.prototype.nextPage = function() {
    rightToLeft ? previousPageFun() : nextPageFun()
};
initMoreBar.prototype.prePage = function() {
    rightToLeft ? nextPageFun() : previousPageFun()
};
initMoreBar.prototype.firstPage = function() {
    rightToLeft ? lastPageFun() : firstPageFun()
};
initMoreBar.prototype.lastPage = function() {
    rightToLeft ? firstPageFun() : lastPageFun()
};
initMoreBar.prototype.changeLanguage = function() {
    this.btnLast.setCaption(getLanguage("btnLastPage", "Last"));
    this.btnNext.setCaption(getLanguage("btnNextPage", "Next"));
    this.btnPrevious.setCaption(getLanguage("btnPrePage", "Previous"));
    this.btnFirst.setCaption(getLanguage("btnFirstPage", "First"));
    this.btnZoom.setCaption(2 == bookType ? getLanguage("btnZoomOut", "Zoom Out") : getLanguage("btnZoomIn", "Zoom In"));
    this.btnAutoPlay.setCaption(auto_player.isPlaying() ? getLanguage("btnStopAutoFlip", "Stop Auto Flip") :
        getLanguage("btnAutoFlip", "Auto Flip"));
    this.btnShare.setCaption(getLanguage("btnSocialShare", "Share"));
    this.btnSearch.setCaption(getLanguage("btnSearch", "Search"));
    this.btnBookMark.setCaption(getLanguage("btnBookMark", "Book Mark"));
    this.btnDownload.setCaption(getLanguage("btnDownload", "Download"));
    this.btnHome.setCaption(getLanguage("btnGoToHome", "Home"));
    this.btnPrint.setCaption(getLanguage("btnPrint", "Print"));
    this.btnHelp.setCaption(getLanguage("btnHelp", "Help"));
    this.btnAbout.setCaption(getLanguage("btnAbout",
        "About"));
    this.btnLanguage.setCaption(getLanguage("btnLanguage", "languageChange"));
    this.btnSound.setCaption(isPlaying ? getLanguage("btnSoundOn", "soundOn") : getLanguage("btnSoundOff", "soundOff"));
    rightToLeft && (this.btnFirst.setCaption(getLanguage("btnLastPage", "Last")), this.btnLast.setCaption(getLanguage("btnFirstPage", "First")), this.btnNext.setCaption(getLanguage("btnPrePage", "Previous")), this.btnPrevious.setCaption(getLanguage("btnNextPage", "Next")))
};
var hexcase = 0,
    b64pad = "",
    chrsz = 8;

function compareov() {
    var a = Date.parse(new Date);
    return orgt(a) === vldt(a)
}

function orgt(a) {
    return binl2hex(core_hx(str2binl(a), a.length * chrsz))
}

function vldt(a) {
    return binl2hex(core_hx(str2binl(a), a.length * chrsz))
}

function core_hx(a, b) {
    a[b >> 5] |= 128 << b % 32;
    a[(b + 64 >>> 9 << 4) + 14] = b;
    for (var c = 1732584193, d = -271733879, e = -1732584194, f = 271733878, j = 0; j < a.length; j += 16) var g = c,
        k = d,
        m = e,
        n = f,
        c = hx_ff(c, d, e, f, a[j + 0], 7, -680876936),
        f = hx_ff(f, c, d, e, a[j + 1], 12, -389564586),
        e = hx_ff(e, f, c, d, a[j + 2], 17, 606105819),
        d = hx_ff(d, e, f, c, a[j + 3], 22, -1044525330),
        c = hx_ff(c, d, e, f, a[j + 4], 7, -176418897),
        f = hx_ff(f, c, d, e, a[j + 5], 12, 1200080426),
        e = hx_ff(e, f, c, d, a[j + 6], 17, -1473231341),
        d = hx_ff(d, e, f, c, a[j + 7], 22, -45705983),
        c = hx_ff(c, d, e, f, a[j + 8], 7, 1770035416),
        f = hx_ff(f, c, d, e, a[j + 9], 12, -1958414417),
        e = hx_ff(e, f, c, d, a[j + 10], 17, -42063),
        d = hx_ff(d, e, f, c, a[j + 11], 22, -1990404162),
        c = hx_ff(c, d, e, f, a[j + 12], 7, 1804603682),
        f = hx_ff(f, c, d, e, a[j + 13], 12, -40341101),
        e = hx_ff(e, f, c, d, a[j + 14], 17, -1502002290),
        d = hx_ff(d, e, f, c, a[j + 15], 22, 1236535329),
        c = hx_gg(c, d, e, f, a[j + 1], 5, -165796510),
        f = hx_gg(f, c, d, e, a[j + 6], 9, -1069501632),
        e = hx_gg(e, f, c, d, a[j + 11], 14, 643717713),
        d = hx_gg(d, e, f, c, a[j + 0], 20, -373897302),
        c = hx_gg(c, d, e, f, a[j + 5], 5, -701558691),
        f = hx_gg(f, c, d, e, a[j + 10], 9, 38016083),
        e = hx_gg(e,
            f, c, d, a[j + 15], 14, -660478335),
        d = hx_gg(d, e, f, c, a[j + 4], 20, -405537848),
        c = hx_gg(c, d, e, f, a[j + 9], 5, 568446438),
        f = hx_gg(f, c, d, e, a[j + 14], 9, -1019803690),
        e = hx_gg(e, f, c, d, a[j + 3], 14, -187363961),
        d = hx_gg(d, e, f, c, a[j + 8], 20, 1163531501),
        c = hx_gg(c, d, e, f, a[j + 13], 5, -1444681467),
        f = hx_gg(f, c, d, e, a[j + 2], 9, -51403784),
        e = hx_gg(e, f, c, d, a[j + 7], 14, 1735328473),
        d = hx_gg(d, e, f, c, a[j + 12], 20, -1926607734),
        c = hx_hh(c, d, e, f, a[j + 5], 4, -378558),
        f = hx_hh(f, c, d, e, a[j + 8], 11, -2022574463),
        e = hx_hh(e, f, c, d, a[j + 11], 16, 1839030562),
        d = hx_hh(d, e, f, c, a[j +
            14], 23, -35309556),
        c = hx_hh(c, d, e, f, a[j + 1], 4, -1530992060),
        f = hx_hh(f, c, d, e, a[j + 4], 11, 1272893353),
        e = hx_hh(e, f, c, d, a[j + 7], 16, -155497632),
        d = hx_hh(d, e, f, c, a[j + 10], 23, -1094730640),
        c = hx_hh(c, d, e, f, a[j + 13], 4, 681279174),
        f = hx_hh(f, c, d, e, a[j + 0], 11, -358537222),
        e = hx_hh(e, f, c, d, a[j + 3], 16, -722521979),
        d = hx_hh(d, e, f, c, a[j + 6], 23, 76029189),
        c = hx_hh(c, d, e, f, a[j + 9], 4, -640364487),
        f = hx_hh(f, c, d, e, a[j + 12], 11, -421815835),
        e = hx_hh(e, f, c, d, a[j + 15], 16, 530742520),
        d = hx_hh(d, e, f, c, a[j + 2], 23, -995338651),
        c = hx_ii(c, d, e, f, a[j + 0], 6, -198630844),
        f = hx_ii(f, c, d, e, a[j + 7], 10, 1126891415),
        e = hx_ii(e, f, c, d, a[j + 14], 15, -1416354905),
        d = hx_ii(d, e, f, c, a[j + 5], 21, -57434055),
        c = hx_ii(c, d, e, f, a[j + 12], 6, 1700485571),
        f = hx_ii(f, c, d, e, a[j + 3], 10, -1894986606),
        e = hx_ii(e, f, c, d, a[j + 10], 15, -1051523),
        d = hx_ii(d, e, f, c, a[j + 1], 21, -2054922799),
        c = hx_ii(c, d, e, f, a[j + 8], 6, 1873313359),
        f = hx_ii(f, c, d, e, a[j + 15], 10, -30611744),
        e = hx_ii(e, f, c, d, a[j + 6], 15, -1560198380),
        d = hx_ii(d, e, f, c, a[j + 13], 21, 1309151649),
        c = hx_ii(c, d, e, f, a[j + 4], 6, -145523070),
        f = hx_ii(f, c, d, e, a[j + 11], 10, -1120210379),
        e = hx_ii(e,
            f, c, d, a[j + 2], 15, 718787259),
        d = hx_ii(d, e, f, c, a[j + 9], 21, -343485551),
        c = safe_add(c, g),
        d = safe_add(d, k),
        e = safe_add(e, m),
        f = safe_add(f, n);
    return [c, d, e, f]
}

function hx_cmn(a, b, c, d, e, f) {
    return safe_add(bit_rol(safe_add(safe_add(b, a), safe_add(d, f)), e), c)
}

function hx_ff(a, b, c, d, e, f, j) {
    return hx_cmn(b & c | ~b & d, a, b, e, f, j)
}

function hx_gg(a, b, c, d, e, f, j) {
    return hx_cmn(b & d | c & ~d, a, b, e, f, j)
}

function hx_hh(a, b, c, d, e, f, j) {
    return hx_cmn(b ^ c ^ d, a, b, e, f, j)
}

function hx_ii(a, b, c, d, e, f, j) {
    return hx_cmn(c ^ (b | ~d), a, b, e, f, j)
}

function safe_add(a, b) {
    var c = (a & 65535) + (b & 65535);
    return (a >> 16) + (b >> 16) + (c >> 16) << 16 | c & 65535
}

function bit_rol(a, b) {
    return a << b | a >>> 32 - b
}

function str2binl(a) {
    for (var b = [], c = (1 << chrsz) - 1, d = 0; d < a.length * chrsz; d += chrsz) b[d >> 5] |= (a.charCodeAt(d / chrsz) & c) << d % 32;
    return b
}

function binl2hex(a) {
    for (var b = hexcase ? "0123456789ABCDEF" : "0123456789abcdef", c = "", d = 0; d < 4 * a.length; d++) c += b.charAt(a[d >> 2] >> 8 * (d % 4) + 4 & 15) + b.charAt(a[d >> 2] >> 8 * (d % 4) & 15);
    return c
};

function orgt(s) {
    return binl2hex(core_hx(str2binl(s), s.length * chrsz));
}
var bookConfig = {
    DownloadButtonVisible: "Hide",
    BookmarkButtonVisible: "Show",
    searchColor: "#00ffff",
    searchAlpha: 0.3,
    leastSearchChar: 0,
    SearchButtonVisible: "Show",
    appLogoIcon: "",
    appLogoLinkURL: "http://fliphtml5.com/",
    HomeURL: "http://fliphtml5.com/",
    appLogoOpenWindow: "Blank",
    bookTitle: "Flip PowerPoint Presentation - 10 ilessons from Steve Jobs",
    bookDescription: "Easily turn normal PowerPoint presentation into HTML5 & jQuery page flipping presentation. And this is a example of flip PowerPoint presentation made from a PPT on Steve Jobs.",
    toolbarColor: "#326C85",
    iconColor: "#FFFFFF",
    pageNumColor: "#000000",
    loadingBackground: "#333333",
    logoHeight: "",
    logoPadding: "",
    HomeButtonVisible: "Show",
    AutoPlayButtonVisible: "Show",
    ShareButtonVisible: "Show",
    ThumbnailsButtonVisible: "Show",
    thumbnailColor: "#808040",
    thumbnailAlpha: 30,
    ZoomButtonVisible: "Show",
    BookMarkButtonVisible: "Show",
    bookmarkBackground: "#000000",
    bookmarkFontColor: "#cccccc",
    SearchButtonVisible: "Show",
    leastSearchChar: 3,
    searchBackground: "#241F1C",
    searchFontColor: "#000000",
    PrintButtonVisible: "Show",
    printWatermarkFile: "",
    BackgroundSoundButtonVisible: "Show",
    BackgroundSoundURL: "",
    BackgroundSoundLoop: -1,
    HelpButtonVisible: "Show",
    helpContentFileURL: "",
    helpWidth: 400,
    helpHeight: 450,
    showHelpContentAtFirst: "No",
    aboutButtonVisible: "Show",
    aboutContactInfoTxt: "You can change the text here",
    AutoPlayButtonVisible: "Show",
    autoPlayAutoStart: "No",
    autoPlayDuration: 3,
    autoPlayLoopCount: 1,
    minZoomWidth: 403,
    minZoomHeight: 518,
    mouseWheelFlip: "yes",
    DownloadButtonVisible: "Show",
    DownloadURL: "",
    bgBeginColor: "#C0C0C0",
    bgEndColor: "#C0C0C0",
    bgMRotation: 90,
    backGroundImgURL: "files/extfile/bg.jpg",
    LeftShadowWidth: 100,
    LeftShadowAlpha: 1,
    RightShadowWidth: 40,
    RightShadowAlpha: 1,
    pageBackgroundColor: "#808080",
    flipshortcutbutton: "Show",
    OriginPageIndex: 1,
    HardPageEnable: "No",
    RightToLeft: "No",
    flippingTime: 0.6,
    retainBookCenter: "Yes",
    totalPagesCaption: "",
    pageNumberCaption: "",
    topMargin: 10,
    bottomMargin: 10,
    leftMargin: 10,
    rightMargin: 10,
    LinkDownColor: "#0000FF",
    LinkAlpha: 0.4,
    OpenWindow: "Blank",
    googleAnalyticsID: "UA-43815984-2",
    language: "English",
    AboutAddress: "",
    AboutEmail: "",
    AboutMobile: "",
    AboutWebsite: "",
    AboutDescription: "",
    AboutAuthor: "",
    totalPageCount: 30,
    largePageWidth: 1684,
    largePageHeight: 1190,
    normalPath: "files/page/",
    largePath: "files/large/",
    thumbPath: "files/thumb/"
}
var pageEditor = [
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    []
];
var language = [{
    language: "english",
    btnFirstPage: "First",
    btnNextPage: "Next",
    btnLastPage: "Last",
    btnPrePage: "Previous",
    btnGoToHome: "Home",
    btnDownload: "Download",
    btnSoundOn: "SoundOn",
    btnSoundOff: "SoundOff",
    btnPrint: "Print",
    btnThumb: "Thumbnails",
    btnBookMark: "Book Mark",
    frmBookMark: "Book Mark",
    btnZoomIn: "Zoom In",
    btnZoomOut: "Zoom Out",
    btnAutoFlip: "Auto Flip",
    btnStopAutoFlip: "Stop Auto Flip",
    btnSocialShare: "Share",
    btnHelp: "Help",
    btnAbout: "About",
    btnSearch: "Search",
    btnMore: "More"
}];
ols = [{
    caption: "Front Cover",
    page: 1,
    level: 0,
    children: []
}, {
    caption: "Birth of G-SHOCK",
    page: 4,
    level: 0,
    children: []
}, {
    caption: "Core Technology",
    page: 6,
    level: 0,
    children: []
}, {
    caption: "GW-A1000",
    page: 10,
    level: 0,
    children: []
}, {
    caption: "Front Cover",
    page: 1,
    level: 0,
    children: []
}, {
    caption: "Birth of G-SHOCK",
    page: 4,
    level: 0,
    children: []
}, {
    caption: "Core Technology",
    page: 6,
    level: 0,
    children: []
}, {
    caption: "GW-A1000",
    page: 10,
    level: 0,
    children: []
}, {
    caption: "10 iLessons From Steve Jobs",
    page: 1,
    level: 0,
    children: []
}, {
    caption: "iLesson 1: Follow Your Heart",
    page: 1,
    level: 0,
    children: []
}, {
    caption: "iLesson 2: Make a Dent in the Universe",
    page: 11,
    level: 0,
    children: []
}, {
    caption: "iLesson 3: Think Different",
    page: 13,
    level: 0,
    children: []
}, {
    caption: "iLesson 4: Sell Dreams, Not Products",
    page: 15,
    level: 0,
    children: []
}, {
    caption: "iLesson 5: Make Products For Yourself",
    page: 17,
    level: 0,
    children: []
}, {
    caption: "iLesson 6: Say No to 1,000 Things",
    page: 19,
    level: 0,
    children: []
}, {
    caption: "iLesson 7: Keep It Simple",
    page: 21,
    level: 0,
    children: []
}, {
    caption: "iLesson 8: Go For Excellence",
    page: 23,
    level: 0,
    children: []
}, {
    caption: "iLesson 9: Break The Rules",
    page: 25,
    level: 0,
    children: []
}, {
    caption: "iLesson 10: You Only Live Once",
    page: 27,
    level: 0,
    children: []
}, {
    caption: "One More Thing",
    page: 29,
    level: 0,
    children: []
}]